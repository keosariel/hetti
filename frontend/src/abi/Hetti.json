{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "publicKey",
          "type": "uint256[2]"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "forceCloseRing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountEther",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRingHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sk",
          "type": "uint256"
        }
      ],
      "name": "privateToPublic",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "publicKey",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "createdBlockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ringHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "dParticipantsNo",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "wParticipantsNo",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountEther",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "c0",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "keyImage",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[]",
          "name": "s",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Hetti.sol",
    "1": "contracts/lib/AltBn128.sol",
    "2": "contracts/lib/LSAG.sol"
  },
  "ast": {
    "absolutePath": "contracts/Hetti.sol",
    "exportedSymbols": {
      "AltBn128": [
        947
      ],
      "Hetti": [
        695
      ],
      "LSAG": [
        1273
      ]
    },
    "id": 696,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "43:23:0"
      },
      {
        "absolutePath": "contracts/lib/AltBn128.sol",
        "file": "./lib/AltBn128.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 696,
        "sourceUnit": 948,
        "src": "68:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/LSAG.sol",
        "file": "./lib/LSAG.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 696,
        "sourceUnit": 1274,
        "src": "97:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Hetti",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 695,
        "linearizedBaseContracts": [
          695
        ],
        "name": "Hetti",
        "nameLocation": "132:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6,
            "mutability": "constant",
            "name": "ringMaxParticipants",
            "nameLocation": "210:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 695,
            "src": "193:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "193:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "232:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Hetti.Ring",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "createdBlockNumber",
                "nameLocation": "270:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "262:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "262:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "amountDeposited",
                "nameLocation": "306:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "298:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "ringHash",
                "nameLocation": "339:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "331:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 11,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "331:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "dParticipantsNo",
                "nameLocation": "363:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "357:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "wParticipantsNo",
                "nameLocation": "394:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "388:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "publicKeys",
                "nameLocation": "451:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "419:42:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                  "typeString": "mapping(uint256 => uint256[2])"
                },
                "typeName": {
                  "id": 21,
                  "keyType": {
                    "id": 17,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "419:31:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                    "typeString": "mapping(uint256 => uint256[2])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 18,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "439:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20,
                    "length": {
                      "hexValue": "32",
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "447:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "439:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "keyImages",
                "nameLocation": "503:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "471:41:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                  "typeString": "mapping(uint256 => uint256[2])"
                },
                "typeName": {
                  "id": 27,
                  "keyType": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "471:31:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                    "typeString": "mapping(uint256 => uint256[2])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 24,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "491:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26,
                    "length": {
                      "hexValue": "32",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "499:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "491:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ring",
            "nameLocation": "247:4:0",
            "nodeType": "StructDefinition",
            "scope": 695,
            "src": "240:279:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "allowedAmounts",
            "nameLocation": "537:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 695,
            "src": "525:141:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$10_storage",
              "typeString": "uint256[10]"
            },
            "typeName": {
              "baseType": {
                "id": 30,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "525:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 32,
              "length": {
                "hexValue": "3130",
                "id": 31,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "533:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "525:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$10_storage_ptr",
                "typeString": "uint256[10]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "32",
                  "id": 33,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "564:7:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2000000000000000000_by_1",
                    "typeString": "int_const 2000000000000000000"
                  },
                  "value": "2"
                },
                {
                  "hexValue": "34",
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "573:7:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4000000000000000000_by_1",
                    "typeString": "int_const 4000000000000000000"
                  },
                  "value": "4"
                },
                {
                  "hexValue": "38",
                  "id": 35,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "582:7:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_8000000000000000000_by_1",
                    "typeString": "int_const 8000000000000000000"
                  },
                  "value": "8"
                },
                {
                  "hexValue": "3136",
                  "id": 36,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "591:8:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_16000000000000000000_by_1",
                    "typeString": "int_const 16000000000000000000"
                  },
                  "value": "16"
                },
                {
                  "hexValue": "3332",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "601:8:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_32000000000000000000_by_1",
                    "typeString": "int_const 32000000000000000000"
                  },
                  "value": "32"
                },
                {
                  "hexValue": "3634",
                  "id": 38,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "619:8:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_64000000000000000000_by_1",
                    "typeString": "int_const 64000000000000000000"
                  },
                  "value": "64"
                },
                {
                  "hexValue": "313238",
                  "id": 39,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "629:9:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_128000000000000000000_by_1",
                    "typeString": "int_const 128000000000000000000"
                  },
                  "value": "128"
                },
                {
                  "hexValue": "323536",
                  "id": 40,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "640:9:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256000000000000000000_by_1",
                    "typeString": "int_const 256000000000000000000"
                  },
                  "value": "256"
                },
                {
                  "hexValue": "353132",
                  "id": 41,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "651:9:0",
                  "subdenomination": "ether",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_512000000000000000000_by_1",
                    "typeString": "int_const 512000000000000000000"
                  },
                  "value": "512"
                }
              ],
              "id": 42,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "554:112:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint72_$9_memory_ptr",
                "typeString": "uint72[9] memory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 46,
            "mutability": "constant",
            "name": "minBlockNumberToCloseRing",
            "nameLocation": "694:25:0",
            "nodeType": "VariableDeclaration",
            "scope": 695,
            "src": "677:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "677:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "722:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "ringsNo",
            "nameLocation": "757:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 695,
            "src": "729:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 47,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "737:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "729:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 48,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "748:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6381d19e",
            "id": 57,
            "mutability": "mutable",
            "name": "rings",
            "nameLocation": "866:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 695,
            "src": "813:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring))"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "822:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "813:45:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring))"
              },
              "valueType": {
                "id": 55,
                "keyType": {
                  "id": 52,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "841:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "833:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$",
                  "typeString": "mapping(uint256 => struct Hetti.Ring)"
                },
                "valueType": {
                  "id": 54,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 53,
                    "name": "Ring",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 29,
                    "src": "852:4:0"
                  },
                  "referencedDeclaration": 29,
                  "src": "852:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                    "typeString": "struct Hetti.Ring"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "943:1415:0",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "receivedEther",
                      "nameLocation": "988:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "980:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "980:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1023:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1023:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66,
                      "name": "floorEtherAndCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "1004:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "980:53:0"
                },
                {
                  "assignments": [
                    72
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "curIndex",
                      "nameLocation": "1101:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "1093:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1093:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "baseExpression": {
                      "id": 73,
                      "name": "ringsNo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1112:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 75,
                    "indexExpression": {
                      "id": 74,
                      "name": "receivedEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1120:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1112:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1093:41:0"
                },
                {
                  "assignments": [
                    79
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "1157:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "1144:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                        "typeString": "struct Hetti.Ring"
                      },
                      "typeName": {
                        "id": 78,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "1144:4:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "1144:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 80,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1164:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring storage ref))"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "id": 81,
                        "name": "receivedEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1170:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1164:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$",
                        "typeString": "mapping(uint256 => struct Hetti.Ring storage ref)"
                      }
                    },
                    "id": 84,
                    "indexExpression": {
                      "id": 83,
                      "name": "curIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1185:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1164:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$29_storage",
                      "typeString": "struct Hetti.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1144:50:0"
                },
                {
                  "condition": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1209:63:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 90,
                                "name": "publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "1235:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 92,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1245:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1235:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1227:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1227:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1227:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 96,
                                "name": "publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "1258:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 98,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1268:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1258:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1250:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 94,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1250:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1250:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 86,
                          "name": "AltBn128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "1210:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                            "typeString": "type(library AltBn128)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "onCurve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 882,
                        "src": "1210:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256,uint256) pure returns (bool)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1210:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "nodeType": "IfStatement",
                  "src": "1205:126:0",
                  "trueBody": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "1274:57:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5075626c6963204b6579206e6f206f6e204375727665",
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1295:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dabb5ffde5dbb91156ec9491e033f245e11893b90613024f0b28333b4c3be3e0",
                                "typeString": "literal_string \"Public Key no on Curve\""
                              },
                              "value": "Public Key no on Curve"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dabb5ffde5dbb91156ec9491e033f245e11893b90613024f0b28333b4c3be3e0",
                                "typeString": "literal_string \"Public Key no on Curve\""
                              }
                            ],
                            "id": 102,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1288:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "1288:32:0"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1479:198:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 119,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79,
                                    "src": "1497:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                      "typeString": "struct Hetti.Ring storage pointer"
                                    }
                                  },
                                  "id": 120,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "publicKeys",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22,
                                  "src": "1497:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 122,
                                "indexExpression": {
                                  "id": 121,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1513:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1497:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 124,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1516:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1497:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 125,
                                "name": "publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "1522:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 127,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1532:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1522:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1497:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 129,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79,
                                    "src": "1554:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                      "typeString": "struct Hetti.Ring storage pointer"
                                    }
                                  },
                                  "id": 130,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "publicKeys",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22,
                                  "src": "1554:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 132,
                                "indexExpression": {
                                  "id": 131,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1570:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1554:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 134,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1573:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1554:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 135,
                                "name": "publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "1579:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 137,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1589:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1579:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1554:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1497:94:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "IfStatement",
                        "src": "1493:174:0",
                        "trueBody": {
                          "id": 144,
                          "nodeType": "Block",
                          "src": "1593:74:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4164647265737320616c726561647920696e2063757272656e742052696e67",
                                    "id": 141,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1618:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_31ca6fa7a65725ceda4cd57841d434d444ed61b0a3d43130333b5511afea1f0d",
                                      "typeString": "literal_string \"Address already in current Ring\""
                                    },
                                    "value": "Address already in current Ring"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_31ca6fa7a65725ceda4cd57841d434d444ed61b0a3d43130333b5511afea1f0d",
                                      "typeString": "literal_string \"Address already in current Ring\""
                                    }
                                  ],
                                  "id": 140,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1611:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1611:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 143,
                              "nodeType": "ExpressionStatement",
                              "src": "1611:41:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 112,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "1448:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 113,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1452:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "1452:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1448:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 147,
                  "initializationExpression": {
                    "assignments": [
                      109
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1441:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "1435:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1435:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 111,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1445:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1435:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1474:3:0",
                      "subExpression": {
                        "id": 116,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1474:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 118,
                    "nodeType": "ExpressionStatement",
                    "src": "1474:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1430:247:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 148,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1756:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "1756:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1780:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1756:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 162,
                  "nodeType": "IfStatement",
                  "src": "1752:98:0",
                  "trueBody": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "1783:67:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 152,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "1797:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                "typeString": "struct Hetti.Ring storage pointer"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "createdBlockNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "1797:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 155,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1823:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "1823:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1838:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1823:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1797:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "1797:42:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 163,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1890:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicKeys",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "1890:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "expression": {
                          "id": 165,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1906:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dParticipantsNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "1906:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1890:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                        "typeString": "uint256[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 169,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1930:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "1890:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage",
                      "typeString": "uint256[2] storage ref"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:49:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1949:22:0",
                    "subExpression": {
                      "expression": {
                        "id": 172,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1949:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "1949:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:22:0"
                },
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 177,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1981:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1981:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 180,
                      "name": "receivedEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2005:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1981:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:37:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 183,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2112:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2112:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 185,
                      "name": "ringMaxParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "2136:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2112:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "nodeType": "IfStatement",
                  "src": "2108:244:0",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2157:195:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 187,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "2199:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                "typeString": "struct Hetti.Ring storage pointer"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ringHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2199:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 191,
                                  "name": "receivedEther",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "2230:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "hexValue": "31",
                                      "id": 192,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2247:7:0",
                                      "subdenomination": "ether",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "id": 193,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2246:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "2230:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 195,
                                "name": "curIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72,
                                "src": "2257:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 190,
                              "name": "createRingHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "2215:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,uint256) view returns (bytes32)"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2215:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2199:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "2199:67:0"
                      },
                      {
                        "expression": {
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 199,
                              "name": "ringsNo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2314:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 201,
                            "indexExpression": {
                              "id": 200,
                              "name": "receivedEther",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "2322:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2314:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2340:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2314:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "2314:27:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "143ad356",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "887:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "publicKey",
                  "nameLocation": "913:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "895:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 58,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "895:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60,
                    "length": {
                      "hexValue": "32",
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "903:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "895:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "894:29:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:0"
            },
            "scope": 695,
            "src": "878:1480:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "2537:1841:0",
              "statements": [
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2552:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "2547:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2547:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2547:6:0"
                },
                {
                  "assignments": [
                    230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 230,
                      "mutability": "mutable",
                      "name": "startGas",
                      "nameLocation": "2571:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "2563:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2563:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 231,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "2582:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2563:28:0"
                },
                {
                  "assignments": [
                    235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "withdrawEther",
                      "nameLocation": "2637:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "2629:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2629:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 237,
                          "name": "amountEther",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "2672:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2686:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "2672:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 236,
                      "name": "floorEtherAndCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "2653:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2653:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2629:65:0"
                },
                {
                  "assignments": [
                    244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 244,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "2767:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "2754:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                        "typeString": "struct Hetti.Ring"
                      },
                      "typeName": {
                        "id": 243,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 242,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "2754:4:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "2754:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 245,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "2774:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring storage ref))"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "id": 246,
                        "name": "withdrawEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "2780:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2774:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$",
                        "typeString": "mapping(uint256 => struct Hetti.Ring storage ref)"
                      }
                    },
                    "id": 249,
                    "indexExpression": {
                      "id": 248,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2795:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2774:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$29_storage",
                      "typeString": "struct Hetti.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2754:47:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 251,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "2853:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2853:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 253,
                      "name": "ringMaxParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "2877:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2853:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 260,
                  "nodeType": "IfStatement",
                  "src": "2849:130:0",
                  "trueBody": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "2898:81:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "416c6c2066756e64732066726f6d2063757272656e742052696e6720686173206265656e2077697468647261776e",
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2919:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f234352c174942021bf48889a19a338692bc0eefa4f273b50dc1a559ed7e3c52",
                                "typeString": "literal_string \"All funds from current Ring has been withdrawn\""
                              },
                              "value": "All funds from current Ring has been withdrawn"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f234352c174942021bf48889a19a338692bc0eefa4f273b50dc1a559ed7e3c52",
                                "typeString": "literal_string \"All funds from current Ring has been withdrawn\""
                              }
                            ],
                            "id": 255,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2912:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2912:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 258,
                        "nodeType": "ExpressionStatement",
                        "src": "2912:56:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 261,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "3088:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ringHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "3088:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3113:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3105:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3105:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3105:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3088:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "3084:88:0",
                  "trueBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3120:52:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "52696e672069736e277420636c6f736564",
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3141:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3ea9a20d74bd81345649d4ddc482aed2a54966e566644e071156d7460cef7958",
                                "typeString": "literal_string \"Ring isn't closed\""
                              },
                              "value": "Ring isn't closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3ea9a20d74bd81345649d4ddc482aed2a54966e566644e071156d7460cef7958",
                                "typeString": "literal_string \"Ring isn't closed\""
                              }
                            ],
                            "id": 268,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3134:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3134:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "3134:27:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 280,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "3202:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "3182:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[2][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 277,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3182:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 278,
                          "length": {
                            "hexValue": "32",
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3190:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "3182:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 279,
                        "nodeType": "ArrayTypeName",
                        "src": "3182:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                          "typeString": "uint256[2][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "ringMaxParticipants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "3232:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3215:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[2] memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 281,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3219:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 283,
                          "length": {
                            "hexValue": "32",
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3227:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "3219:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 284,
                        "nodeType": "ArrayTypeName",
                        "src": "3219:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                          "typeString": "uint256[2][]"
                        }
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3215:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[2] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3182:70:0"
                },
                {
                  "body": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "3305:165:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 299,
                              "name": "publicKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "3319:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[2] memory[] memory"
                              }
                            },
                            "id": 301,
                            "indexExpression": {
                              "id": 300,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "3330:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3319:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 304,
                                          "name": "ring",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3361:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                            "typeString": "struct Hetti.Ring storage pointer"
                                          }
                                        },
                                        "id": 305,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "publicKeys",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 22,
                                        "src": "3361:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                        }
                                      },
                                      "id": 310,
                                      "indexExpression": {
                                        "arguments": [
                                          {
                                            "id": 308,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 227,
                                            "src": "3383:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 307,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3377:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 306,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3377:5:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3377:8:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3361:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                        "typeString": "uint256[2] storage ref"
                                      }
                                    },
                                    "id": 312,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3387:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3361:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3353:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 302,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3353:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3353:37:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 316,
                                          "name": "ring",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3416:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                            "typeString": "struct Hetti.Ring storage pointer"
                                          }
                                        },
                                        "id": 317,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "publicKeys",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 22,
                                        "src": "3416:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                        }
                                      },
                                      "id": 322,
                                      "indexExpression": {
                                        "arguments": [
                                          {
                                            "id": 320,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 227,
                                            "src": "3438:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 319,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3432:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 318,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3432:5:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3432:8:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3416:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                        "typeString": "uint256[2] storage ref"
                                      }
                                    },
                                    "id": 324,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 323,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3442:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3416:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3408:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 314,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3408:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3408:37:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 326,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3335:124:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "src": "3319:140:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "3319:140:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 293,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3275:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 294,
                      "name": "ringMaxParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "3279:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3275:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 330,
                  "initializationExpression": {
                    "expression": {
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3268:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3272:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3268:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 292,
                    "nodeType": "ExpressionStatement",
                    "src": "3268:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3300:3:0",
                      "subExpression": {
                        "id": 296,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3300:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 298,
                    "nodeType": "ExpressionStatement",
                    "src": "3300:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3263:207:0"
                },
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "signatureVerified",
                      "nameLocation": "3530:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "3525:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3525:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 337,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "3592:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                "typeString": "struct Hetti.Ring storage pointer"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ringHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "3592:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 335,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3575:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3575:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3575:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 340,
                        "name": "c0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3640:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 341,
                        "name": "keyImage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3656:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "id": 342,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3678:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 343,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "3693:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 333,
                        "name": "LSAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "3550:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSAG_$1273_$",
                          "typeString": "type(library LSAG)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1272,
                      "src": "3550:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,uint256,uint256[2] memory,uint256[] memory,uint256[2] memory[] memory) view returns (bool)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3550:163:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3525:188:0"
                },
                {
                  "condition": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3728:18:0",
                    "subExpression": {
                      "id": 346,
                      "name": "signatureVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "3729:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 353,
                  "nodeType": "IfStatement",
                  "src": "3724:76:0",
                  "trueBody": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "3748:52:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "496e76616c6964207369676e6174757265",
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3769:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                                "typeString": "literal_string \"Invalid signature\""
                              },
                              "value": "Invalid signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                                "typeString": "literal_string \"Invalid signature\""
                              }
                            ],
                            "id": 348,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3762:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3762:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 351,
                        "nodeType": "ExpressionStatement",
                        "src": "3762:27:0"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 398,
                    "nodeType": "Block",
                    "src": "3932:201:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 365,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 244,
                                    "src": "3950:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                      "typeString": "struct Hetti.Ring storage pointer"
                                    }
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyImages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28,
                                  "src": "3950:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 371,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 369,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 227,
                                      "src": "3971:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 368,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3965:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 367,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3965:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3965:8:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3950:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 373,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3975:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3950:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 374,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "3981:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 376,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3990:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3981:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3950:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 378,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 244,
                                    "src": "4012:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                      "typeString": "struct Hetti.Ring storage pointer"
                                    }
                                  },
                                  "id": 379,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyImages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28,
                                  "src": "4012:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 384,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 382,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 227,
                                      "src": "4033:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4027:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 380,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4027:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4027:8:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4012:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 386,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4037:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4012:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 387,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "4043:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 389,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4052:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4043:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4012:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3950:104:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 397,
                        "nodeType": "IfStatement",
                        "src": "3946:177:0",
                        "trueBody": {
                          "id": 396,
                          "nodeType": "Block",
                          "src": "4056:67:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "5369676e617475726520686173206265656e207573656421",
                                    "id": 393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4081:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c3e44bf18e6303a7bbae9f9f20b3c011adf9ef73b0e6e147c3fd0b00171b2d0f",
                                      "typeString": "literal_string \"Signature has been used!\""
                                    },
                                    "value": "Signature has been used!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c3e44bf18e6303a7bbae9f9f20b3c011adf9ef73b0e6e147c3fd0b00171b2d0f",
                                      "typeString": "literal_string \"Signature has been used!\""
                                    }
                                  ],
                                  "id": 392,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "4074:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4074:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 395,
                              "nodeType": "ExpressionStatement",
                              "src": "4074:34:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 358,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3901:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 359,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "3905:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "3905:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3901:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 399,
                  "initializationExpression": {
                    "expression": {
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 354,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3894:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3898:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3894:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 357,
                    "nodeType": "ExpressionStatement",
                    "src": "3894:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3927:3:0",
                      "subExpression": {
                        "id": 362,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3927:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 364,
                    "nodeType": "ExpressionStatement",
                    "src": "3927:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3889:244:0"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 400,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "4246:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyImages",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "4246:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                        }
                      },
                      "id": 405,
                      "indexExpression": {
                        "expression": {
                          "id": 402,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "4261:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wParticipantsNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "4261:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4246:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                        "typeString": "uint256[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 406,
                      "name": "keyImage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "4285:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "4246:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage",
                      "typeString": "uint256[2] storage ref"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "4246:47:0"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 409,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "4303:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wParticipantsNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "4303:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4327:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4303:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "withdrawEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "4357:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 415,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "4339:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4339:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:32:0"
                }
              ]
            },
            "functionSelector": "62230498",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2373:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2407:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2391:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2391:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "amountEther",
                  "nameLocation": "2425:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2417:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2446:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2438:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "c0",
                  "nameLocation": "2469:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2461:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "keyImage",
                  "nameLocation": "2491:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2473:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 217,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2473:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 219,
                    "length": {
                      "hexValue": "32",
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2481:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2473:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2518:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2501:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 221,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2501:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 222,
                    "nodeType": "ArrayTypeName",
                    "src": "2501:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2381:144:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2537:0:0"
            },
            "scope": 695,
            "src": "2364:2014:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "4489:555:0",
              "statements": [
                {
                  "assignments": [
                    438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 438,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "4538:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4499:49:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                        "typeString": "uint256[2][3]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 435,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4499:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 436,
                          "length": {
                            "hexValue": "32",
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4507:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4499:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 437,
                        "length": {
                          "id": 434,
                          "name": "ringMaxParticipants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "4510:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4499:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$3_storage_ptr",
                          "typeString": "uint256[2][3]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4499:49:0"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "receivedEther",
                      "nameLocation": "4566:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4558:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4558:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 443,
                          "name": "amountEther",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "4601:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4615:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "4601:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 442,
                      "name": "floorEtherAndCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "4582:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4582:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4558:65:0"
                },
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4647:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4634:14:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                        "typeString": "struct Hetti.Ring"
                      },
                      "typeName": {
                        "id": 449,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 448,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "4634:4:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "4634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 451,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4651:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring storage ref))"
                        }
                      },
                      "id": 453,
                      "indexExpression": {
                        "id": 452,
                        "name": "receivedEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "4657:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4651:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$",
                        "typeString": "mapping(uint256 => struct Hetti.Ring storage ref)"
                      }
                    },
                    "id": 455,
                    "indexExpression": {
                      "id": 454,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "4672:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4651:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$29_storage",
                      "typeString": "struct Hetti.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4634:44:0"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "4737:56:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 467,
                              "name": "publicKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "4751:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                                "typeString": "uint256[2] memory[3] memory"
                              }
                            },
                            "id": 469,
                            "indexExpression": {
                              "id": 468,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "4762:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4751:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 470,
                                "name": "r",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "4767:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                                  "typeString": "struct Hetti.Ring storage pointer"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "publicKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "4767:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 473,
                            "indexExpression": {
                              "id": 472,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "4780:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4767:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "src": "4751:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "4751:31:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 461,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "4707:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 462,
                      "name": "ringMaxParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "4711:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4707:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "initializationExpression": {
                    "assignments": [
                      458
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4700:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "4694:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4694:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 460,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4704:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4694:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4732:3:0",
                      "subExpression": {
                        "id": 464,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "4732:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 466,
                    "nodeType": "ExpressionStatement",
                    "src": "4732:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4689:104:0"
                },
                {
                  "assignments": [
                    479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 479,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "4816:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4803:14:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 478,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4803:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 483,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4860:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "4860:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4875:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4860:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 482,
                          "name": "blockhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -5,
                          "src": "4850:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) view returns (bytes32)"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4850:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 488,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "4891:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createdBlockNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "4891:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 490,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "4925:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountDeposited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "4925:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 492,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "4956:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dParticipantsNo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4956:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 494,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "4987:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                          "typeString": "uint256[2] memory[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                          "typeString": "uint256[2] memory[3] memory"
                        }
                      ],
                      "expression": {
                        "id": 480,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4820:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4820:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4820:187:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4803:204:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 498,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "5035:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 497,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5025:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5025:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 430,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "5018:19:0"
                }
              ]
            },
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRingHash",
            "nameLocation": "4394:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "amountEther",
                  "nameLocation": "4417:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4409:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4409:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4438:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4430:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4408:36:0"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4476:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4475:9:0"
            },
            "scope": 695,
            "src": "4385:659:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "5130:711:0",
              "statements": [
                {
                  "assignments": [
                    510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "receivedEther",
                      "nameLocation": "5175:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "5167:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 516,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 512,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "5210:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5219:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "5210:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 511,
                      "name": "floorEtherAndCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "5191:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5191:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5167:60:0"
                },
                {
                  "assignments": [
                    518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 518,
                      "mutability": "mutable",
                      "name": "curIndex",
                      "nameLocation": "5295:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "5287:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5287:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 522,
                  "initialValue": {
                    "baseExpression": {
                      "id": 519,
                      "name": "ringsNo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "5306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 521,
                    "indexExpression": {
                      "id": 520,
                      "name": "receivedEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "5314:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5306:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5287:41:0"
                },
                {
                  "assignments": [
                    525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 525,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "5351:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "5338:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                        "typeString": "struct Hetti.Ring"
                      },
                      "typeName": {
                        "id": 524,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 523,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "5338:4:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "5338:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 526,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "5358:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring storage ref))"
                        }
                      },
                      "id": 528,
                      "indexExpression": {
                        "id": 527,
                        "name": "receivedEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "5364:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5358:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$",
                        "typeString": "mapping(uint256 => struct Hetti.Ring storage ref)"
                      }
                    },
                    "id": 530,
                    "indexExpression": {
                      "id": 529,
                      "name": "curIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "5379:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5358:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$29_storage",
                      "typeString": "struct Hetti.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5338:50:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 532,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "5404:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ringHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "5404:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5429:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5421:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5421:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5421:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5404:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 544,
                  "nodeType": "IfStatement",
                  "src": "5400:94:0",
                  "trueBody": {
                    "id": 543,
                    "nodeType": "Block",
                    "src": "5436:58:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "52696e6720697320616c726561647920636c6f73656421",
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5457:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bdfb7cfc2862f67cc04b53a2497a1bf4eac641084b094e7ae9d896aec68e2c1b",
                                "typeString": "literal_string \"Ring is already closed!\""
                              },
                              "value": "Ring is already closed!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bdfb7cfc2862f67cc04b53a2497a1bf4eac641084b094e7ae9d896aec68e2c1b",
                                "typeString": "literal_string \"Ring is already closed!\""
                              }
                            ],
                            "id": 539,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "5450:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5450:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 542,
                        "nodeType": "ExpressionStatement",
                        "src": "5450:33:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 545,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5508:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5508:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5523:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5508:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 549,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 525,
                          "src": "5527:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                            "typeString": "struct Hetti.Ring storage pointer"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createdBlockNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "5527:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5508:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 552,
                      "name": "minBlockNumberToCloseRing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5554:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5508:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 559,
                  "nodeType": "IfStatement",
                  "src": "5504:165:0",
                  "trueBody": {
                    "id": 558,
                    "nodeType": "Block",
                    "src": "5581:88:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "52696e67206e6565647320746f206d6174757265206c6f6e676572206265666f726520666f72636566756c6c7920636c6f73696e67",
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5602:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_efa53ec431db336e4c7020dd9cbbc01b455f2345a0caf9a064369809829840dc",
                                "typeString": "literal_string \"Ring needs to mature longer before forcefully closing\""
                              },
                              "value": "Ring needs to mature longer before forcefully closing"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_efa53ec431db336e4c7020dd9cbbc01b455f2345a0caf9a064369809829840dc",
                                "typeString": "literal_string \"Ring needs to mature longer before forcefully closing\""
                              }
                            ],
                            "id": 554,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "5595:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5595:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "ExpressionStatement",
                        "src": "5595:63:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 560,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "5705:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$29_storage_ptr",
                          "typeString": "struct Hetti.Ring storage pointer"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ringHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "5705:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 564,
                            "name": "receivedEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "5736:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "hexValue": "31",
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5753:7:0",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "id": 566,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5752:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5736:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 568,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "5763:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 563,
                        "name": "createRingHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "5721:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256) view returns (bytes32)"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5721:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5705:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "5705:64:0"
                },
                {
                  "expression": {
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 572,
                        "name": "ringsNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5807:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 574,
                      "indexExpression": {
                        "id": 573,
                        "name": "receivedEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "5815:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5807:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5833:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5807:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:27:0"
                }
              ]
            },
            "functionSelector": "6a6dcd42",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceCloseRing",
            "nameLocation": "5059:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5091:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "5083:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5083:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5107:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "5099:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5099:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5073:45:0"
            },
            "returnParameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5130:0:0"
            },
            "scope": 695,
            "src": "5050:791:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "5944:547:0",
              "statements": [
                {
                  "assignments": [
                    587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 587,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5962:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "5954:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 586,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5954:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 588,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5954:9:0"
                },
                {
                  "assignments": [
                    590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 590,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "5978:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "5973:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 589,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5973:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 592,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5988:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5973:20:0"
                },
                {
                  "assignments": [
                    594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 594,
                      "mutability": "mutable",
                      "name": "receivedEther",
                      "nameLocation": "6045:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "6037:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 593,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6037:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 601,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 595,
                            "name": "receivedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "6062:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6079:7:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          "src": "6062:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 598,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6061:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6090:7:0",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "6061:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6037:60:0"
                },
                {
                  "body": {
                    "id": 627,
                    "nodeType": "Block",
                    "src": "6134:175:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 612,
                              "name": "allowedAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "6152:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$10_storage",
                                "typeString": "uint256[10] storage ref"
                              }
                            },
                            "id": 614,
                            "indexExpression": {
                              "id": 613,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "6167:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6152:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 615,
                            "name": "receivedEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "6173:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6152:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 622,
                        "nodeType": "IfStatement",
                        "src": "6148:87:0",
                        "trueBody": {
                          "id": 621,
                          "nodeType": "Block",
                          "src": "6188:47:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 617,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 590,
                                  "src": "6206:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6216:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6206:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 620,
                              "nodeType": "ExpressionStatement",
                              "src": "6206:14:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 623,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 590,
                          "src": "6252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 626,
                        "nodeType": "IfStatement",
                        "src": "6248:51:0",
                        "trueBody": {
                          "id": 625,
                          "nodeType": "Block",
                          "src": "6261:38:0",
                          "statements": [
                            {
                              "id": 624,
                              "nodeType": "Break",
                              "src": "6279:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 606,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "6120:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6124:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "6120:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 628,
                  "initializationExpression": {
                    "expression": {
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 602,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "6113:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6117:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6113:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 605,
                    "nodeType": "ExpressionStatement",
                    "src": "6113:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6128:4:0",
                      "subExpression": {
                        "id": 609,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "6128:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 611,
                    "nodeType": "ExpressionStatement",
                    "src": "6128:4:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6108:201:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 630,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "6392:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204554482076616c756573206f6620322c20342c20362c2038202e2e2e203531322061726520616c6c6f776564",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6401:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07c533052dc61f5af3ba1284cb6cdc1a3c117c1a341ce1e9f619d8aef5547102",
                          "typeString": "literal_string \"Only ETH values of 2, 4, 6, 8 ... 512 are allowed\""
                        },
                        "value": "Only ETH values of 2, 4, 6, 8 ... 512 are allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07c533052dc61f5af3ba1284cb6cdc1a3c117c1a341ce1e9f619d8aef5547102",
                          "typeString": "literal_string \"Only ETH values of 2, 4, 6, 8 ... 512 are allowed\""
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6384:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6384:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "6384:69:0"
                },
                {
                  "expression": {
                    "id": 634,
                    "name": "receivedEther",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 594,
                    "src": "6471:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 585,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "6464:20:0"
                }
              ]
            },
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "floorEtherAndCheck",
            "nameLocation": "5857:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "receivedAmount",
                  "nameLocation": "5884:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "5876:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:24:0"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "5931:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5931:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5930:9:0"
            },
            "scope": 695,
            "src": "5848:643:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "6596:135:0",
              "statements": [
                {
                  "assignments": [
                    647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "receivedEther",
                      "nameLocation": "6614:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 661,
                      "src": "6606:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6606:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 653,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 649,
                          "name": "amountEther",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "6649:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6663:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "6649:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 648,
                      "name": "floorEtherAndCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "6630:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6630:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6606:65:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 654,
                          "name": "rings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6688:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => struct Hetti.Ring storage ref))"
                          }
                        },
                        "id": 656,
                        "indexExpression": {
                          "id": 655,
                          "name": "receivedEther",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "6694:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6688:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$29_storage_$",
                          "typeString": "mapping(uint256 => struct Hetti.Ring storage ref)"
                        }
                      },
                      "id": 658,
                      "indexExpression": {
                        "id": 657,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "6709:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6688:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$29_storage",
                        "typeString": "struct Hetti.Ring storage ref"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ringHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "6688:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 645,
                  "id": 660,
                  "nodeType": "Return",
                  "src": "6681:43:0"
                }
              ]
            },
            "functionSelector": "9f1961e6",
            "id": 662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingHash",
            "nameLocation": "6506:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "amountEther",
                  "nameLocation": "6526:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "6518:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6518:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6547:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "6539:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6539:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6517:36:0"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "6583:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6583:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6582:9:0"
            },
            "scope": 695,
            "src": "6497:234:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 693,
              "nodeType": "Block",
              "src": "6824:157:0",
              "statements": [
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 671,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "6834:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 674,
                          "name": "sk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "6862:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 672,
                          "name": "AltBn128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "6846:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                            "typeString": "type(library AltBn128)"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ecMulG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 802,
                        "src": "6846:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                          "typeString": "function (uint256) view returns (uint256[2] memory)"
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6846:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "6834:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "6834:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 681,
                              "name": "publicKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "6900:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 683,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6910:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6900:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 684,
                              "name": "publicKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "6914:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 686,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6924:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6914:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 679,
                            "name": "AltBn128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "6883:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                              "typeString": "type(library AltBn128)"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "onCurve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 882,
                          "src": "6883:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) pure returns (bool)"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6883:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504b5f4e4f545f4f4e5f4355525645",
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6929:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd9320bac24e24791fbeb7f06292de9b0eb5c79f0fbea9354c619a9899b5676e",
                          "typeString": "literal_string \"PK_NOT_ON_CURVE\""
                        },
                        "value": "PK_NOT_ON_CURVE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd9320bac24e24791fbeb7f06292de9b0eb5c79f0fbea9354c619a9899b5676e",
                          "typeString": "literal_string \"PK_NOT_ON_CURVE\""
                        }
                      ],
                      "id": 678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6875:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6875:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "6875:72:0"
                },
                {
                  "expression": {
                    "id": 691,
                    "name": "publicKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 669,
                    "src": "6965:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 670,
                  "id": 692,
                  "nodeType": "Return",
                  "src": "6958:16:0"
                }
              ]
            },
            "functionSelector": "10837eec",
            "id": 694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "privateToPublic",
            "nameLocation": "6746:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "sk",
                  "nameLocation": "6770:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 694,
                  "src": "6762:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6762:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6761:12:0"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "publicKey",
                  "nameLocation": "6813:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 694,
                  "src": "6795:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 666,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6795:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 668,
                    "length": {
                      "hexValue": "32",
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6803:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6795:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6794:29:0"
            },
            "scope": 695,
            "src": "6737:244:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 696,
        "src": "123:6978:0",
        "usedErrors": []
      }
    ],
    "src": "43:7058:0"
  },
  "bytecode": "6101a0604052671bc16d674ec800006080908152673782dace9d90000060a052676f05b59d3b20000060c05267de0b6b3a7640000060e0526801bc16d674ec800000610100526803782dace9d9000000610120526806f05b59d3b200000061014052680de0b6b3a76400000061016052681bc16d674ec80000006101805261008b90600090600961009e565b5034801561009857600080fd5b506100fc565b82600a81019282156100d7579160200282015b828111156100d757825182906001600160481b03169055916020019190600101906100b1565b506100e39291506100e7565b5090565b5b808211156100e357600081556001016100e8565b61131b8061010b6000396000f3fe6080604052600436106100555760003560e01c806310837eec1461005a578063143ad3561461009057806362230498146100a55780636381d19e146100c55780636a6dcd421461014c5780639f1961e61461016c575b600080fd5b34801561006657600080fd5b5061007a610075366004610d84565b61019a565b6040516100879190610d9d565b60405180910390f35b6100a361009e366004610e8e565b6102e1565b005b3480156100b157600080fd5b506100a36100c0366004610eb1565b610573565b3480156100d157600080fd5b5061011e6100e0366004610fa5565b600b60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909160ff8082169161010090041685565b6040805195865260208601949094529284019190915260ff908116606084015216608082015260a001610087565b34801561015857600080fd5b506100a3610167366004610fa5565b61095f565b34801561017857600080fd5b5061018c610187366004610fa5565b610abf565b604051908152602001610087565b6101a2610ce6565b6040516308b86e6360e31b81526004810183905273__AltBn128______________________________906345c37318906024016040805180830381865af41580156101f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102159190610fc7565b80516020820151604051630cd3b28960e31b81526004810192909252602482015290915073__AltBn128______________________________9063669d944890604401602060405180830381865af4158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190611032565b6102dc5760405162461bcd60e51b815260206004820152600f60248201526e504b5f4e4f545f4f4e5f435552564560881b60448201526064015b60405180910390fd5b919050565b60006102ec34610afd565b6000818152600a6020908152604080832054600b83528184208185528352928190208651928701519151630cd3b28960e31b81526004810193909352602483019190915292935090919073__AltBn128______________________________9063669d944890604401602060405180830381865af4158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190611032565b6103db5760405162461bcd60e51b81526020600482015260166024820152755075626c6963204b6579206e6f206f6e20437572766560501b60448201526064016102d3565b60005b600382015460ff908116908216101561049057845160ff82166000908152600484016020526040902054148015610431575060208086015160ff8316600090815260048501909252604090912060010154145b1561047e5760405162461bcd60e51b815260206004820152601f60248201527f4164647265737320616c726561647920696e2063757272656e742052696e670060448201526064016102d3565b806104888161106a565b9150506103de565b50600381015460ff166000036104ae576104ab600143611089565b81555b600381015460ff16600090815260048201602052604090206104d290856002610d04565b5060038101805460ff169060006104e88361106a565b91906101000a81548160ff021916908360ff160217905550508281600101600082825461051591906110a0565b909155505060038181015460ff161061056d5761054361053d670de0b6b3a7640000856110b8565b83610bdc565b60028201556000838152600a602052604081208054600192906105679084906110a0565b90915550505b50505050565b6000805a9050600061059561059089670de0b6b3a76400006110da565b610afd565b6000818152600b602090815260408083208b845290915290206003808201549293509091610100900460ff16106106255760405162461bcd60e51b815260206004820152602e60248201527f416c6c2066756e64732066726f6d2063757272656e742052696e67206861732060448201526d3132b2b7103bb4ba34323930bbb760911b60648201526084016102d3565b600281015461066a5760405162461bcd60e51b8152602060048201526011602482015270149a5b99c81a5cdb89dd0818db1bdcd959607a1b60448201526064016102d3565b60408051600380825260808201909252600091816020015b61068a610ce6565b815260200190600190039081610682579050509050600094505b60038510156107125760408051808201825260ff8716600081815260048601602081815294822080548552929091528352600101549181019190915281518290879081106106f4576106f461101c565b6020026020010181905250848061070a906110f9565b9550506106a4565b600073__LSAG__________________________________63fe46a2b2846002015460405160200161074591815260200190565b6040516020818303038152906040528b8b8b876040518663ffffffff1660e01b81526004016107789594939291906111aa565b602060405180830381865af4158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190611032565b9050806107fc5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016102d3565b600095505b6003830154610100900460ff168610156108b457875160ff87166000908152600585016020526040902054148015610855575060208089015160ff8816600090815260058601909252604090912060010154145b156108a25760405162461bcd60e51b815260206004820152601860248201527f5369676e617475726520686173206265656e207573656421000000000000000060448201526064016102d3565b856108ac816110f9565b965050610801565b6003830154610100900460ff16600090815260058401602052604090206108dd90896002610d04565b5060018360030160018282829054906101000a900460ff166108ff9190611240565b92506101000a81548160ff021916908360ff1602179055508b6001600160a01b03166108fc859081150290604051600060405180830381858888f19350505050158015610950573d6000803e3d6000fd5b50505050505050505050505050565b600061097661059084670de0b6b3a76400006110da565b6000818152600a6020908152604080832054600b835281842081855290925290912060028101549293509091156109ef5760405162461bcd60e51b815260206004820152601760248201527f52696e6720697320616c726561647920636c6f7365642100000000000000000060448201526064016102d3565b80546000906109ff600143611089565b610a099190611089565b10610a745760405162461bcd60e51b815260206004820152603560248201527f52696e67206e6565647320746f206d6174757265206c6f6e676572206265666f604482015274726520666f72636566756c6c7920636c6f73696e6760581b60648201526084016102d3565b610a8f610a89670de0b6b3a7640000856110b8565b85610bdc565b60028201556000838152600a60205260408120805460019290610ab39084906110a0565b90915550505050505050565b600080610ad761059085670de0b6b3a76400006110da565b6000908152600b6020908152604080832086845290915290206002015491505092915050565b6000808080610b14670de0b6b3a7640000866110b8565b610b2690670de0b6b3a76400006110da565b9050600092505b600a831015610b6d5780600084600a8110610b4a57610b4a61101c565b015403610b5657600191505b81610b6d5782610b65816110f9565b935050610b2d565b81610bd45760405162461bcd60e51b815260206004820152603160248201527f4f6e6c79204554482076616c756573206f6620322c20342c20362c2038202e2e6044820152700b880d4c4c88185c9948185b1b1bddd959607a1b60648201526084016102d3565b949350505050565b6000610be6610d42565b6000610bfd61059086670de0b6b3a76400006110da565b6000818152600b6020908152604080832088845290915281209192505b60038160ff161015610c905760ff81166000908152600483016020526040908190208151808301928390529160029082845b815481526020019060010190808311610c4c575050505050848260ff1660038110610c7957610c7961101c565b602002015280610c888161106a565b915050610c1a565b506000610c9e600143611089565b825460018401546003850154604051610cc3944093929160ff16908990602001611265565b60408051808303601f190181529190528051602090910120979650505050505050565b60405180604001604052806002906020820280368337509192915050565b8260028101928215610d32579160200282015b82811115610d32578251825591602001919060010190610d17565b50610d3e929150610d6f565b5090565b60405180606001604052806003905b610d59610ce6565b815260200190600190039081610d515790505090565b5b80821115610d3e5760008155600101610d70565b600060208284031215610d9657600080fd5b5035919050565b60408101818360005b6002811015610dc5578151835260209283019290910190600101610da6565b50505092915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610e0757610e07610dce565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e3657610e36610dce565b604052919050565b600082601f830112610e4f57600080fd5b610e57610de4565b806040840185811115610e6957600080fd5b845b81811015610e83578035845260209384019301610e6b565b509095945050505050565b600060408284031215610ea057600080fd5b610eaa8383610e3e565b9392505050565b60008060008060008060e08789031215610eca57600080fd5b86356001600160a01b0381168114610ee157600080fd5b955060208781013595506040880135945060608801359350610f068960808a01610e3e565b925060c088013567ffffffffffffffff80821115610f2357600080fd5b818a0191508a601f830112610f3757600080fd5b813581811115610f4957610f49610dce565b8060051b9150610f5a848301610e0d565b818152918301840191848101908d841115610f7457600080fd5b938501935b83851015610f9257843582529385019390850190610f79565b8096505050505050509295509295509295565b60008060408385031215610fb857600080fd5b50508035926020909101359150565b600060408284031215610fd957600080fd5b82601f830112610fe857600080fd5b610ff0610de4565b80604084018581111561100257600080fd5b845b81811015610e83578051845260209384019301611004565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561104457600080fd5b81518015158114610eaa57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810361108057611080611054565b60010192915050565b60008282101561109b5761109b611054565b500390565b600082198211156110b3576110b3611054565b500190565b6000826110d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156110f4576110f4611054565b500290565b60006001820161110b5761110b611054565b5060010190565b8060005b600281101561056d578151845260209384019390910190600101611116565b600081518084526020808501945080840160005b8381101561116557815187529582019590820190600101611149565b509495945050505050565b600081518084526020808501945080840160005b8381101561116557611197878351611112565b6040969096019590820190600101611184565b60c08152600086518060c084015260005b818110156111d8576020818a0181015160e08684010152016111bb565b818111156111ea57600060e083860101525b5060208301879052601f01601f191682016112086040840187611112565b60e083820301608084015261122060e0820186611135565b905082810360a08401526112348185611170565b98975050505050505050565b600060ff821660ff84168060ff0382111561125d5761125d611054565b019392505050565b8581526000602086818401526040868185015260ff60f81b8660f81b16606085015260618401856000805b60038110156112ce57825184835b60028110156112bb5782518252918801919088019060010161129e565b5050509284019291850191600101611290565b50505050505061012182019050969550505050505056fea26469706673582212201c354fbceee137e1c34139d2bf4a74777b4def18f14a99f8266ef5b7f0178dae64736f6c634300080d0033",
  "bytecodeSha1": "3b97e8e40a10039bb211d39284ce83c4669511e4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Hetti",
  "coverageMap": {
    "branches": {
      "0": {
        "Hetti.deposit": {
          "38": [
            1210,
            1272,
            false
          ],
          "39": [
            1497,
            1534,
            false
          ],
          "40": [
            1554,
            1591,
            false
          ],
          "41": [
            1756,
            1781,
            false
          ],
          "42": [
            2112,
            2155,
            false
          ]
        },
        "Hetti.floorEtherAndCheck": {
          "49": [
            6152,
            6186,
            false
          ],
          "50": [
            6252,
            6259,
            false
          ],
          "51": [
            6392,
            6399,
            true
          ]
        },
        "Hetti.forceCloseRing": {
          "47": [
            5404,
            5434,
            false
          ],
          "48": [
            5508,
            5579,
            false
          ]
        },
        "Hetti.privateToPublic": {
          "37": [
            6883,
            6927,
            true
          ]
        },
        "Hetti.withdraw": {
          "43": [
            2853,
            2896,
            false
          ],
          "44": [
            3729,
            3746,
            false
          ],
          "45": [
            3950,
            3992,
            false
          ],
          "46": [
            4012,
            4054,
            false
          ]
        }
      },
      "1": {},
      "2": {}
    },
    "statements": {
      "0": {
        "Hetti.createRingHash": {
          "34": [
            4751,
            4782
          ],
          "35": [
            4732,
            4735
          ],
          "36": [
            5018,
            5037
          ]
        },
        "Hetti.deposit": {
          "2": [
            1288,
            1320
          ],
          "3": [
            1611,
            1652
          ],
          "4": [
            1474,
            1477
          ],
          "5": [
            1797,
            1839
          ],
          "6": [
            1890,
            1939
          ],
          "7": [
            1949,
            1971
          ],
          "8": [
            1981,
            2018
          ],
          "9": [
            2199,
            2266
          ],
          "10": [
            2314,
            2341
          ]
        },
        "Hetti.floorEtherAndCheck": {
          "28": [
            6113,
            6118
          ],
          "29": [
            6206,
            6220
          ],
          "30": [
            6279,
            6284
          ],
          "31": [
            6128,
            6132
          ],
          "32": [
            6384,
            6453
          ],
          "33": [
            6464,
            6484
          ]
        },
        "Hetti.forceCloseRing": {
          "23": [
            5450,
            5483
          ],
          "24": [
            5595,
            5658
          ],
          "25": [
            5705,
            5769
          ],
          "26": [
            5807,
            5834
          ]
        },
        "Hetti.getRingHash": {
          "27": [
            6681,
            6724
          ]
        },
        "Hetti.privateToPublic": {
          "0": [
            6834,
            6865
          ],
          "1": [
            6875,
            6947
          ]
        },
        "Hetti.withdraw": {
          "11": [
            2912,
            2968
          ],
          "12": [
            3134,
            3161
          ],
          "13": [
            3268,
            3273
          ],
          "14": [
            3319,
            3459
          ],
          "15": [
            3300,
            3303
          ],
          "16": [
            3762,
            3789
          ],
          "17": [
            3894,
            3899
          ],
          "18": [
            4074,
            4108
          ],
          "19": [
            3927,
            3930
          ],
          "20": [
            4246,
            4293
          ],
          "21": [
            4303,
            4328
          ],
          "22": [
            4339,
            4371
          ]
        }
      },
      "1": {},
      "2": {}
    }
  },
  "dependencies": [
    "AltBn128",
    "LSAG"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c806310837eec1461005a578063143ad3561461009057806362230498146100a55780636381d19e146100c55780636a6dcd421461014c5780639f1961e61461016c575b600080fd5b34801561006657600080fd5b5061007a610075366004610d84565b61019a565b6040516100879190610d9d565b60405180910390f35b6100a361009e366004610e8e565b6102e1565b005b3480156100b157600080fd5b506100a36100c0366004610eb1565b610573565b3480156100d157600080fd5b5061011e6100e0366004610fa5565b600b60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909160ff8082169161010090041685565b6040805195865260208601949094529284019190915260ff908116606084015216608082015260a001610087565b34801561015857600080fd5b506100a3610167366004610fa5565b61095f565b34801561017857600080fd5b5061018c610187366004610fa5565b610abf565b604051908152602001610087565b6101a2610ce6565b6040516308b86e6360e31b81526004810183905273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__906345c37318906024016040805180830381865af41580156101f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102159190610fc7565b80516020820151604051630cd3b28960e31b81526004810192909252602482015290915073__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063669d944890604401602060405180830381865af4158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190611032565b6102dc5760405162461bcd60e51b815260206004820152600f60248201526e504b5f4e4f545f4f4e5f435552564560881b60448201526064015b60405180910390fd5b919050565b60006102ec34610afd565b6000818152600a6020908152604080832054600b83528184208185528352928190208651928701519151630cd3b28960e31b81526004810193909352602483019190915292935090919073__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063669d944890604401602060405180830381865af4158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190611032565b6103db5760405162461bcd60e51b81526020600482015260166024820152755075626c6963204b6579206e6f206f6e20437572766560501b60448201526064016102d3565b60005b600382015460ff908116908216101561049057845160ff82166000908152600484016020526040902054148015610431575060208086015160ff8316600090815260048501909252604090912060010154145b1561047e5760405162461bcd60e51b815260206004820152601f60248201527f4164647265737320616c726561647920696e2063757272656e742052696e670060448201526064016102d3565b806104888161106a565b9150506103de565b50600381015460ff166000036104ae576104ab600143611089565b81555b600381015460ff16600090815260048201602052604090206104d290856002610d04565b5060038101805460ff169060006104e88361106a565b91906101000a81548160ff021916908360ff160217905550508281600101600082825461051591906110a0565b909155505060038181015460ff161061056d5761054361053d670de0b6b3a7640000856110b8565b83610bdc565b60028201556000838152600a602052604081208054600192906105679084906110a0565b90915550505b50505050565b6000805a9050600061059561059089670de0b6b3a76400006110da565b610afd565b6000818152600b602090815260408083208b845290915290206003808201549293509091610100900460ff16106106255760405162461bcd60e51b815260206004820152602e60248201527f416c6c2066756e64732066726f6d2063757272656e742052696e67206861732060448201526d3132b2b7103bb4ba34323930bbb760911b60648201526084016102d3565b600281015461066a5760405162461bcd60e51b8152602060048201526011602482015270149a5b99c81a5cdb89dd0818db1bdcd959607a1b60448201526064016102d3565b60408051600380825260808201909252600091816020015b61068a610ce6565b815260200190600190039081610682579050509050600094505b60038510156107125760408051808201825260ff8716600081815260048601602081815294822080548552929091528352600101549181019190915281518290879081106106f4576106f461101c565b6020026020010181905250848061070a906110f9565b9550506106a4565b600073__$59a6a99b146727e155adc36af30d91d8cc$__63fe46a2b2846002015460405160200161074591815260200190565b6040516020818303038152906040528b8b8b876040518663ffffffff1660e01b81526004016107789594939291906111aa565b602060405180830381865af4158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190611032565b9050806107fc5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016102d3565b600095505b6003830154610100900460ff168610156108b457875160ff87166000908152600585016020526040902054148015610855575060208089015160ff8816600090815260058601909252604090912060010154145b156108a25760405162461bcd60e51b815260206004820152601860248201527f5369676e617475726520686173206265656e207573656421000000000000000060448201526064016102d3565b856108ac816110f9565b965050610801565b6003830154610100900460ff16600090815260058401602052604090206108dd90896002610d04565b5060018360030160018282829054906101000a900460ff166108ff9190611240565b92506101000a81548160ff021916908360ff1602179055508b6001600160a01b03166108fc859081150290604051600060405180830381858888f19350505050158015610950573d6000803e3d6000fd5b50505050505050505050505050565b600061097661059084670de0b6b3a76400006110da565b6000818152600a6020908152604080832054600b835281842081855290925290912060028101549293509091156109ef5760405162461bcd60e51b815260206004820152601760248201527f52696e6720697320616c726561647920636c6f7365642100000000000000000060448201526064016102d3565b80546000906109ff600143611089565b610a099190611089565b10610a745760405162461bcd60e51b815260206004820152603560248201527f52696e67206e6565647320746f206d6174757265206c6f6e676572206265666f604482015274726520666f72636566756c6c7920636c6f73696e6760581b60648201526084016102d3565b610a8f610a89670de0b6b3a7640000856110b8565b85610bdc565b60028201556000838152600a60205260408120805460019290610ab39084906110a0565b90915550505050505050565b600080610ad761059085670de0b6b3a76400006110da565b6000908152600b6020908152604080832086845290915290206002015491505092915050565b6000808080610b14670de0b6b3a7640000866110b8565b610b2690670de0b6b3a76400006110da565b9050600092505b600a831015610b6d5780600084600a8110610b4a57610b4a61101c565b015403610b5657600191505b81610b6d5782610b65816110f9565b935050610b2d565b81610bd45760405162461bcd60e51b815260206004820152603160248201527f4f6e6c79204554482076616c756573206f6620322c20342c20362c2038202e2e6044820152700b880d4c4c88185c9948185b1b1bddd959607a1b60648201526084016102d3565b949350505050565b6000610be6610d42565b6000610bfd61059086670de0b6b3a76400006110da565b6000818152600b6020908152604080832088845290915281209192505b60038160ff161015610c905760ff81166000908152600483016020526040908190208151808301928390529160029082845b815481526020019060010190808311610c4c575050505050848260ff1660038110610c7957610c7961101c565b602002015280610c888161106a565b915050610c1a565b506000610c9e600143611089565b825460018401546003850154604051610cc3944093929160ff16908990602001611265565b60408051808303601f190181529190528051602090910120979650505050505050565b60405180604001604052806002906020820280368337509192915050565b8260028101928215610d32579160200282015b82811115610d32578251825591602001919060010190610d17565b50610d3e929150610d6f565b5090565b60405180606001604052806003905b610d59610ce6565b815260200190600190039081610d515790505090565b5b80821115610d3e5760008155600101610d70565b600060208284031215610d9657600080fd5b5035919050565b60408101818360005b6002811015610dc5578151835260209283019290910190600101610da6565b50505092915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610e0757610e07610dce565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e3657610e36610dce565b604052919050565b600082601f830112610e4f57600080fd5b610e57610de4565b806040840185811115610e6957600080fd5b845b81811015610e83578035845260209384019301610e6b565b509095945050505050565b600060408284031215610ea057600080fd5b610eaa8383610e3e565b9392505050565b60008060008060008060e08789031215610eca57600080fd5b86356001600160a01b0381168114610ee157600080fd5b955060208781013595506040880135945060608801359350610f068960808a01610e3e565b925060c088013567ffffffffffffffff80821115610f2357600080fd5b818a0191508a601f830112610f3757600080fd5b813581811115610f4957610f49610dce565b8060051b9150610f5a848301610e0d565b818152918301840191848101908d841115610f7457600080fd5b938501935b83851015610f9257843582529385019390850190610f79565b8096505050505050509295509295509295565b60008060408385031215610fb857600080fd5b50508035926020909101359150565b600060408284031215610fd957600080fd5b82601f830112610fe857600080fd5b610ff0610de4565b80604084018581111561100257600080fd5b845b81811015610e83578051845260209384019301611004565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561104457600080fd5b81518015158114610eaa57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810361108057611080611054565b60010192915050565b60008282101561109b5761109b611054565b500390565b600082198211156110b3576110b3611054565b500190565b6000826110d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156110f4576110f4611054565b500290565b60006001820161110b5761110b611054565b5060010190565b8060005b600281101561056d578151845260209384019390910190600101611116565b600081518084526020808501945080840160005b8381101561116557815187529582019590820190600101611149565b509495945050505050565b600081518084526020808501945080840160005b8381101561116557611197878351611112565b6040969096019590820190600101611184565b60c08152600086518060c084015260005b818110156111d8576020818a0181015160e08684010152016111bb565b818111156111ea57600060e083860101525b5060208301879052601f01601f191682016112086040840187611112565b60e083820301608084015261122060e0820186611135565b905082810360a08401526112348185611170565b98975050505050505050565b600060ff821660ff84168060ff0382111561125d5761125d611054565b019392505050565b8581526000602086818401526040868185015260ff60f81b8660f81b16606085015260618401856000805b60038110156112ce57825184835b60028110156112bb5782518252918801919088019060010161129e565b5050509284019291850191600101611290565b50505050505061012182019050969550505050505056fea26469706673582212201c354fbceee137e1c34139d2bf4a74777b4def18f14a99f8266ef5b7f0178dae64736f6c634300080d0033",
  "deployedSourceMap": "123:6978:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6737:244;;;;;;;;;;-1:-1:-1;6737:244:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;878:1480;;;;;;:::i;:::-;;:::i;:::-;;2364:2014;;;;;;;;;;-1:-1:-1;2364:2014:0;;;;;:::i;:::-;;:::i;813:58::-;;;;;;;;;;-1:-1:-1;813:58:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4040:25:3;;;4096:2;4081:18;;4074:34;;;;4124:18;;;4117:34;;;;4199:4;4187:17;;;4182:2;4167:18;;4160:45;4242:17;4236:3;4221:19;;4214:46;4027:3;4012:19;813:58:0;3789:477:3;5050:791:0;;;;;;;;;;-1:-1:-1;5050:791:0;;;;;:::i;:::-;;:::i;6497:234::-;;;;;;;;;;-1:-1:-1;6497:234:0;;;;;:::i;:::-;;:::i;:::-;;;4417:25:3;;;4405:2;4390:18;6497:234:0;4271:177:3;6737:244:0;6795:27;;:::i;:::-;6846:19;;-1:-1:-1;;;6846:19:0;;;;;4417:25:3;;;6846:8:0;;:15;;4390:18:3;;6846:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6900:12;;;6914;;;6883:44;;-1:-1:-1;;;6883:44:0;;;;;5562:25:3;;;;5603:18;;;5596:34;6834:31:0;;-1:-1:-1;6883:8:0;;:16;;5535:18:3;;6883:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6875:72;;;;-1:-1:-1;;;6875:72:0;;6125:2:3;6875:72:0;;;6107:21:3;6164:2;6144:18;;;6137:30;-1:-1:-1;;;6183:18:3;;;6176:45;6238:18;;6875:72:0;;;;;;;;;6737:244;;;:::o;878:1480::-;980:21;1004:29;1023:9;1004:18;:29::i;:::-;1093:16;1112:22;;;:7;:22;;;;;;;;;1164:5;:20;;;;;:30;;;;;;;;;1235:12;;1258;;;;1210:62;;-1:-1:-1;;;1210:62:0;;;;;5562:25:3;;;;5603:18;;;5596:34;;;;1112:22:0;;-1:-1:-1;1112:22:0;;1164:30;1210:8;;:16;;5535:18:3;;1210:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1205:126;;1288:32;;-1:-1:-1;;;1288:32:0;;6469:2:3;1288:32:0;;;6451:21:3;6508:2;6488:18;;;6481:30;-1:-1:-1;;;6527:18:3;;;6520:52;6589:18;;1288:32:0;6267:346:3;1205:126:0;1435:7;1430:247;1452:20;;;;;;;;1448:24;;;;1430:247;;;1522:12;;1497:18;;;1532:1;1497:18;;;:15;;;1522:12;1497:18;;;;:21;:37;:94;;;;-1:-1:-1;1579:12:0;;;;;1554:18;;;;;;;:15;;;:18;;;;;;;1589:1;1554:21;;:37;1497:94;1493:174;;;1611:41;;-1:-1:-1;;;1611:41:0;;6820:2:3;1611:41:0;;;6802:21:3;6859:2;6839:18;;;6832:30;6898:33;6878:18;;;6871:61;6949:18;;1611:41:0;6618:355:3;1493:174:0;1474:3;;;;:::i;:::-;;;;1430:247;;;-1:-1:-1;1756:20:0;;;;;;;:25;1752:98;;1823:16;1838:1;1823:12;:16;:::i;:::-;1797:42;;1752:98;1906:20;;;;;;1890:37;;;;:15;;;:37;;;;;:49;;1930:9;1890:49;;:::i;:::-;-1:-1:-1;1949:20:0;;;:22;;;;;:20;:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2005:13;1981:4;:20;;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;;232:1:0;2112:20;;;;;;:43;2108:244;;2215:51;2230:25;2247:7;2230:13;:25;:::i;:::-;2257:8;2215:14;:51::i;:::-;2199:13;;;:67;2314:22;;;;:7;:22;;;;;:27;;2340:1;;2314:22;:27;;2340:1;;2314:27;:::i;:::-;;;;-1:-1:-1;;2108:244:0;943:1415;;;878:1480;:::o;2364:2014::-;2547:6;2563:16;2582:9;2563:28;-1:-1:-1;2629:21:0;2653:41;2672:21;:11;2686:7;2672:21;:::i;:::-;2653:18;:41::i;:::-;2754:17;2774:20;;;:5;:20;;;;;;;;:27;;;;;;;;232:1;2853:20;;;;2774;;-1:-1:-1;2774:27:0;;2853:20;;;;;:43;2849:130;;2912:56;;-1:-1:-1;;;2912:56:0;;8150:2:3;2912:56:0;;;8132:21:3;8189:2;8169:18;;;8162:30;8228:34;8208:18;;;8201:62;-1:-1:-1;;;8279:18:3;;;8272:44;8333:19;;2912:56:0;7948:410:3;2849:130:0;3088:13;;;;3084:88;;3134:27;;-1:-1:-1;;;3134:27:0;;8565:2:3;3134:27:0;;;8547:21:3;8604:2;8584:18;;;8577:30;-1:-1:-1;;;8623:18:3;;;8616:47;8680:18;;3134:27:0;8363:341:3;3084:88:0;3215:37;;;232:1;3215:37;;;;;;;;;3182:30;;3215:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3182:70;;3272:1;3268:5;;3263:207;232:1;3275;:23;3263:207;;;3319:140;;;;;;;;3361:25;;;-1:-1:-1;3361:25:0;;;:15;;;:25;;;;;;;:28;;3319:140;;3416:25;;;;;;3442:1;3416:28;;3319:140;;;;;;;:13;;:10;;3361:25;;3319:13;;;;;;:::i;:::-;;;;;;:140;;;;3300:3;;;;;:::i;:::-;;;;3263:207;;;3525:22;3550:4;:11;3592:4;:13;;;3575:31;;;;;;8978:19:3;;9022:2;9013:12;;8849:182;3575:31:0;;;;;;;;;;;;;3640:2;3656:8;3678:1;3693:10;3550:163;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3525:188;;3729:17;3724:76;;3762:27;;-1:-1:-1;;;3762:27:0;;11739:2:3;3762:27:0;;;11721:21:3;11778:2;11758:18;;;11751:30;-1:-1:-1;;;11797:18:3;;;11790:47;11854:18;;3762:27:0;11537:341:3;3724:76:0;3898:1;3894:5;;3889:244;3905:20;;;;;;;;;3901:24;;3889:244;;;3981:11;;3950:24;;;3990:1;3950:24;;;:14;;;3981:11;3950:24;;;;:27;:42;:104;;;;-1:-1:-1;4043:11:0;;;;;4012:24;;;;;;;:14;;;:24;;;;;;;4052:1;4012:27;;:42;3950:104;3946:177;;;4074:34;;-1:-1:-1;;;4074:34:0;;12085:2:3;4074:34:0;;;12067:21:3;12124:2;12104:18;;;12097:30;12163:26;12143:18;;;12136:54;12207:18;;4074:34:0;11883:348:3;3946:177:0;3927:3;;;;:::i;:::-;;;;3889:244;;;4261:20;;;;;;;;;4246:36;;;;:14;;;:36;;;;;:47;;4285:8;4246:47;;:::i;:::-;;4327:1;4303:4;:20;;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4339:8;-1:-1:-1;;;;;4339:17:0;:32;4357:13;4339:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2537:1841;;;;;;2364:2014;;;;;;:::o;5050:791::-;5167:21;5191:36;5210:16;:6;5219:7;5210:16;:::i;5191:36::-;5287:16;5306:22;;;:7;:22;;;;;;;;;5358:5;:20;;;;;:30;;;;;;;;;5404:13;;;;5167:60;;-1:-1:-1;5306:22:0;;5404:30;5400:94;;5450:33;;-1:-1:-1;;;5450:33:0;;12647:2:3;5450:33:0;;;12629:21:3;12686:2;12666:18;;;12659:30;12725:25;12705:18;;;12698:53;12768:18;;5450:33:0;12445:347:3;5400:94:0;5527:23;;722:1;;5508:16;5523:1;5508:12;:16;:::i;:::-;:42;;;;:::i;:::-;:71;5504:165;;5595:63;;-1:-1:-1;;;5595:63:0;;12999:2:3;5595:63:0;;;12981:21:3;13038:2;13018:18;;;13011:30;13077:34;13057:18;;;13050:62;-1:-1:-1;;;13128:18:3;;;13121:51;13189:19;;5595:63:0;12797:417:3;5504:165:0;5721:48;5736:25;5753:7;5736:13;:25;:::i;:::-;5763:5;5721:14;:48::i;:::-;5705:13;;;:64;5807:22;;;;:7;:22;;;;;:27;;5833:1;;5807:22;:27;;5833:1;;5807:27;:::i;:::-;;;;-1:-1:-1;;;;;;;5050:791:0:o;6497:234::-;6583:7;;6630:41;6649:21;:11;6663:7;6649:21;:::i;6630:41::-;6688:20;;;;:5;:20;;;;;;;;:27;;;;;;;;:36;;;;-1:-1:-1;;6497:234:0;;;;:::o;5848:643::-;5931:7;;;;6062:24;6079:7;6062:14;:24;:::i;:::-;6061:36;;6090:7;6061:36;:::i;:::-;6037:60;;6117:1;6113:5;;6108:201;6124:2;6120:1;:6;6108:201;;;6173:13;6152:14;6167:1;6152:17;;;;;;;:::i;:::-;;;:34;6148:87;;6216:4;6206:14;;6148:87;6252:7;6279:5;6248:51;6128:4;;;;:::i;:::-;;;;6108:201;;;6392:7;6384:69;;;;-1:-1:-1;;;6384:69:0;;13421:2:3;6384:69:0;;;13403:21:3;13460:2;13440:18;;;13433:30;13499:34;13479:18;;;13472:62;-1:-1:-1;;;13550:18:3;;;13543:47;13607:19;;6384:69:0;13219:413:3;6384:69:0;6471:13;5848:643;-1:-1:-1;;;;5848:643:0:o;4385:659::-;4476:7;4499:49;;:::i;:::-;4558:21;4582:41;4601:21;:11;4615:7;4601:21;:::i;4582:41::-;4634:14;4651:20;;;:5;:20;;;;;;;;:27;;;;;;;;4558:65;;-1:-1:-1;4689:104:0;232:1;4707;:23;;;4689:104;;;4767:15;;;;;;;:12;;;:15;;;;;;;4751:31;;;;;;;;;;;;4767:15;4751:31;;;;;;;;;;;;;;;;;;;;;;:10;4762:1;4751:13;;;;;;;;;:::i;:::-;;;;:31;4732:3;;;;:::i;:::-;;;;4689:104;;;-1:-1:-1;4803:14:0;4860:16;4875:1;4860:12;:16;:::i;:::-;4891:20;;4925:17;;;;4956;;;;4820:187;;;;4850:27;;4891:20;4925:17;4956;;;4987:10;;4820:187;;;:::i;:::-;;;;;;;-1:-1:-1;;4820:187:0;;;;;;5025:12;;4820:187;5025:12;;;;;4385:659;-1:-1:-1;;;;;;;4385:659:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:180:3;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;199:494::-;379:2;364:18;;368:9;459:6;337:4;493:194;507:4;504:1;501:11;493:194;;;566:13;;554:26;;603:4;627:12;;;;662:15;;;;527:1;520:9;493:194;;;497:3;;;199:494;;;;:::o;698:127::-;759:10;754:3;750:20;747:1;740:31;790:4;787:1;780:15;814:4;811:1;804:15;830:251;902:2;896:9;;;932:15;;977:18;962:34;;998:22;;;959:62;956:88;;;1024:18;;:::i;:::-;1060:2;1053:22;830:251;:::o;1086:275::-;1157:2;1151:9;1222:2;1203:13;;-1:-1:-1;;1199:27:3;1187:40;;1257:18;1242:34;;1278:22;;;1239:62;1236:88;;;1304:18;;:::i;:::-;1340:2;1333:22;1086:275;;-1:-1:-1;1086:275:3:o;1366:484::-;1416:5;1469:3;1462:4;1454:6;1450:17;1446:27;1436:55;;1487:1;1484;1477:12;1436:55;1511:22;;:::i;:::-;1555:3;1593:2;1585:6;1581:15;1619:3;1611:6;1608:15;1605:35;;;1636:1;1633;1626:12;1605:35;1660:6;1675:146;1691:6;1686:3;1683:15;1675:146;;;1759:17;;1747:30;;1806:4;1797:14;;;;1708;1675:146;;;-1:-1:-1;1839:5:3;;1366:484;-1:-1:-1;;;;;1366:484:3:o;1855:224::-;1937:6;1990:2;1978:9;1969:7;1965:23;1961:32;1958:52;;;2006:1;2003;1996:12;1958:52;2029:44;2065:7;2054:9;2029:44;:::i;:::-;2019:54;1855:224;-1:-1:-1;;;1855:224:3:o;2084:1447::-;2244:6;2252;2260;2268;2276;2284;2337:3;2325:9;2316:7;2312:23;2308:33;2305:53;;;2354:1;2351;2344:12;2305:53;2380:23;;-1:-1:-1;;;;;2432:31:3;;2422:42;;2412:70;;2478:1;2475;2468:12;2412:70;2501:5;-1:-1:-1;2525:2:3;2559:18;;;2546:32;;-1:-1:-1;2625:2:3;2610:18;;2597:32;;-1:-1:-1;2676:2:3;2661:18;;2648:32;;-1:-1:-1;2699:54:3;2745:7;2739:3;2724:19;;2699:54;:::i;:::-;2689:64;;2804:3;2793:9;2789:19;2776:33;2828:18;2869:2;2861:6;2858:14;2855:34;;;2885:1;2882;2875:12;2855:34;2923:6;2912:9;2908:22;2898:32;;2968:7;2961:4;2957:2;2953:13;2949:27;2939:55;;2990:1;2987;2980:12;2939:55;3026:2;3013:16;3048:2;3044;3041:10;3038:36;;;3054:18;;:::i;:::-;3100:2;3097:1;3093:10;3083:20;;3123:28;3147:2;3143;3139:11;3123:28;:::i;:::-;3185:15;;;3255:11;;;3251:20;;;3216:12;;;;3283:19;;;3280:39;;;3315:1;3312;3305:12;3280:39;3339:11;;;;3359:142;3375:6;3370:3;3367:15;3359:142;;;3441:17;;3429:30;;3392:12;;;;3479;;;;3359:142;;;3520:5;3510:15;;;;;;;;2084:1447;;;;;;;;:::o;3536:248::-;3604:6;3612;3665:2;3653:9;3644:7;3640:23;3636:32;3633:52;;;3681:1;3678;3671:12;3633:52;-1:-1:-1;;3704:23:3;;;3774:2;3759:18;;;3746:32;;-1:-1:-1;3536:248:3:o;4643:600::-;4736:6;4789:2;4777:9;4768:7;4764:23;4760:32;4757:52;;;4805:1;4802;4795:12;4757:52;4854:7;4847:4;4836:9;4832:20;4828:34;4818:62;;4876:1;4873;4866:12;4818:62;4900:22;;:::i;:::-;4944:3;4985:2;4974:9;4970:18;5011:7;5003:6;5000:19;4997:39;;;5032:1;5029;5022:12;4997:39;5056:9;5074:139;5090:6;5085:3;5082:15;5074:139;;;5158:10;;5146:23;;5198:4;5189:14;;;;5107;5074:139;;5248:127;5309:10;5304:3;5300:20;5297:1;5290:31;5340:4;5337:1;5330:15;5364:4;5361:1;5354:15;5641:277;5708:6;5761:2;5749:9;5740:7;5736:23;5732:32;5729:52;;;5777:1;5774;5767:12;5729:52;5809:9;5803:16;5862:5;5855:13;5848:21;5841:5;5838:32;5828:60;;5884:1;5881;5874:12;6978:127;7039:10;7034:3;7030:20;7027:1;7020:31;7070:4;7067:1;7060:15;7094:4;7091:1;7084:15;7110:175;7147:3;7191:4;7184:5;7180:16;7220:4;7211:7;7208:17;7205:43;;7228:18;;:::i;:::-;7277:1;7264:15;;7110:175;-1:-1:-1;;7110:175:3:o;7290:125::-;7330:4;7358:1;7355;7352:8;7349:34;;;7363:18;;:::i;:::-;-1:-1:-1;7400:9:3;;7290:125::o;7420:128::-;7460:3;7491:1;7487:6;7484:1;7481:13;7478:39;;;7497:18;;:::i;:::-;-1:-1:-1;7533:9:3;;7420:128::o;7553:217::-;7593:1;7619;7609:132;;7663:10;7658:3;7654:20;7651:1;7644:31;7698:4;7695:1;7688:15;7726:4;7723:1;7716:15;7609:132;-1:-1:-1;7755:9:3;;7553:217::o;7775:168::-;7815:7;7881:1;7877;7873:6;7869:14;7866:1;7863:21;7858:1;7851:9;7844:17;7840:45;7837:71;;;7888:18;;:::i;:::-;-1:-1:-1;7928:9:3;;7775:168::o;8709:135::-;8748:3;8769:17;;;8766:43;;8789:18;;:::i;:::-;-1:-1:-1;8836:1:3;8825:13;;8709:135::o;9036:326::-;9129:5;9152:1;9162:194;9176:4;9173:1;9170:11;9162:194;;;9235:13;;9223:26;;9272:4;9296:12;;;;9331:15;;;;9196:1;9189:9;9162:194;;9367:435;9420:3;9458:5;9452:12;9485:6;9480:3;9473:19;9511:4;9540:2;9535:3;9531:12;9524:19;;9577:2;9570:5;9566:14;9598:1;9608:169;9622:6;9619:1;9616:13;9608:169;;;9683:13;;9671:26;;9717:12;;;;9752:15;;;;9644:1;9637:9;9608:169;;;-1:-1:-1;9793:3:3;;9367:435;-1:-1:-1;;;;;9367:435:3:o;9807:461::-;9866:3;9904:5;9898:12;9931:6;9926:3;9919:19;9957:4;9986:2;9981:3;9977:12;9970:19;;10023:2;10016:5;10012:14;10044:1;10054:189;10068:6;10065:1;10062:13;10054:189;;;10117:44;10157:3;10148:6;10142:13;10117:44;:::i;:::-;10190:4;10181:14;;;;;10218:15;;;;10090:1;10083:9;10054:189;;10273:1259;10732:3;10721:9;10714:22;10695:4;10765:6;10759:13;10809:6;10803:3;10792:9;10788:19;10781:35;10834:1;10844:145;10858:6;10855:1;10852:13;10844:145;;;10972:4;10956:14;;;10952:25;;10946:32;10940:3;10921:17;;;10917:27;10910:69;10873:12;10844:145;;;11007:6;11004:1;11001:13;10998:92;;;11078:1;11072:3;11063:6;11052:9;11048:22;11044:32;11037:43;10998:92;-1:-1:-1;11185:4:3;11170:20;;11163:36;;;11149:2;11128:15;-1:-1:-1;;11124:29:3;11109:45;;11208:52;11256:2;11241:18;;11233:6;11208:52;:::i;:::-;11321:3;11309:9;11305:2;11301:18;11297:28;11291:3;11280:9;11276:19;11269:57;11349:50;11394:3;11390:2;11386:12;11378:6;11349:50;:::i;:::-;11335:64;;11448:9;11440:6;11436:22;11430:3;11419:9;11415:19;11408:51;11476:50;11519:6;11511;11476:50;:::i;:::-;11468:58;10273:1259;-1:-1:-1;;;;;;;;10273:1259:3:o;12236:204::-;12274:3;12310:4;12307:1;12303:12;12342:4;12339:1;12335:12;12377:3;12371:4;12367:14;12362:3;12359:23;12356:49;;;12385:18;;:::i;:::-;12421:13;;12236:204;-1:-1:-1;;;12236:204:3:o;13637:1207::-;13978:6;13973:3;13966:19;13948:3;14004:2;14036:6;14031:2;14026:3;14022:12;14015:28;14062:2;14094:6;14089:2;14084:3;14080:12;14073:28;14162:3;14157;14153:13;14144:6;14139:3;14135:16;14131:36;14126:2;14121:3;14117:12;14110:58;14199:2;14194:3;14190:12;14248:6;14272:1;14293;14303:506;14319:4;14314:3;14311:13;14303:506;;;14380:13;;14419:5;14506:1;14520:205;14536:4;14531:3;14528:13;14520:205;;;14609:15;;14595:30;;14694:17;;;;14651:14;;;;14560:1;14551:11;14520:205;;;-1:-1:-1;;;14747:14:3;;;;14784:15;;;;14343:1;14334:11;14303:506;;;14307:3;;;;;;14834;14829;14825:13;14818:20;;13637:1207;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    123,
    7101
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10837EEC EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x143AD356 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x62230498 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x6381D19E EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x6A6DCD42 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x9F1961E6 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8B86E63 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x45C37318 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xCD3B289 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH20 0x0 SWAP1 PUSH4 0x669D9448 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x504B5F4E4F545F4F4E5F4355525645 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC CALLVALUE PUSH2 0xAFD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 MLOAD SWAP3 DUP8 ADD MLOAD SWAP2 MLOAD PUSH4 0xCD3B289 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x669D9448 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5075626C6963204B6579206E6F206F6E204375727665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x490 JUMPI DUP5 MLOAD PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x431 JUMPI POP PUSH1 0x20 DUP1 DUP7 ADD MLOAD PUSH1 0xFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920696E2063757272656E742052696E6700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D3 JUMP JUMPDEST DUP1 PUSH2 0x488 DUP2 PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DE JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x4AE JUMPI PUSH2 0x4AB PUSH1 0x1 NUMBER PUSH2 0x1089 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4D2 SWAP1 DUP6 PUSH1 0x2 PUSH2 0xD04 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x4E8 DUP4 PUSH2 0x106A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 DUP2 ADD SLOAD PUSH1 0xFF AND LT PUSH2 0x56D JUMPI PUSH2 0x543 PUSH2 0x53D PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x10B8 JUMP JUMPDEST DUP4 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x567 SWAP1 DUP5 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS SWAP1 POP PUSH1 0x0 PUSH2 0x595 PUSH2 0x590 DUP10 PUSH8 0xDE0B6B3A7640000 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0xAFD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 DUP1 DUP3 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND LT PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C2066756E64732066726F6D2063757272656E742052696E672068617320 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x3132B2B7103BB4BA34323930BBB7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x149A5B99C81A5CDB89DD0818DB1BDCD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x68A PUSH2 0xCE6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x682 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x3 DUP6 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP7 ADD PUSH1 0x20 DUP2 DUP2 MSTORE SWAP5 DUP3 KECCAK256 DUP1 SLOAD DUP6 MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP3 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP5 DUP1 PUSH2 0x70A SWAP1 PUSH2 0x10F9 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xFE46A2B2 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x745 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP12 DUP12 DUP12 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP7 LT ISZERO PUSH2 0x8B4 JUMPI DUP8 MLOAD PUSH1 0xFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x855 JUMPI POP PUSH1 0x20 DUP1 DUP10 ADD MLOAD PUSH1 0xFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP7 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E617475726520686173206265656E2075736564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D3 JUMP JUMPDEST DUP6 PUSH2 0x8AC DUP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x801 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8DD SWAP1 DUP10 PUSH1 0x2 PUSH2 0xD04 JUMP JUMPDEST POP PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x1 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x1240 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP6 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 PUSH2 0x590 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 ISZERO PUSH2 0x9EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52696E6720697320616C726561647920636C6F73656421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D3 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x9FF PUSH1 0x1 NUMBER PUSH2 0x1089 JUMP JUMPDEST PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST LT PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52696E67206E6565647320746F206D6174757265206C6F6E676572206265666F PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x726520666F72636566756C6C7920636C6F73696E67 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xA8F PUSH2 0xA89 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x10B8 JUMP JUMPDEST DUP6 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xAB3 SWAP1 DUP5 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD7 PUSH2 0x590 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xB14 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0xB26 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 POP JUMPDEST PUSH1 0xA DUP4 LT ISZERO PUSH2 0xB6D JUMPI DUP1 PUSH1 0x0 DUP5 PUSH1 0xA DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB4A PUSH2 0x101C JUMP JUMPDEST ADD SLOAD SUB PUSH2 0xB56 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP2 PUSH2 0xB6D JUMPI DUP3 PUSH2 0xB65 DUP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP4 POP POP PUSH2 0xB2D JUMP JUMPDEST DUP2 PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204554482076616C756573206F6620322C20342C20362C2038202E2E PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0xB880D4C4C88185C9948185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE6 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFD PUSH2 0x590 DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC90 JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE SWAP2 PUSH1 0x2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC4C JUMPI POP POP POP POP POP DUP5 DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0xC79 JUMPI PUSH2 0xC79 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE DUP1 PUSH2 0xC88 DUP2 PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xC9E PUSH1 0x1 NUMBER PUSH2 0x1089 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCC3 SWAP5 BLOCKHASH SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP10 SWAP1 PUSH1 0x20 ADD PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD32 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD32 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD17 JUMP JUMPDEST POP PUSH2 0xD3E SWAP3 SWAP2 POP PUSH2 0xD6F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0xD59 PUSH2 0xCE6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD51 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xDC5 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xDA6 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE07 JUMPI PUSH2 0xE07 PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE57 PUSH2 0xDE4 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE83 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0xE6B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEAA DUP4 DUP4 PUSH2 0xE3E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0xF06 DUP10 PUSH1 0x80 DUP11 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF49 JUMPI PUSH2 0xF49 PUSH2 0xDCE JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xF5A DUP5 DUP4 ADD PUSH2 0xE0D JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP14 DUP5 GT ISZERO PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xF92 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xF79 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF0 PUSH2 0xDE4 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE83 JUMPI DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x1004 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1080 JUMPI PUSH2 0x1080 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x109B JUMPI PUSH2 0x109B PUSH2 0x1054 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B3 PUSH2 0x1054 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10F4 JUMPI PUSH2 0x10F4 PUSH2 0x1054 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x110B JUMPI PUSH2 0x110B PUSH2 0x1054 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x56D JUMPI DUP2 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1165 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1149 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1165 JUMPI PUSH2 0x1197 DUP8 DUP4 MLOAD PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1184 JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 DUP7 MLOAD DUP1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11D8 JUMPI PUSH1 0x20 DUP2 DUP11 ADD DUP2 ADD MLOAD PUSH1 0xE0 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x11BB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x11EA JUMPI PUSH1 0x0 PUSH1 0xE0 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x1208 PUSH1 0x40 DUP5 ADD DUP8 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1220 PUSH1 0xE0 DUP3 ADD DUP7 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1234 DUP2 DUP6 PUSH2 0x1170 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125D PUSH2 0x1054 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP7 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP7 DUP2 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xF8 SHL DUP7 PUSH1 0xF8 SHL AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x61 DUP5 ADD DUP6 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x12CE JUMPI DUP3 MLOAD DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x12BB JUMPI DUP3 MLOAD DUP3 MSTORE SWAP2 DUP9 ADD SWAP2 SWAP1 DUP9 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x129E JUMP JUMPDEST POP POP POP SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1290 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x121 DUP3 ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR CALLDATALOAD 0x4F 0xBC 0xEE 0xE1 CALLDATACOPY 0xE1 0xC3 COINBASE CODECOPY 0xD2 0xBF 0x4A PUSH21 0x777B4DEF18F14A99F8266EF5B7F0178DAE64736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        123,
        7101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x10837EEC"
    },
    "25": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x143AD356"
    },
    "36": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90"
    },
    "40": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62230498"
    },
    "47": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "51": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6381D19E"
    },
    "58": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5"
    },
    "62": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6A6DCD42"
    },
    "69": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "73": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9F1961E6"
    },
    "80": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "84": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        123,
        7101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "90": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "91": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "92": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "94": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "97": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "op": "POP"
    },
    "104": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "107": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "110": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "111": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "113": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD84"
    },
    "116": {
      "fn": "Hetti.privateToPublic",
      "jump": "i",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "117": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "121": {
      "fn": "Hetti.privateToPublic",
      "jump": "i",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "122": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "125": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "126": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "129": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "130": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "131": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9D"
    },
    "134": {
      "fn": "Hetti.privateToPublic",
      "jump": "i",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "135": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "136": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "138": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "139": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "141": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SUB",
      "path": "0"
    },
    "142": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "143": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "RETURN",
      "path": "0"
    },
    "144": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "145": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "148": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "151": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "152": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "154": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8E"
    },
    "157": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        878,
        2358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "158": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1"
    },
    "162": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        878,
        2358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "163": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "STOP",
      "path": "0"
    },
    "165": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "167": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "169": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1"
    },
    "172": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "173": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "175": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "176": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "REVERT",
      "path": "0"
    },
    "177": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "178": {
      "op": "POP"
    },
    "179": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "182": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "185": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "186": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "188": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB1"
    },
    "191": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "196": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "197": {
      "offset": [
        813,
        871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "198": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "199": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "201": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "204": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "207": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "REVERT",
      "path": "0"
    },
    "209": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "op": "POP"
    },
    "211": {
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "214": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0"
    },
    "217": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "218": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "220": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA5"
    },
    "223": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        813,
        871
      ],
      "op": "JUMP",
      "path": "0"
    },
    "224": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "225": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "227": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "229": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "230": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "231": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "232": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "234": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "235": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "0"
    },
    "236": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "237": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "239": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "240": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "0"
    },
    "241": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "242": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "243": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "244": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "245": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "246": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "247": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "248": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "249": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "250": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "251": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "252": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "254": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "255": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "0"
    },
    "256": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "257": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "259": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "0"
    },
    "260": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "0"
    },
    "261": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "262": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "264": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "265": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "266": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "0"
    },
    "267": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "268": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "269": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "270": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "271": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "272": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "274": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "275": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "276": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "0"
    },
    "277": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "278": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "281": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "282": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DIV",
      "path": "0"
    },
    "283": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "0"
    },
    "284": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP6",
      "path": "0"
    },
    "285": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "JUMP",
      "path": "0"
    },
    "286": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "287": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "289": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": "Hetti.withdraw",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "291": {
      "op": "SWAP6"
    },
    "292": {
      "op": "DUP7"
    },
    "293": {
      "op": "MSTORE"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "296": {
      "op": "DUP7"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "op": "SWAP5"
    },
    "299": {
      "op": "SWAP1"
    },
    "300": {
      "op": "SWAP5"
    },
    "301": {
      "op": "MSTORE"
    },
    "302": {
      "op": "SWAP3"
    },
    "303": {
      "op": "DUP5"
    },
    "304": {
      "op": "ADD"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "SWAP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "DUP2"
    },
    "313": {
      "op": "AND"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "316": {
      "op": "DUP5"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "AND"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "322": {
      "op": "DUP3"
    },
    "323": {
      "op": "ADD"
    },
    "324": {
      "op": "MSTORE"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "ADD"
    },
    "328": {
      "offset": [
        813,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "331": {
      "op": "JUMP"
    },
    "332": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "334": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "DUP1",
      "path": "0"
    },
    "335": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "336": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "339": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "340": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "342": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "DUP1",
      "path": "0"
    },
    "343": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "REVERT",
      "path": "0"
    },
    "344": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "op": "POP"
    },
    "346": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "349": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "352": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "353": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "355": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA5"
    },
    "358": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMP",
      "path": "0"
    },
    "359": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95F"
    },
    "363": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMP",
      "path": "0"
    },
    "364": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "366": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "DUP1",
      "path": "0"
    },
    "367": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "368": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "371": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "372": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "374": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "DUP1",
      "path": "0"
    },
    "375": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "REVERT",
      "path": "0"
    },
    "376": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "377": {
      "op": "POP"
    },
    "378": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "381": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "384": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "385": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "387": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA5"
    },
    "390": {
      "fn": "Hetti.getRingHash",
      "jump": "i",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABF"
    },
    "395": {
      "fn": "Hetti.getRingHash",
      "jump": "i",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "396": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "399": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "400": {
      "op": "SWAP1"
    },
    "401": {
      "op": "DUP2"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "409": {
      "op": "JUMP"
    },
    "410": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6795,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "414": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6795,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE6"
    },
    "417": {
      "fn": "Hetti.privateToPublic",
      "jump": "i",
      "offset": [
        6795,
        6822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6795,
        6822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x40"
    },
    "421": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "422": {
      "op": "PUSH4",
      "value": "0x8B86E63"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "432": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "434": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "435": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "ADD",
      "path": "0"
    },
    "436": {
      "op": "DUP4"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6854
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "460": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "461": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6861
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x45C37318"
    },
    "466": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "469": {
      "op": "ADD"
    },
    "470": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "472": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "474": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "476": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "SUB",
      "path": "0"
    },
    "477": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "478": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP7",
      "path": "0"
    },
    "479": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "GAS",
      "path": "0"
    },
    "480": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "481": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "482": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "483": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "484": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "487": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "488": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "489": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "491": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "493": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "494": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "496": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "REVERT",
      "path": "0"
    },
    "497": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "POP",
      "path": "0"
    },
    "499": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "POP",
      "path": "0"
    },
    "500": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "POP",
      "path": "0"
    },
    "501": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "POP",
      "path": "0"
    },
    "502": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "504": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "505": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "506": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "508": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "NOT",
      "path": "0"
    },
    "509": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "511": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "512": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "ADD",
      "path": "0"
    },
    "513": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "AND",
      "path": "0"
    },
    "514": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "515": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "ADD",
      "path": "0"
    },
    "516": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "517": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "519": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "520": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "POP",
      "path": "0"
    },
    "521": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "ADD",
      "path": "0"
    },
    "523": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "524": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "527": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "528": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "529": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC7"
    },
    "532": {
      "fn": "Hetti.privateToPublic",
      "jump": "i",
      "offset": [
        6846,
        6865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "533": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6846,
        6865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6900,
        6912
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "535": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6900,
        6912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "536": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6900,
        6912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "538": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "539": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6914,
        6926
      ],
      "op": "ADD",
      "path": "0"
    },
    "540": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6914,
        6926
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "541": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "543": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "544": {
      "op": "PUSH4",
      "value": "0xCD3B289"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "553": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "554": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "556": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "557": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "ADD",
      "path": "0"
    },
    "558": {
      "op": "SWAP3"
    },
    "559": {
      "op": "SWAP1"
    },
    "560": {
      "op": "SWAP3"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "564": {
      "op": "DUP3"
    },
    "565": {
      "op": "ADD"
    },
    "566": {
      "op": "MSTORE"
    },
    "567": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6834,
        6865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "568": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6834,
        6865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6891
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "591": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "592": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x669D9448"
    },
    "597": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "600": {
      "op": "ADD"
    },
    "601": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "603": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "605": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "606": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "607": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP4",
      "path": "0"
    },
    "608": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "SUB",
      "path": "0"
    },
    "609": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "610": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP7",
      "path": "0"
    },
    "611": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "GAS",
      "path": "0"
    },
    "612": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "613": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "614": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "615": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "616": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "619": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "620": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "621": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "623": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "624": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "625": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "626": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "629": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "POP",
      "path": "0"
    },
    "631": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "POP",
      "path": "0"
    },
    "632": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "POP",
      "path": "0"
    },
    "633": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "POP",
      "path": "0"
    },
    "634": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "636": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "637": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "638": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "640": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "NOT",
      "path": "0"
    },
    "641": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "643": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "644": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "ADD",
      "path": "0"
    },
    "645": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "AND",
      "path": "0"
    },
    "646": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "647": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "ADD",
      "path": "0"
    },
    "648": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "651": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "652": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "POP",
      "path": "0"
    },
    "653": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "654": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "ADD",
      "path": "0"
    },
    "655": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "656": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "659": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "660": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "661": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1032"
    },
    "664": {
      "fn": "Hetti.privateToPublic",
      "jump": "i",
      "offset": [
        6883,
        6927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "665": {
      "branch": 37,
      "fn": "Hetti.privateToPublic",
      "offset": [
        6883,
        6927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "666": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "669": {
      "branch": 37,
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "670": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "672": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "681": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "684": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "686": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "687": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "ADD",
      "path": "0"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "693": {
      "op": "DUP3"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "op": "PUSH15",
      "value": "0x504B5F4E4F545F4F4E5F4355525645"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "717": {
      "op": "DUP3"
    },
    "718": {
      "op": "ADD"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "724": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "726": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "727": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "728": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "SUB",
      "path": "0"
    },
    "730": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "731": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "REVERT",
      "path": "0"
    },
    "732": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6875,
        6947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "734": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "Hetti.privateToPublic",
      "offset": [
        6737,
        6981
      ],
      "op": "POP",
      "path": "0"
    },
    "736": {
      "fn": "Hetti.privateToPublic",
      "jump": "o",
      "offset": [
        6737,
        6981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "737": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "fn": "Hetti.deposit",
      "offset": [
        980,
        1001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "740": {
      "fn": "Hetti.deposit",
      "offset": [
        1004,
        1033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC"
    },
    "743": {
      "fn": "Hetti.deposit",
      "offset": [
        1023,
        1032
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "744": {
      "fn": "Hetti.deposit",
      "offset": [
        1004,
        1022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "747": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1004,
        1033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "748": {
      "fn": "Hetti.deposit",
      "offset": [
        1004,
        1033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "749": {
      "fn": "Hetti.deposit",
      "offset": [
        1093,
        1109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "751": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "752": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "753": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "754": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "756": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "758": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "759": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "760": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "761": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "763": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "DUP1",
      "path": "0"
    },
    "764": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "DUP4",
      "path": "0"
    },
    "765": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "766": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "767": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "769": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1184
      ],
      "op": "DUP4",
      "path": "0"
    },
    "770": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1184
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "772": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1184
      ],
      "op": "DUP5",
      "path": "0"
    },
    "773": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1184
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "774": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "775": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP6",
      "path": "0"
    },
    "776": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "777": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP4",
      "path": "0"
    },
    "778": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "779": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "780": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "781": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "782": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "783": {
      "fn": "Hetti.deposit",
      "offset": [
        1235,
        1247
      ],
      "op": "DUP7",
      "path": "0"
    },
    "784": {
      "fn": "Hetti.deposit",
      "offset": [
        1235,
        1247
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "785": {
      "fn": "Hetti.deposit",
      "offset": [
        1258,
        1270
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "786": {
      "fn": "Hetti.deposit",
      "offset": [
        1258,
        1270
      ],
      "op": "DUP8",
      "path": "0"
    },
    "787": {
      "fn": "Hetti.deposit",
      "offset": [
        1258,
        1270
      ],
      "op": "ADD",
      "path": "0"
    },
    "788": {
      "fn": "Hetti.deposit",
      "offset": [
        1258,
        1270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "789": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "790": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "791": {
      "op": "PUSH4",
      "value": "0xCD3B289"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "800": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "801": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "803": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "804": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "ADD",
      "path": "0"
    },
    "805": {
      "op": "SWAP4"
    },
    "806": {
      "op": "SWAP1"
    },
    "807": {
      "op": "SWAP4"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "811": {
      "op": "DUP4"
    },
    "812": {
      "op": "ADD"
    },
    "813": {
      "op": "SWAP2"
    },
    "814": {
      "op": "SWAP1"
    },
    "815": {
      "op": "SWAP2"
    },
    "816": {
      "op": "MSTORE"
    },
    "817": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "818": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "819": {
      "op": "POP"
    },
    "820": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "Hetti.deposit",
      "offset": [
        1112,
        1134
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "822": {
      "fn": "Hetti.deposit",
      "offset": [
        1164,
        1194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "823": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1218
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "844": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "845": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1226
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x669D9448"
    },
    "850": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "856": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "858": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "859": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "860": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP4",
      "path": "0"
    },
    "861": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "SUB",
      "path": "0"
    },
    "862": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "863": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP7",
      "path": "0"
    },
    "864": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "GAS",
      "path": "0"
    },
    "865": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "866": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "867": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "868": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "869": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "872": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "873": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "874": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "876": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "877": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "878": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "879": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "881": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "REVERT",
      "path": "0"
    },
    "882": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "POP",
      "path": "0"
    },
    "884": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "POP",
      "path": "0"
    },
    "885": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "POP",
      "path": "0"
    },
    "886": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "POP",
      "path": "0"
    },
    "887": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "889": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "890": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "891": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "893": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "NOT",
      "path": "0"
    },
    "894": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "896": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP3",
      "path": "0"
    },
    "897": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "ADD",
      "path": "0"
    },
    "898": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "AND",
      "path": "0"
    },
    "899": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP3",
      "path": "0"
    },
    "900": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "ADD",
      "path": "0"
    },
    "901": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "902": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "904": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "905": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "POP",
      "path": "0"
    },
    "906": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "907": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "ADD",
      "path": "0"
    },
    "908": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x396"
    },
    "912": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "913": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1032"
    },
    "917": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1210,
        1272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "918": {
      "branch": 38,
      "fn": "Hetti.deposit",
      "offset": [
        1210,
        1272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "919": {
      "fn": "Hetti.deposit",
      "offset": [
        1205,
        1331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "922": {
      "branch": 38,
      "fn": "Hetti.deposit",
      "offset": [
        1205,
        1331
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "923": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "925": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "934": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "937": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "939": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "DUP3",
      "path": "0"
    },
    "940": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "ADD",
      "path": "0"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "op": "MSTORE"
    },
    "949": {
      "op": "PUSH22",
      "value": "0x5075626C6963204B6579206E6F206F6E204375727665"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "fn": "Hetti.deposit",
      "offset": [
        1288,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "986": {
      "op": "JUMP"
    },
    "987": {
      "fn": "Hetti.deposit",
      "offset": [
        1205,
        1331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "988": {
      "fn": "Hetti.deposit",
      "offset": [
        1435,
        1442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "990": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "991": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "993": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "994": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "ADD",
      "path": "0"
    },
    "995": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "996": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "998": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1000": {
      "fn": "Hetti.deposit",
      "offset": [
        1452,
        1472
      ],
      "op": "AND",
      "path": "0"
    },
    "1001": {
      "fn": "Hetti.deposit",
      "offset": [
        1448,
        1472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "Hetti.deposit",
      "offset": [
        1448,
        1472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1003": {
      "fn": "Hetti.deposit",
      "offset": [
        1448,
        1472
      ],
      "op": "AND",
      "path": "0"
    },
    "1004": {
      "fn": "Hetti.deposit",
      "offset": [
        1448,
        1472
      ],
      "op": "LT",
      "path": "0"
    },
    "1005": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1006": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x490"
    },
    "1009": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1010": {
      "fn": "Hetti.deposit",
      "offset": [
        1522,
        1534
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1011": {
      "fn": "Hetti.deposit",
      "offset": [
        1522,
        1534
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1012": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1014": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1015": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "AND",
      "path": "0"
    },
    "1016": {
      "fn": "Hetti.deposit",
      "offset": [
        1532,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1018": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1019": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1023": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1512
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1024": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1512
      ],
      "op": "ADD",
      "path": "0"
    },
    "1025": {
      "fn": "Hetti.deposit",
      "offset": [
        1522,
        1534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1027": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1028": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1030": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1031": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1515
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1032": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1033": {
      "branch": 39,
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1534
      ],
      "op": "EQ",
      "path": "0"
    },
    "1034": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1035": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1591
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1036": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "1039": {
      "branch": 39,
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "Hetti.deposit",
      "offset": [
        1579,
        1591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1043": {
      "fn": "Hetti.deposit",
      "offset": [
        1579,
        1591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1044": {
      "fn": "Hetti.deposit",
      "offset": [
        1579,
        1591
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1045": {
      "fn": "Hetti.deposit",
      "offset": [
        1579,
        1591
      ],
      "op": "ADD",
      "path": "0"
    },
    "1046": {
      "fn": "Hetti.deposit",
      "offset": [
        1579,
        1591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1047": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1049": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1050": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "AND",
      "path": "0"
    },
    "1051": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1053": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1054": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1055": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1056": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1058": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1569
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1059": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1569
      ],
      "op": "ADD",
      "path": "0"
    },
    "1060": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1061": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1062": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1063": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1065": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1067": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1572
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1068": {
      "fn": "Hetti.deposit",
      "offset": [
        1589,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1070": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1575
      ],
      "op": "ADD",
      "path": "0"
    },
    "1071": {
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1575
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1072": {
      "branch": 40,
      "fn": "Hetti.deposit",
      "offset": [
        1554,
        1591
      ],
      "op": "EQ",
      "path": "0"
    },
    "1073": {
      "fn": "Hetti.deposit",
      "offset": [
        1497,
        1591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1074": {
      "fn": "Hetti.deposit",
      "offset": [
        1493,
        1667
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1075": {
      "fn": "Hetti.deposit",
      "offset": [
        1493,
        1667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47E"
    },
    "1078": {
      "branch": 40,
      "fn": "Hetti.deposit",
      "offset": [
        1493,
        1667
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1079": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "1081": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1090": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1093": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1095": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1096": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "ADD",
      "path": "0"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH32",
      "value": "0x4164647265737320616C726561647920696E2063757272656E742052696E6700"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1140": {
      "op": "DUP3"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "fn": "Hetti.deposit",
      "offset": [
        1611,
        1652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "1149": {
      "op": "JUMP"
    },
    "1150": {
      "fn": "Hetti.deposit",
      "offset": [
        1493,
        1667
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1151": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "1152": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x488"
    },
    "1155": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1156": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106A"
    },
    "1159": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1474,
        1477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1160": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1161": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1162": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1163": {
      "fn": "Hetti.deposit",
      "offset": [
        1474,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1164": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DE"
    },
    "1167": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1168": {
      "fn": "Hetti.deposit",
      "offset": [
        1430,
        1677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1172": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1173": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "ADD",
      "path": "0"
    },
    "1174": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1175": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1177": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "AND",
      "path": "0"
    },
    "1178": {
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1180": {
      "branch": 41,
      "fn": "Hetti.deposit",
      "offset": [
        1756,
        1781
      ],
      "op": "SUB",
      "path": "0"
    },
    "1181": {
      "fn": "Hetti.deposit",
      "offset": [
        1752,
        1850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1184": {
      "branch": 41,
      "fn": "Hetti.deposit",
      "offset": [
        1752,
        1850
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1185": {
      "fn": "Hetti.deposit",
      "offset": [
        1823,
        1839
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x4AB"
    },
    "1188": {
      "fn": "Hetti.deposit",
      "offset": [
        1838,
        1839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1190": {
      "fn": "Hetti.deposit",
      "offset": [
        1823,
        1835
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "1191": {
      "fn": "Hetti.deposit",
      "offset": [
        1823,
        1839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1089"
    },
    "1194": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1823,
        1839
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1195": {
      "fn": "Hetti.deposit",
      "offset": [
        1823,
        1839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1196": {
      "fn": "Hetti.deposit",
      "offset": [
        1797,
        1839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "Hetti.deposit",
      "offset": [
        1797,
        1839
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1198": {
      "fn": "Hetti.deposit",
      "offset": [
        1752,
        1850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1199": {
      "fn": "Hetti.deposit",
      "offset": [
        1906,
        1926
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x3"
    },
    "1201": {
      "fn": "Hetti.deposit",
      "offset": [
        1906,
        1926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1202": {
      "fn": "Hetti.deposit",
      "offset": [
        1906,
        1926
      ],
      "op": "ADD",
      "path": "0"
    },
    "1203": {
      "fn": "Hetti.deposit",
      "offset": [
        1906,
        1926
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1204": {
      "fn": "Hetti.deposit",
      "offset": [
        1906,
        1926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1206": {
      "fn": "Hetti.deposit",
      "offset": [
        1906,
        1926
      ],
      "op": "AND",
      "path": "0"
    },
    "1207": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1209": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1210": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1211": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1212": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1214": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1215": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1905
      ],
      "op": "ADD",
      "path": "0"
    },
    "1216": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1218": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1219": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1221": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1222": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1927
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1223": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D2"
    },
    "1226": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1227": {
      "fn": "Hetti.deposit",
      "offset": [
        1930,
        1939
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1228": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1939
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1230": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD04"
    },
    "1233": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1890,
        1939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1234": {
      "fn": "Hetti.deposit",
      "offset": [
        1890,
        1939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1969
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x3"
    },
    "1238": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1969
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1239": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1969
      ],
      "op": "ADD",
      "path": "0"
    },
    "1240": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1241": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1242": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1244": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "AND",
      "path": "0"
    },
    "1245": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1248": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E8"
    },
    "1251": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1252": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106A"
    },
    "1255": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1949,
        1971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1256": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1257": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1258": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1259": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1262": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "EXP",
      "path": "0"
    },
    "1263": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1265": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1266": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1268": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "MUL",
      "path": "0"
    },
    "1269": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "NOT",
      "path": "0"
    },
    "1270": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "AND",
      "path": "0"
    },
    "1271": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1273": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1275": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "AND",
      "path": "0"
    },
    "1276": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "MUL",
      "path": "0"
    },
    "1277": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "OR",
      "path": "0"
    },
    "1278": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1279": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1280": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "POP",
      "path": "0"
    },
    "1281": {
      "fn": "Hetti.deposit",
      "offset": [
        1949,
        1971
      ],
      "op": "POP",
      "path": "0"
    },
    "1282": {
      "fn": "Hetti.deposit",
      "offset": [
        2005,
        2018
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 8
    },
    "1283": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        1985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1284": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1286": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2001
      ],
      "op": "ADD",
      "path": "0"
    },
    "1287": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1289": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1290": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1291": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1292": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x515"
    },
    "1295": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1296": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1297": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "1300": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        1981,
        2018
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1301": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1302": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1304": {
      "fn": "Hetti.deposit",
      "offset": [
        1981,
        2018
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1305": {
      "op": "POP"
    },
    "1306": {
      "op": "POP"
    },
    "1307": {
      "offset": [
        232,
        233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1309": {
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1310": {
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1311": {
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2132
      ],
      "op": "ADD",
      "path": "0"
    },
    "1312": {
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2132
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1313": {
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1315": {
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2132
      ],
      "op": "AND",
      "path": "0"
    },
    "1316": {
      "branch": 42,
      "fn": "Hetti.deposit",
      "offset": [
        2112,
        2155
      ],
      "op": "LT",
      "path": "0"
    },
    "1317": {
      "fn": "Hetti.deposit",
      "offset": [
        2108,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "1320": {
      "branch": 42,
      "fn": "Hetti.deposit",
      "offset": [
        2108,
        2352
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1321": {
      "fn": "Hetti.deposit",
      "offset": [
        2215,
        2266
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x543"
    },
    "1324": {
      "fn": "Hetti.deposit",
      "offset": [
        2230,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53D"
    },
    "1327": {
      "fn": "Hetti.deposit",
      "offset": [
        2247,
        2254
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "1336": {
      "fn": "Hetti.deposit",
      "offset": [
        2230,
        2243
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1337": {
      "fn": "Hetti.deposit",
      "offset": [
        2230,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B8"
    },
    "1340": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        2230,
        2255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1341": {
      "fn": "Hetti.deposit",
      "offset": [
        2230,
        2255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1342": {
      "fn": "Hetti.deposit",
      "offset": [
        2257,
        2265
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1343": {
      "fn": "Hetti.deposit",
      "offset": [
        2215,
        2229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDC"
    },
    "1346": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        2215,
        2266
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1347": {
      "fn": "Hetti.deposit",
      "offset": [
        2215,
        2266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1348": {
      "fn": "Hetti.deposit",
      "offset": [
        2199,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1350": {
      "fn": "Hetti.deposit",
      "offset": [
        2199,
        2212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1351": {
      "fn": "Hetti.deposit",
      "offset": [
        2199,
        2212
      ],
      "op": "ADD",
      "path": "0"
    },
    "1352": {
      "fn": "Hetti.deposit",
      "offset": [
        2199,
        2266
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1353": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1355": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1356": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1357": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1358": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1360": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1362": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1363": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1365": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1366": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1367": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1368": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1369": {
      "fn": "Hetti.deposit",
      "offset": [
        2340,
        2341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1371": {
      "fn": "Hetti.deposit",
      "offset": [
        2340,
        2341
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1372": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1373": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x567"
    },
    "1376": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1377": {
      "fn": "Hetti.deposit",
      "offset": [
        2340,
        2341
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1378": {
      "fn": "Hetti.deposit",
      "offset": [
        2340,
        2341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "1382": {
      "fn": "Hetti.deposit",
      "jump": "i",
      "offset": [
        2314,
        2341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1383": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1384": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1385": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1386": {
      "fn": "Hetti.deposit",
      "offset": [
        2314,
        2341
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "fn": "Hetti.deposit",
      "offset": [
        2108,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1390": {
      "fn": "Hetti.deposit",
      "offset": [
        943,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1391": {
      "fn": "Hetti.deposit",
      "offset": [
        943,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1392": {
      "fn": "Hetti.deposit",
      "offset": [
        943,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1393": {
      "fn": "Hetti.deposit",
      "offset": [
        878,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1394": {
      "fn": "Hetti.deposit",
      "jump": "o",
      "offset": [
        878,
        2358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1395": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1396": {
      "fn": "Hetti.withdraw",
      "offset": [
        2547,
        2553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "Hetti.withdraw",
      "offset": [
        2563,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "Hetti.withdraw",
      "offset": [
        2582,
        2591
      ],
      "op": "GAS",
      "path": "0"
    },
    "1400": {
      "fn": "Hetti.withdraw",
      "offset": [
        2563,
        2591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "fn": "Hetti.withdraw",
      "offset": [
        2629,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1404": {
      "fn": "Hetti.withdraw",
      "offset": [
        2653,
        2694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1407": {
      "fn": "Hetti.withdraw",
      "offset": [
        2672,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x590"
    },
    "1410": {
      "fn": "Hetti.withdraw",
      "offset": [
        2672,
        2683
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1411": {
      "fn": "Hetti.withdraw",
      "offset": [
        2686,
        2693
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "1420": {
      "fn": "Hetti.withdraw",
      "offset": [
        2672,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DA"
    },
    "1423": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        2672,
        2693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1424": {
      "fn": "Hetti.withdraw",
      "offset": [
        2672,
        2693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1425": {
      "fn": "Hetti.withdraw",
      "offset": [
        2653,
        2671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "1428": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        2653,
        2694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1429": {
      "fn": "Hetti.withdraw",
      "offset": [
        2653,
        2694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1430": {
      "fn": "Hetti.withdraw",
      "offset": [
        2754,
        2771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1432": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1433": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1434": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1435": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1437": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1439": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1440": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1441": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1442": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1444": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1445": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1446": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1447": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1448": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1449": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1450": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1451": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1452": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1453": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1454": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1455": {
      "offset": [
        232,
        233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1457": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1458": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1459": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "ADD",
      "path": "0"
    },
    "1460": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1461": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1462": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2794
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1465": {
      "fn": "Hetti.withdraw",
      "offset": [
        2774,
        2801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1466": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1469": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1470": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "DIV",
      "path": "0"
    },
    "1471": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1473": {
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2873
      ],
      "op": "AND",
      "path": "0"
    },
    "1474": {
      "branch": 43,
      "fn": "Hetti.withdraw",
      "offset": [
        2853,
        2896
      ],
      "op": "LT",
      "path": "0"
    },
    "1475": {
      "fn": "Hetti.withdraw",
      "offset": [
        2849,
        2979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x625"
    },
    "1478": {
      "branch": 43,
      "fn": "Hetti.withdraw",
      "offset": [
        2849,
        2979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1479": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1481": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1490": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1495": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1496": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "ADD",
      "path": "0"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1502": {
      "op": "DUP3"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "MSTORE"
    },
    "1505": {
      "op": "PUSH32",
      "value": "0x416C6C2066756E64732066726F6D2063757272656E742052696E672068617320"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1540": {
      "op": "DUP3"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "op": "MSTORE"
    },
    "1543": {
      "op": "PUSH14",
      "value": "0x3132B2B7103BB4BA34323930BBB7"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1568": {
      "op": "ADD"
    },
    "1569": {
      "fn": "Hetti.withdraw",
      "offset": [
        2912,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "1572": {
      "op": "JUMP"
    },
    "1573": {
      "fn": "Hetti.withdraw",
      "offset": [
        2849,
        2979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1574": {
      "fn": "Hetti.withdraw",
      "offset": [
        3088,
        3101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1576": {
      "fn": "Hetti.withdraw",
      "offset": [
        3088,
        3101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1577": {
      "fn": "Hetti.withdraw",
      "offset": [
        3088,
        3101
      ],
      "op": "ADD",
      "path": "0"
    },
    "1578": {
      "fn": "Hetti.withdraw",
      "offset": [
        3088,
        3101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1579": {
      "fn": "Hetti.withdraw",
      "offset": [
        3084,
        3172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66A"
    },
    "1582": {
      "fn": "Hetti.withdraw",
      "offset": [
        3084,
        3172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1583": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "1585": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1594": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1597": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1599": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1600": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "ADD",
      "path": "0"
    },
    "1601": {
      "op": "MSTORE"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "MSTORE"
    },
    "1609": {
      "op": "PUSH17",
      "value": "0x149A5B99C81A5CDB89DD0818DB1BDCD959"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1632": {
      "op": "DUP3"
    },
    "1633": {
      "op": "ADD"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "fn": "Hetti.withdraw",
      "offset": [
        3134,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "1641": {
      "op": "JUMP"
    },
    "1642": {
      "fn": "Hetti.withdraw",
      "offset": [
        3084,
        3172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1643": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1645": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1646": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1647": {
      "offset": [
        232,
        233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1649": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1650": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1651": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1652": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1654": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1655": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "ADD",
      "path": "0"
    },
    "1656": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1658": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1659": {
      "fn": "Hetti.withdraw",
      "offset": [
        3182,
        3212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1661": {
      "fn": "Hetti.withdraw",
      "offset": [
        3182,
        3212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1662": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1663": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1665": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "ADD",
      "path": "0"
    },
    "1666": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1667": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "1670": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE6"
    },
    "1673": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        3215,
        3252
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1674": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1675": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1676": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1677": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1679": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "ADD",
      "path": "0"
    },
    "1680": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1681": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1683": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1684": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SUB",
      "path": "0"
    },
    "1685": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1686": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1687": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x682"
    },
    "1690": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1691": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1692": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "POP",
      "path": "0"
    },
    "1693": {
      "fn": "Hetti.withdraw",
      "offset": [
        3215,
        3252
      ],
      "op": "POP",
      "path": "0"
    },
    "1694": {
      "fn": "Hetti.withdraw",
      "offset": [
        3182,
        3252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1695": {
      "fn": "Hetti.withdraw",
      "offset": [
        3182,
        3252
      ],
      "op": "POP",
      "path": "0"
    },
    "1696": {
      "fn": "Hetti.withdraw",
      "offset": [
        3272,
        3273
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1698": {
      "fn": "Hetti.withdraw",
      "offset": [
        3268,
        3273
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1699": {
      "fn": "Hetti.withdraw",
      "offset": [
        3268,
        3273
      ],
      "op": "POP",
      "path": "0"
    },
    "1700": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1701": {
      "offset": [
        232,
        233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1703": {
      "fn": "Hetti.withdraw",
      "offset": [
        3275,
        3276
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1704": {
      "fn": "Hetti.withdraw",
      "offset": [
        3275,
        3298
      ],
      "op": "LT",
      "path": "0"
    },
    "1705": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1706": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x712"
    },
    "1709": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1710": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x40"
    },
    "1712": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1713": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1714": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1715": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1716": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "ADD",
      "path": "0"
    },
    "1717": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1718": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1719": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1721": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1722": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "AND",
      "path": "0"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1725": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1726": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1727": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1728": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1730": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3376
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1731": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3376
      ],
      "op": "ADD",
      "path": "0"
    },
    "1732": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1734": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1735": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1736": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1737": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1738": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1739": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1740": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1741": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3389
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1742": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1743": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1744": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3441
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1745": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1746": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3441
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1747": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1748": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3441
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1749": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1750": {
      "fn": "Hetti.withdraw",
      "offset": [
        3442,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1752": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3444
      ],
      "op": "ADD",
      "path": "0"
    },
    "1753": {
      "fn": "Hetti.withdraw",
      "offset": [
        3416,
        3444
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1754": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1755": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1756": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "ADD",
      "path": "0"
    },
    "1757": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1758": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1760": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1761": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1763": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3329
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1764": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1766": {
      "fn": "Hetti.withdraw",
      "offset": [
        3361,
        3386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1767": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1768": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "LT",
      "path": "0"
    },
    "1769": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F4"
    },
    "1772": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1773": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F4"
    },
    "1776": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101C"
    },
    "1779": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        3319,
        3332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1780": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1781": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1783": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "MUL",
      "path": "0"
    },
    "1784": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1786": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "ADD",
      "path": "0"
    },
    "1787": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3332
      ],
      "op": "ADD",
      "path": "0"
    },
    "1788": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1789": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1791": {
      "fn": "Hetti.withdraw",
      "offset": [
        3319,
        3459
      ],
      "op": "POP",
      "path": "0"
    },
    "1792": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 15
    },
    "1793": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1794": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "1797": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1798": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F9"
    },
    "1801": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        3300,
        3303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1802": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1803": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1804": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "POP",
      "path": "0"
    },
    "1805": {
      "fn": "Hetti.withdraw",
      "offset": [
        3300,
        3303
      ],
      "op": "POP",
      "path": "0"
    },
    "1806": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "1809": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1810": {
      "fn": "Hetti.withdraw",
      "offset": [
        3263,
        3470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1811": {
      "fn": "Hetti.withdraw",
      "offset": [
        3525,
        3547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1813": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3554
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x0"
    },
    "1834": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3561
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFE46A2B2"
    },
    "1839": {
      "fn": "Hetti.withdraw",
      "offset": [
        3592,
        3596
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1840": {
      "fn": "Hetti.withdraw",
      "offset": [
        3592,
        3605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1842": {
      "fn": "Hetti.withdraw",
      "offset": [
        3592,
        3605
      ],
      "op": "ADD",
      "path": "0"
    },
    "1843": {
      "fn": "Hetti.withdraw",
      "offset": [
        3592,
        3605
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1844": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1846": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1847": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1849": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "ADD",
      "path": "0"
    },
    "1850": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x745"
    },
    "1853": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1854": {
      "op": "DUP2"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "SWAP1"
    },
    "1860": {
      "op": "JUMP"
    },
    "1861": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1862": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1864": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1865": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1867": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1868": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1869": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "SUB",
      "path": "0"
    },
    "1870": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "SUB",
      "path": "0"
    },
    "1871": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1872": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1873": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1874": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1876": {
      "fn": "Hetti.withdraw",
      "offset": [
        3575,
        3606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1877": {
      "fn": "Hetti.withdraw",
      "offset": [
        3640,
        3642
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1878": {
      "fn": "Hetti.withdraw",
      "offset": [
        3656,
        3664
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1879": {
      "fn": "Hetti.withdraw",
      "offset": [
        3678,
        3679
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1880": {
      "fn": "Hetti.withdraw",
      "offset": [
        3693,
        3703
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1881": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1883": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1884": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1885": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1890": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "AND",
      "path": "0"
    },
    "1891": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1893": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SHL",
      "path": "0"
    },
    "1894": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1895": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1896": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1898": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "ADD",
      "path": "0"
    },
    "1899": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x778"
    },
    "1902": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1903": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1904": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1905": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1906": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1907": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1908": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AA"
    },
    "1911": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        3550,
        3713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1912": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1913": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1915": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1917": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1918": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1919": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1920": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SUB",
      "path": "0"
    },
    "1921": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1922": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1923": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "GAS",
      "path": "0"
    },
    "1924": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "1925": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1926": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1927": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1928": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x795"
    },
    "1931": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1932": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1933": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1935": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1936": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1937": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1938": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1940": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1941": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1942": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "POP",
      "path": "0"
    },
    "1943": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "POP",
      "path": "0"
    },
    "1944": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "POP",
      "path": "0"
    },
    "1945": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "POP",
      "path": "0"
    },
    "1946": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1948": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1949": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1950": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1952": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "NOT",
      "path": "0"
    },
    "1953": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1955": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1956": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "ADD",
      "path": "0"
    },
    "1957": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "AND",
      "path": "0"
    },
    "1958": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1959": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "ADD",
      "path": "0"
    },
    "1960": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1961": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1963": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1964": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "POP",
      "path": "0"
    },
    "1965": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1966": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "ADD",
      "path": "0"
    },
    "1967": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1968": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B9"
    },
    "1971": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1972": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1973": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1032"
    },
    "1976": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        3550,
        3713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1977": {
      "fn": "Hetti.withdraw",
      "offset": [
        3550,
        3713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1978": {
      "fn": "Hetti.withdraw",
      "offset": [
        3525,
        3713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1979": {
      "fn": "Hetti.withdraw",
      "offset": [
        3525,
        3713
      ],
      "op": "POP",
      "path": "0"
    },
    "1980": {
      "branch": 44,
      "fn": "Hetti.withdraw",
      "offset": [
        3729,
        3746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1981": {
      "fn": "Hetti.withdraw",
      "offset": [
        3724,
        3800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FC"
    },
    "1984": {
      "branch": 44,
      "fn": "Hetti.withdraw",
      "offset": [
        3724,
        3800
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1985": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x40"
    },
    "1987": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1996": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1999": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2001": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2002": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "ADD",
      "path": "0"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2008": {
      "op": "DUP3"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "PUSH17",
      "value": "0x496E76616C6964207369676E6174757265"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2031": {
      "op": "SHL"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "ADD"
    },
    "2036": {
      "op": "MSTORE"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "fn": "Hetti.withdraw",
      "offset": [
        3762,
        3789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "2043": {
      "op": "JUMP"
    },
    "2044": {
      "fn": "Hetti.withdraw",
      "offset": [
        3724,
        3800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2045": {
      "fn": "Hetti.withdraw",
      "offset": [
        3898,
        3899
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2047": {
      "fn": "Hetti.withdraw",
      "offset": [
        3894,
        3899
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2048": {
      "fn": "Hetti.withdraw",
      "offset": [
        3894,
        3899
      ],
      "op": "POP",
      "path": "0"
    },
    "2049": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2050": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2052": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2053": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "ADD",
      "path": "0"
    },
    "2054": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2055": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2058": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "DIV",
      "path": "0"
    },
    "2060": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2062": {
      "fn": "Hetti.withdraw",
      "offset": [
        3905,
        3925
      ],
      "op": "AND",
      "path": "0"
    },
    "2063": {
      "fn": "Hetti.withdraw",
      "offset": [
        3901,
        3925
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2064": {
      "fn": "Hetti.withdraw",
      "offset": [
        3901,
        3925
      ],
      "op": "LT",
      "path": "0"
    },
    "2065": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2066": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B4"
    },
    "2069": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2070": {
      "fn": "Hetti.withdraw",
      "offset": [
        3981,
        3992
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2071": {
      "fn": "Hetti.withdraw",
      "offset": [
        3981,
        3992
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2072": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2074": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2075": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "AND",
      "path": "0"
    },
    "2076": {
      "fn": "Hetti.withdraw",
      "offset": [
        3990,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2078": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2079": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2080": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2081": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2083": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3964
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2084": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3964
      ],
      "op": "ADD",
      "path": "0"
    },
    "2085": {
      "fn": "Hetti.withdraw",
      "offset": [
        3981,
        3992
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2087": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2088": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2090": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2091": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3974
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2092": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2093": {
      "branch": 45,
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        3992
      ],
      "op": "EQ",
      "path": "0"
    },
    "2094": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        4054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2095": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        4054
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2096": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        4054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x855"
    },
    "2099": {
      "branch": 45,
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        4054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2100": {
      "op": "POP"
    },
    "2101": {
      "fn": "Hetti.withdraw",
      "offset": [
        4043,
        4054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2103": {
      "fn": "Hetti.withdraw",
      "offset": [
        4043,
        4054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2104": {
      "fn": "Hetti.withdraw",
      "offset": [
        4043,
        4054
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2105": {
      "fn": "Hetti.withdraw",
      "offset": [
        4043,
        4054
      ],
      "op": "ADD",
      "path": "0"
    },
    "2106": {
      "fn": "Hetti.withdraw",
      "offset": [
        4043,
        4054
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2107": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2109": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2110": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "AND",
      "path": "0"
    },
    "2111": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2113": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2115": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2116": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2118": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4026
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2119": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4026
      ],
      "op": "ADD",
      "path": "0"
    },
    "2120": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2121": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2122": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2123": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2125": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2127": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4036
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2128": {
      "fn": "Hetti.withdraw",
      "offset": [
        4052,
        4053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2130": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4039
      ],
      "op": "ADD",
      "path": "0"
    },
    "2131": {
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4039
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2132": {
      "branch": 46,
      "fn": "Hetti.withdraw",
      "offset": [
        4012,
        4054
      ],
      "op": "EQ",
      "path": "0"
    },
    "2133": {
      "fn": "Hetti.withdraw",
      "offset": [
        3950,
        4054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2134": {
      "fn": "Hetti.withdraw",
      "offset": [
        3946,
        4123
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2135": {
      "fn": "Hetti.withdraw",
      "offset": [
        3946,
        4123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A2"
    },
    "2138": {
      "branch": 46,
      "fn": "Hetti.withdraw",
      "offset": [
        3946,
        4123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2139": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "2141": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2150": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2153": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2155": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2156": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "ADD",
      "path": "0"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2162": {
      "op": "DUP3"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "MSTORE"
    },
    "2165": {
      "op": "PUSH32",
      "value": "0x5369676E617475726520686173206265656E2075736564210000000000000000"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2200": {
      "op": "DUP3"
    },
    "2201": {
      "op": "ADD"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "fn": "Hetti.withdraw",
      "offset": [
        4074,
        4108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "2209": {
      "op": "JUMP"
    },
    "2210": {
      "fn": "Hetti.withdraw",
      "offset": [
        3946,
        4123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2211": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 19
    },
    "2212": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2215": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2216": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F9"
    },
    "2219": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        3927,
        3930
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2220": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2221": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2222": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "POP",
      "path": "0"
    },
    "2223": {
      "fn": "Hetti.withdraw",
      "offset": [
        3927,
        3930
      ],
      "op": "POP",
      "path": "0"
    },
    "2224": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x801"
    },
    "2227": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2228": {
      "fn": "Hetti.withdraw",
      "offset": [
        3889,
        4133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2229": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x3"
    },
    "2231": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2232": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "ADD",
      "path": "0"
    },
    "2233": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2234": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2237": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2238": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "DIV",
      "path": "0"
    },
    "2239": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2241": {
      "fn": "Hetti.withdraw",
      "offset": [
        4261,
        4281
      ],
      "op": "AND",
      "path": "0"
    },
    "2242": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2244": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2245": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2246": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2247": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2249": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4260
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2250": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4260
      ],
      "op": "ADD",
      "path": "0"
    },
    "2251": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2253": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2254": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2256": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2257": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4282
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2258": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DD"
    },
    "2261": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2262": {
      "fn": "Hetti.withdraw",
      "offset": [
        4285,
        4293
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2263": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2265": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD04"
    },
    "2268": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        4246,
        4293
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2269": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4293
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2270": {
      "fn": "Hetti.withdraw",
      "offset": [
        4246,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2271": {
      "fn": "Hetti.withdraw",
      "offset": [
        4327,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "2273": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4307
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2274": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2276": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4323
      ],
      "op": "ADD",
      "path": "0"
    },
    "2277": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2279": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2280": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2281": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2282": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2283": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2284": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2285": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2288": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "EXP",
      "path": "0"
    },
    "2289": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2290": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DIV",
      "path": "0"
    },
    "2291": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2293": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "AND",
      "path": "0"
    },
    "2294": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FF"
    },
    "2297": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2298": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2299": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1240"
    },
    "2302": {
      "fn": "Hetti.withdraw",
      "jump": "i",
      "offset": [
        4303,
        4328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2303": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2304": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2305": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "POP",
      "path": "0"
    },
    "2306": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2309": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "EXP",
      "path": "0"
    },
    "2310": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2311": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2312": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2313": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2315": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "MUL",
      "path": "0"
    },
    "2316": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "NOT",
      "path": "0"
    },
    "2317": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "AND",
      "path": "0"
    },
    "2318": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2319": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2320": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2322": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "AND",
      "path": "0"
    },
    "2323": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "MUL",
      "path": "0"
    },
    "2324": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "OR",
      "path": "0"
    },
    "2325": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2326": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2327": {
      "fn": "Hetti.withdraw",
      "offset": [
        4303,
        4328
      ],
      "op": "POP",
      "path": "0"
    },
    "2328": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4347
      ],
      "op": "DUP12",
      "path": "0",
      "statement": 22
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "op": "SUB"
    },
    "2337": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4356
      ],
      "op": "AND",
      "path": "0"
    },
    "2338": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "2341": {
      "fn": "Hetti.withdraw",
      "offset": [
        4357,
        4370
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2342": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2343": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2344": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2345": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "MUL",
      "path": "0"
    },
    "2346": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2347": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2349": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2350": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2352": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2354": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2355": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2356": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2357": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "SUB",
      "path": "0"
    },
    "2358": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2359": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2360": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2361": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2362": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "CALL",
      "path": "0"
    },
    "2363": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2364": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "POP",
      "path": "0"
    },
    "2365": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "POP",
      "path": "0"
    },
    "2366": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "POP",
      "path": "0"
    },
    "2367": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "POP",
      "path": "0"
    },
    "2368": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2369": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2370": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2371": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x950"
    },
    "2374": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2375": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2376": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2378": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2379": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2380": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2381": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2383": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2384": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2385": {
      "fn": "Hetti.withdraw",
      "offset": [
        4339,
        4371
      ],
      "op": "POP",
      "path": "0"
    },
    "2386": {
      "fn": "Hetti.withdraw",
      "offset": [
        2537,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2387": {
      "fn": "Hetti.withdraw",
      "offset": [
        2537,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2388": {
      "fn": "Hetti.withdraw",
      "offset": [
        2537,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2389": {
      "fn": "Hetti.withdraw",
      "offset": [
        2537,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2390": {
      "fn": "Hetti.withdraw",
      "offset": [
        2537,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2391": {
      "fn": "Hetti.withdraw",
      "offset": [
        2537,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2392": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2393": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2394": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2395": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2396": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2397": {
      "fn": "Hetti.withdraw",
      "offset": [
        2364,
        4378
      ],
      "op": "POP",
      "path": "0"
    },
    "2398": {
      "fn": "Hetti.withdraw",
      "jump": "o",
      "offset": [
        2364,
        4378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2399": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2400": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5167,
        5188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2402": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5191,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2405": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5210,
        5226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x590"
    },
    "2408": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5210,
        5216
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2409": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5219,
        5226
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2418": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5210,
        5226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DA"
    },
    "2421": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5210,
        5226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2422": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5191,
        5227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2423": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5287,
        5303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2425": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2426": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2427": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2428": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2430": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2432": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2433": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2434": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2435": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2437": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2438": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2439": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2440": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2441": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2443": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2444": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2445": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2446": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5378
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2447": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5378
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2448": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2449": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2450": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2451": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2452": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2453": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2454": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2455": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2456": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5358,
        5388
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2457": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5404,
        5417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2459": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5404,
        5417
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2460": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5404,
        5417
      ],
      "op": "ADD",
      "path": "0"
    },
    "2461": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5404,
        5417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2462": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5167,
        5227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2463": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5167,
        5227
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2466": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5306,
        5328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2467": {
      "branch": 47,
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5404,
        5434
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2468": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5400,
        5494
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "2471": {
      "branch": 47,
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5400,
        5494
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2472": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "2474": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2475": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2481": {
      "op": "SHL"
    },
    "2482": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2483": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2486": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2488": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2489": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "ADD",
      "path": "0"
    },
    "2490": {
      "op": "MSTORE"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2495": {
      "op": "DUP3"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "op": "MSTORE"
    },
    "2498": {
      "op": "PUSH32",
      "value": "0x52696E6720697320616C726561647920636C6F73656421000000000000000000"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2533": {
      "op": "DUP3"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "op": "MSTORE"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5450,
        5483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "2542": {
      "op": "JUMP"
    },
    "2543": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5400,
        5494
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2544": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5527,
        5550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2545": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5527,
        5550
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2546": {
      "offset": [
        722,
        723
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2548": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        722,
        723
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2549": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FF"
    },
    "2552": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5523,
        5524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2554": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5520
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "2555": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1089"
    },
    "2558": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5508,
        5524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2559": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2560": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA09"
    },
    "2563": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5550
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2564": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2565": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1089"
    },
    "2568": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5508,
        5550
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2569": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2570": {
      "branch": 48,
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5508,
        5579
      ],
      "op": "LT",
      "path": "0"
    },
    "2571": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5504,
        5669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA74"
    },
    "2574": {
      "branch": 48,
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5504,
        5669
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2575": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x40"
    },
    "2577": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2586": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2589": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2591": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2592": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "ADD",
      "path": "0"
    },
    "2593": {
      "op": "MSTORE"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2598": {
      "op": "DUP3"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "MSTORE"
    },
    "2601": {
      "op": "PUSH32",
      "value": "0x52696E67206E6565647320746F206D6174757265206C6F6E676572206265666F"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2636": {
      "op": "DUP3"
    },
    "2637": {
      "op": "ADD"
    },
    "2638": {
      "op": "MSTORE"
    },
    "2639": {
      "op": "PUSH21",
      "value": "0x726520666F72636566756C6C7920636C6F73696E67"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2666": {
      "op": "DUP3"
    },
    "2667": {
      "op": "ADD"
    },
    "2668": {
      "op": "MSTORE"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2671": {
      "op": "ADD"
    },
    "2672": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5595,
        5658
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "2675": {
      "op": "JUMP"
    },
    "2676": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5504,
        5669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2677": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5721,
        5769
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0xA8F"
    },
    "2680": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5736,
        5761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA89"
    },
    "2683": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5753,
        5760
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2692": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5736,
        5749
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2693": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5736,
        5761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B8"
    },
    "2696": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5736,
        5761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2697": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5736,
        5761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2698": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5763,
        5768
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2699": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5721,
        5735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDC"
    },
    "2702": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5721,
        5769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2703": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5721,
        5769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2704": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5705,
        5718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2706": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5705,
        5718
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2707": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5705,
        5718
      ],
      "op": "ADD",
      "path": "0"
    },
    "2708": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5705,
        5769
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2709": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "2711": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2712": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2713": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2714": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2716": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2718": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2719": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2721": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2722": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2723": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2724": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2725": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5833,
        5834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2727": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5833,
        5834
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2728": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2729": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB3"
    },
    "2732": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2733": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5833,
        5834
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2734": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5833,
        5834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2735": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "2738": {
      "fn": "Hetti.forceCloseRing",
      "jump": "i",
      "offset": [
        5807,
        5834
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2739": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2740": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2741": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2742": {
      "fn": "Hetti.forceCloseRing",
      "offset": [
        5807,
        5834
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "fn": "Hetti.forceCloseRing",
      "jump": "o",
      "offset": [
        5050,
        5841
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2751": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2752": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6583,
        6590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2754": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6583,
        6590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2755": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6630,
        6671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD7"
    },
    "2758": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6649,
        6670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x590"
    },
    "2761": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6649,
        6660
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2762": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6663,
        6670
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2771": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6649,
        6670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DA"
    },
    "2774": {
      "fn": "Hetti.getRingHash",
      "jump": "i",
      "offset": [
        6649,
        6670
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2775": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6630,
        6671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2776": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x0"
    },
    "2778": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2779": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2780": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2781": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2783": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2785": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2786": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2787": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2788": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2790": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2791": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2792": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6708
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2793": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2794": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2795": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2796": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2797": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2798": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2799": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2800": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6715
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2801": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2803": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6724
      ],
      "op": "ADD",
      "path": "0"
    },
    "2804": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6724
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2805": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6688,
        6724
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "op": "POP"
    },
    "2808": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2809": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2810": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "POP",
      "path": "0"
    },
    "2811": {
      "fn": "Hetti.getRingHash",
      "offset": [
        6497,
        6731
      ],
      "op": "POP",
      "path": "0"
    },
    "2812": {
      "fn": "Hetti.getRingHash",
      "jump": "o",
      "offset": [
        6497,
        6731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2813": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        5848,
        6491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2814": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        5931,
        5938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2816": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        5931,
        5938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2817": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        5931,
        5938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2818": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        5931,
        5938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2819": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6062,
        6086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB14"
    },
    "2822": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6079,
        6086
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2831": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6062,
        6076
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2832": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6062,
        6086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B8"
    },
    "2835": {
      "fn": "Hetti.floorEtherAndCheck",
      "jump": "i",
      "offset": [
        6062,
        6086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2836": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6062,
        6086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6061,
        6097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB26"
    },
    "2840": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6061,
        6097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2841": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6090,
        6097
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "2850": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6061,
        6097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DA"
    },
    "2853": {
      "fn": "Hetti.floorEtherAndCheck",
      "jump": "i",
      "offset": [
        6061,
        6097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2854": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6061,
        6097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2855": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6037,
        6097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2856": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6037,
        6097
      ],
      "op": "POP",
      "path": "0"
    },
    "2857": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6117,
        6118
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x0"
    },
    "2859": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6113,
        6118
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2860": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6113,
        6118
      ],
      "op": "POP",
      "path": "0"
    },
    "2861": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2862": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6124,
        6126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2864": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6120,
        6121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2865": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6120,
        6126
      ],
      "op": "LT",
      "path": "0"
    },
    "2866": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2867": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6D"
    },
    "2870": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2871": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6173,
        6186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2872": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2874": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6167,
        6168
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2875": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2877": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2878": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "LT",
      "path": "0"
    },
    "2879": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4A"
    },
    "2882": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2883": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4A"
    },
    "2886": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101C"
    },
    "2889": {
      "fn": "Hetti.floorEtherAndCheck",
      "jump": "i",
      "offset": [
        6152,
        6169
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2890": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2891": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "ADD",
      "path": "0"
    },
    "2892": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6169
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2893": {
      "branch": 49,
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6152,
        6186
      ],
      "op": "SUB",
      "path": "0"
    },
    "2894": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6148,
        6235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB56"
    },
    "2897": {
      "branch": 49,
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6148,
        6235
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2898": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6216,
        6220
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x1"
    },
    "2900": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6206,
        6220
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2901": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6206,
        6220
      ],
      "op": "POP",
      "path": "0"
    },
    "2902": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6148,
        6235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2903": {
      "branch": 50,
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6252,
        6259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2904": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6279,
        6284
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xB6D"
    },
    "2907": {
      "branch": 50,
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6248,
        6299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2908": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 31
    },
    "2909": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB65"
    },
    "2912": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2913": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F9"
    },
    "2916": {
      "fn": "Hetti.floorEtherAndCheck",
      "jump": "i",
      "offset": [
        6128,
        6132
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2917": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2918": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2919": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "POP",
      "path": "0"
    },
    "2920": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6128,
        6132
      ],
      "op": "POP",
      "path": "0"
    },
    "2921": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2D"
    },
    "2924": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2925": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6108,
        6309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2926": {
      "branch": 51,
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6392,
        6399
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 32
    },
    "2927": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD4"
    },
    "2930": {
      "branch": 51,
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2931": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2933": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2942": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2945": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2947": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2948": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "ADD",
      "path": "0"
    },
    "2949": {
      "op": "MSTORE"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH32",
      "value": "0x4F6E6C79204554482076616C756573206F6620322C20342C20362C2038202E2E"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2992": {
      "op": "DUP3"
    },
    "2993": {
      "op": "ADD"
    },
    "2994": {
      "op": "MSTORE"
    },
    "2995": {
      "op": "PUSH17",
      "value": "0xB880D4C4C88185C9948185B1B1BDDD959"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3018": {
      "op": "DUP3"
    },
    "3019": {
      "op": "ADD"
    },
    "3020": {
      "op": "MSTORE"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3023": {
      "op": "ADD"
    },
    "3024": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "3027": {
      "op": "JUMP"
    },
    "3028": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6384,
        6453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3029": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        6471,
        6484
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 33
    },
    "3030": {
      "fn": "Hetti.floorEtherAndCheck",
      "offset": [
        5848,
        6491
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "op": "POP"
    },
    "3034": {
      "op": "POP"
    },
    "3035": {
      "fn": "Hetti.floorEtherAndCheck",
      "jump": "o",
      "offset": [
        5848,
        6491
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3036": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4385,
        5044
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3037": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4476,
        4483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3039": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4499,
        4548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE6"
    },
    "3042": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4499,
        4548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD42"
    },
    "3045": {
      "fn": "Hetti.createRingHash",
      "jump": "i",
      "offset": [
        4499,
        4548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3046": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4499,
        4548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3047": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4558,
        4579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3049": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4582,
        4623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFD"
    },
    "3052": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4601,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x590"
    },
    "3055": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4601,
        4612
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3056": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4615,
        4622
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "3065": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4601,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DA"
    },
    "3068": {
      "fn": "Hetti.createRingHash",
      "jump": "i",
      "offset": [
        4601,
        4622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3069": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4582,
        4623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3070": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4634,
        4648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3072": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3073": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3074": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3075": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3077": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3079": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3080": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3081": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3082": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3084": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3085": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3086": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4671
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3087": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3088": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3089": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3090": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3091": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3092": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3093": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3094": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4651,
        4678
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3095": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4558,
        4623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3096": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4558,
        4623
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3099": {
      "offset": [
        232,
        233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3101": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4707,
        4708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3102": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4707,
        4730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3104": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4707,
        4730
      ],
      "op": "AND",
      "path": "0"
    },
    "3105": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4707,
        4730
      ],
      "op": "LT",
      "path": "0"
    },
    "3106": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3107": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC90"
    },
    "3110": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3111": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0xFF"
    },
    "3113": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3114": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "AND",
      "path": "0"
    },
    "3115": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3117": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3118": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3119": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3120": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3122": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4779
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3123": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4779
      ],
      "op": "ADD",
      "path": "0"
    },
    "3124": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3126": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3127": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3129": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3130": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3131": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3132": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3133": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3134": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3135": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3136": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3137": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "ADD",
      "path": "0"
    },
    "3138": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3139": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3140": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3141": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3142": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3143": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3145": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3146": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4767,
        4782
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3147": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3148": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3149": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3150": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3151": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3152": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3153": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3155": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "ADD",
      "path": "0"
    },
    "3156": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3157": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3159": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "ADD",
      "path": "0"
    },
    "3160": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3161": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3162": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3163": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "GT",
      "path": "0"
    },
    "3164": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4C"
    },
    "3167": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3168": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "POP",
      "path": "0"
    },
    "3169": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "POP",
      "path": "0"
    },
    "3170": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "POP",
      "path": "0"
    },
    "3171": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "POP",
      "path": "0"
    },
    "3172": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "POP",
      "path": "0"
    },
    "3173": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4761
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3174": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4762,
        4763
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3175": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3177": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "AND",
      "path": "0"
    },
    "3178": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3180": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3181": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "LT",
      "path": "0"
    },
    "3182": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC79"
    },
    "3185": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3186": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC79"
    },
    "3189": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101C"
    },
    "3192": {
      "fn": "Hetti.createRingHash",
      "jump": "i",
      "offset": [
        4751,
        4764
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3193": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3194": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3196": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "MUL",
      "path": "0"
    },
    "3197": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4764
      ],
      "op": "ADD",
      "path": "0"
    },
    "3198": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4751,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3199": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 35
    },
    "3200": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC88"
    },
    "3203": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3204": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106A"
    },
    "3207": {
      "fn": "Hetti.createRingHash",
      "jump": "i",
      "offset": [
        4732,
        4735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3208": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3209": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3210": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "POP",
      "path": "0"
    },
    "3211": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4732,
        4735
      ],
      "op": "POP",
      "path": "0"
    },
    "3212": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1A"
    },
    "3215": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3216": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4689,
        4793
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3217": {
      "op": "POP"
    },
    "3218": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4803,
        4817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3220": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4860,
        4876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9E"
    },
    "3223": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4875,
        4876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3225": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4860,
        4872
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "3226": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4860,
        4876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1089"
    },
    "3229": {
      "fn": "Hetti.createRingHash",
      "jump": "i",
      "offset": [
        4860,
        4876
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3230": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4860,
        4876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3231": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4891,
        4911
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3232": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4891,
        4911
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3233": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4925,
        4942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3235": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4925,
        4942
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3236": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4925,
        4942
      ],
      "op": "ADD",
      "path": "0"
    },
    "3237": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4925,
        4942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3238": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3240": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3241": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "ADD",
      "path": "0"
    },
    "3242": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3243": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3245": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3246": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC3"
    },
    "3249": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3250": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4850,
        4877
      ],
      "op": "BLOCKHASH",
      "path": "0"
    },
    "3251": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4850,
        4877
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3252": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4891,
        4911
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3253": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4925,
        4942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3254": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3256": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "AND",
      "path": "0"
    },
    "3257": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4956,
        4973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3258": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4987,
        4997
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3259": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4987,
        4997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3260": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3262": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "ADD",
      "path": "0"
    },
    "3263": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1265"
    },
    "3266": {
      "fn": "Hetti.createRingHash",
      "jump": "i",
      "offset": [
        4820,
        5007
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3267": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3268": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3270": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3271": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3272": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3273": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3274": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "SUB",
      "path": "0"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3277": {
      "op": "NOT"
    },
    "3278": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "ADD",
      "path": "0"
    },
    "3279": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3280": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3281": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3282": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3283": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3284": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "3285": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3286": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4820,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3288": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3289": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3290": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "ADD",
      "path": "0"
    },
    "3291": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3292": {
      "fn": "Hetti.createRingHash",
      "offset": [
        5025,
        5037
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "3293": {
      "fn": "Hetti.createRingHash",
      "offset": [
        4385,
        5044
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "3294": {
      "op": "POP"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "fn": "Hetti.createRingHash",
      "jump": "o",
      "offset": [
        4385,
        5044
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3302": {
      "op": "JUMPDEST"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3305": {
      "op": "MLOAD"
    },
    "3306": {
      "op": "DUP1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "DUP1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3316": {
      "op": "SWAP1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "MUL"
    },
    "3321": {
      "op": "DUP1"
    },
    "3322": {
      "op": "CALLDATASIZE"
    },
    "3323": {
      "op": "DUP4"
    },
    "3324": {
      "op": "CALLDATACOPY"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "op": "SWAP2"
    },
    "3327": {
      "op": "SWAP3"
    },
    "3328": {
      "op": "SWAP2"
    },
    "3329": {
      "op": "POP"
    },
    "3330": {
      "op": "POP"
    },
    "3331": {
      "jump": "o",
      "op": "JUMP"
    },
    "3332": {
      "op": "JUMPDEST"
    },
    "3333": {
      "op": "DUP3"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "op": "SWAP3"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "ISZERO"
    },
    "3341": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "3344": {
      "op": "JUMPI"
    },
    "3345": {
      "op": "SWAP2"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3348": {
      "op": "MUL"
    },
    "3349": {
      "op": "DUP3"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "op": "JUMPDEST"
    },
    "3352": {
      "op": "DUP3"
    },
    "3353": {
      "op": "DUP2"
    },
    "3354": {
      "op": "GT"
    },
    "3355": {
      "op": "ISZERO"
    },
    "3356": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "3359": {
      "op": "JUMPI"
    },
    "3360": {
      "op": "DUP3"
    },
    "3361": {
      "op": "MLOAD"
    },
    "3362": {
      "op": "DUP3"
    },
    "3363": {
      "op": "SSTORE"
    },
    "3364": {
      "op": "SWAP2"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "SWAP2"
    },
    "3369": {
      "op": "SWAP1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "SWAP1"
    },
    "3374": {
      "op": "PUSH2",
      "value": "0xD17"
    },
    "3377": {
      "op": "JUMP"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "op": "PUSH2",
      "value": "0xD3E"
    },
    "3383": {
      "op": "SWAP3"
    },
    "3384": {
      "op": "SWAP2"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD6F"
    },
    "3389": {
      "jump": "i",
      "op": "JUMP"
    },
    "3390": {
      "op": "JUMPDEST"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "SWAP1"
    },
    "3393": {
      "jump": "o",
      "op": "JUMP"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3397": {
      "op": "MLOAD"
    },
    "3398": {
      "op": "DUP1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3404": {
      "op": "MSTORE"
    },
    "3405": {
      "op": "DUP1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3408": {
      "op": "SWAP1"
    },
    "3409": {
      "op": "JUMPDEST"
    },
    "3410": {
      "op": "PUSH2",
      "value": "0xD59"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xCE6"
    },
    "3416": {
      "jump": "i",
      "op": "JUMP"
    },
    "3417": {
      "op": "JUMPDEST"
    },
    "3418": {
      "op": "DUP2"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "SWAP1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "SWAP1"
    },
    "3427": {
      "op": "SUB"
    },
    "3428": {
      "op": "SWAP1"
    },
    "3429": {
      "op": "DUP2"
    },
    "3430": {
      "op": "PUSH2",
      "value": "0xD51"
    },
    "3433": {
      "op": "JUMPI"
    },
    "3434": {
      "op": "SWAP1"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "op": "SWAP1"
    },
    "3438": {
      "jump": "o",
      "op": "JUMP"
    },
    "3439": {
      "op": "JUMPDEST"
    },
    "3440": {
      "op": "JUMPDEST"
    },
    "3441": {
      "op": "DUP1"
    },
    "3442": {
      "op": "DUP3"
    },
    "3443": {
      "op": "GT"
    },
    "3444": {
      "op": "ISZERO"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0xD3E"
    },
    "3448": {
      "op": "JUMPI"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3451": {
      "op": "DUP2"
    },
    "3452": {
      "op": "SSTORE"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "PUSH2",
      "value": "0xD70"
    },
    "3459": {
      "op": "JUMP"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3465": {
      "op": "DUP3"
    },
    "3466": {
      "op": "DUP5"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "op": "SLT"
    },
    "3469": {
      "op": "ISZERO"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0xD96"
    },
    "3473": {
      "op": "JUMPI"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3476": {
      "op": "DUP1"
    },
    "3477": {
      "op": "REVERT"
    },
    "3478": {
      "op": "JUMPDEST"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "CALLDATALOAD"
    },
    "3481": {
      "op": "SWAP2"
    },
    "3482": {
      "op": "SWAP1"
    },
    "3483": {
      "op": "POP"
    },
    "3484": {
      "jump": "o",
      "op": "JUMP"
    },
    "3485": {
      "op": "JUMPDEST"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3488": {
      "op": "DUP2"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "DUP2"
    },
    "3491": {
      "op": "DUP4"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3494": {
      "op": "JUMPDEST"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3497": {
      "op": "DUP2"
    },
    "3498": {
      "op": "LT"
    },
    "3499": {
      "op": "ISZERO"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xDC5"
    },
    "3503": {
      "op": "JUMPI"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "MLOAD"
    },
    "3506": {
      "op": "DUP4"
    },
    "3507": {
      "op": "MSTORE"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3510": {
      "op": "SWAP3"
    },
    "3511": {
      "op": "DUP4"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "SWAP3"
    },
    "3514": {
      "op": "SWAP1"
    },
    "3515": {
      "op": "SWAP2"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "SWAP1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xDA6"
    },
    "3524": {
      "op": "JUMP"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "POP"
    },
    "3529": {
      "op": "SWAP3"
    },
    "3530": {
      "op": "SWAP2"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "op": "POP"
    },
    "3533": {
      "jump": "o",
      "op": "JUMP"
    },
    "3534": {
      "op": "JUMPDEST"
    },
    "3535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3542": {
      "op": "SHL"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3550": {
      "op": "MSTORE"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "REVERT"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3559": {
      "op": "DUP1"
    },
    "3560": {
      "op": "MLOAD"
    },
    "3561": {
      "op": "SWAP1"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3573": {
      "op": "DUP2"
    },
    "3574": {
      "op": "GT"
    },
    "3575": {
      "op": "DUP3"
    },
    "3576": {
      "op": "DUP3"
    },
    "3577": {
      "op": "LT"
    },
    "3578": {
      "op": "OR"
    },
    "3579": {
      "op": "ISZERO"
    },
    "3580": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3583": {
      "op": "JUMPI"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3587": {
      "op": "PUSH2",
      "value": "0xDCE"
    },
    "3590": {
      "jump": "i",
      "op": "JUMP"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3594": {
      "op": "MSTORE"
    },
    "3595": {
      "op": "SWAP1"
    },
    "3596": {
      "jump": "o",
      "op": "JUMP"
    },
    "3597": {
      "op": "JUMPDEST"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3600": {
      "op": "MLOAD"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3603": {
      "op": "DUP3"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3607": {
      "op": "NOT"
    },
    "3608": {
      "op": "AND"
    },
    "3609": {
      "op": "DUP2"
    },
    "3610": {
      "op": "ADD"
    },
    "3611": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3620": {
      "op": "DUP2"
    },
    "3621": {
      "op": "GT"
    },
    "3622": {
      "op": "DUP3"
    },
    "3623": {
      "op": "DUP3"
    },
    "3624": {
      "op": "LT"
    },
    "3625": {
      "op": "OR"
    },
    "3626": {
      "op": "ISZERO"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "3630": {
      "op": "JUMPI"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xDCE"
    },
    "3637": {
      "jump": "i",
      "op": "JUMP"
    },
    "3638": {
      "op": "JUMPDEST"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3641": {
      "op": "MSTORE"
    },
    "3642": {
      "op": "SWAP2"
    },
    "3643": {
      "op": "SWAP1"
    },
    "3644": {
      "op": "POP"
    },
    "3645": {
      "jump": "o",
      "op": "JUMP"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3649": {
      "op": "DUP3"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3652": {
      "op": "DUP4"
    },
    "3653": {
      "op": "ADD"
    },
    "3654": {
      "op": "SLT"
    },
    "3655": {
      "op": "PUSH2",
      "value": "0xE4F"
    },
    "3658": {
      "op": "JUMPI"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "DUP1"
    },
    "3662": {
      "op": "REVERT"
    },
    "3663": {
      "op": "JUMPDEST"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0xE57"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "3670": {
      "jump": "i",
      "op": "JUMP"
    },
    "3671": {
      "op": "JUMPDEST"
    },
    "3672": {
      "op": "DUP1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3675": {
      "op": "DUP5"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "DUP6"
    },
    "3678": {
      "op": "DUP2"
    },
    "3679": {
      "op": "GT"
    },
    "3680": {
      "op": "ISZERO"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3684": {
      "op": "JUMPI"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "DUP1"
    },
    "3688": {
      "op": "REVERT"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "DUP5"
    },
    "3691": {
      "op": "JUMPDEST"
    },
    "3692": {
      "op": "DUP2"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "LT"
    },
    "3695": {
      "op": "ISZERO"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "3699": {
      "op": "JUMPI"
    },
    "3700": {
      "op": "DUP1"
    },
    "3701": {
      "op": "CALLDATALOAD"
    },
    "3702": {
      "op": "DUP5"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3706": {
      "op": "SWAP4"
    },
    "3707": {
      "op": "DUP5"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "op": "SWAP4"
    },
    "3710": {
      "op": "ADD"
    },
    "3711": {
      "op": "PUSH2",
      "value": "0xE6B"
    },
    "3714": {
      "op": "JUMP"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "POP"
    },
    "3717": {
      "op": "SWAP1"
    },
    "3718": {
      "op": "SWAP6"
    },
    "3719": {
      "op": "SWAP5"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "POP"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "jump": "o",
      "op": "JUMP"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3731": {
      "op": "DUP3"
    },
    "3732": {
      "op": "DUP5"
    },
    "3733": {
      "op": "SUB"
    },
    "3734": {
      "op": "SLT"
    },
    "3735": {
      "op": "ISZERO"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xEA0"
    },
    "3739": {
      "op": "JUMPI"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3742": {
      "op": "DUP1"
    },
    "3743": {
      "op": "REVERT"
    },
    "3744": {
      "op": "JUMPDEST"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xEAA"
    },
    "3748": {
      "op": "DUP4"
    },
    "3749": {
      "op": "DUP4"
    },
    "3750": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3753": {
      "jump": "i",
      "op": "JUMP"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "SWAP4"
    },
    "3756": {
      "op": "SWAP3"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "jump": "o",
      "op": "JUMP"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3764": {
      "op": "DUP1"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3767": {
      "op": "DUP1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3770": {
      "op": "DUP1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3773": {
      "op": "DUP8"
    },
    "3774": {
      "op": "DUP10"
    },
    "3775": {
      "op": "SUB"
    },
    "3776": {
      "op": "SLT"
    },
    "3777": {
      "op": "ISZERO"
    },
    "3778": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3781": {
      "op": "JUMPI"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3784": {
      "op": "DUP1"
    },
    "3785": {
      "op": "REVERT"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "DUP7"
    },
    "3788": {
      "op": "CALLDATALOAD"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "SUB"
    },
    "3797": {
      "op": "DUP2"
    },
    "3798": {
      "op": "AND"
    },
    "3799": {
      "op": "DUP2"
    },
    "3800": {
      "op": "EQ"
    },
    "3801": {
      "op": "PUSH2",
      "value": "0xEE1"
    },
    "3804": {
      "op": "JUMPI"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3807": {
      "op": "DUP1"
    },
    "3808": {
      "op": "REVERT"
    },
    "3809": {
      "op": "JUMPDEST"
    },
    "3810": {
      "op": "SWAP6"
    },
    "3811": {
      "op": "POP"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3814": {
      "op": "DUP8"
    },
    "3815": {
      "op": "DUP2"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "CALLDATALOAD"
    },
    "3818": {
      "op": "SWAP6"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3822": {
      "op": "DUP9"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "op": "CALLDATALOAD"
    },
    "3825": {
      "op": "SWAP5"
    },
    "3826": {
      "op": "POP"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3829": {
      "op": "DUP9"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "CALLDATALOAD"
    },
    "3832": {
      "op": "SWAP4"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "3837": {
      "op": "DUP10"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3840": {
      "op": "DUP11"
    },
    "3841": {
      "op": "ADD"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3845": {
      "jump": "i",
      "op": "JUMP"
    },
    "3846": {
      "op": "JUMPDEST"
    },
    "3847": {
      "op": "SWAP3"
    },
    "3848": {
      "op": "POP"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3851": {
      "op": "DUP9"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "CALLDATALOAD"
    },
    "3854": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "DUP3"
    },
    "3865": {
      "op": "GT"
    },
    "3866": {
      "op": "ISZERO"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xF23"
    },
    "3870": {
      "op": "JUMPI"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3873": {
      "op": "DUP1"
    },
    "3874": {
      "op": "REVERT"
    },
    "3875": {
      "op": "JUMPDEST"
    },
    "3876": {
      "op": "DUP2"
    },
    "3877": {
      "op": "DUP11"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "SWAP2"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "op": "DUP11"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3884": {
      "op": "DUP4"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "SLT"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF37"
    },
    "3890": {
      "op": "JUMPI"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3893": {
      "op": "DUP1"
    },
    "3894": {
      "op": "REVERT"
    },
    "3895": {
      "op": "JUMPDEST"
    },
    "3896": {
      "op": "DUP2"
    },
    "3897": {
      "op": "CALLDATALOAD"
    },
    "3898": {
      "op": "DUP2"
    },
    "3899": {
      "op": "DUP2"
    },
    "3900": {
      "op": "GT"
    },
    "3901": {
      "op": "ISZERO"
    },
    "3902": {
      "op": "PUSH2",
      "value": "0xF49"
    },
    "3905": {
      "op": "JUMPI"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF49"
    },
    "3909": {
      "op": "PUSH2",
      "value": "0xDCE"
    },
    "3912": {
      "jump": "i",
      "op": "JUMP"
    },
    "3913": {
      "op": "JUMPDEST"
    },
    "3914": {
      "op": "DUP1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3917": {
      "op": "SHL"
    },
    "3918": {
      "op": "SWAP2"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0xF5A"
    },
    "3923": {
      "op": "DUP5"
    },
    "3924": {
      "op": "DUP4"
    },
    "3925": {
      "op": "ADD"
    },
    "3926": {
      "op": "PUSH2",
      "value": "0xE0D"
    },
    "3929": {
      "jump": "i",
      "op": "JUMP"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "op": "DUP2"
    },
    "3932": {
      "op": "DUP2"
    },
    "3933": {
      "op": "MSTORE"
    },
    "3934": {
      "op": "SWAP2"
    },
    "3935": {
      "op": "DUP4"
    },
    "3936": {
      "op": "ADD"
    },
    "3937": {
      "op": "DUP5"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "SWAP2"
    },
    "3940": {
      "op": "DUP5"
    },
    "3941": {
      "op": "DUP2"
    },
    "3942": {
      "op": "ADD"
    },
    "3943": {
      "op": "SWAP1"
    },
    "3944": {
      "op": "DUP14"
    },
    "3945": {
      "op": "DUP5"
    },
    "3946": {
      "op": "GT"
    },
    "3947": {
      "op": "ISZERO"
    },
    "3948": {
      "op": "PUSH2",
      "value": "0xF74"
    },
    "3951": {
      "op": "JUMPI"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "DUP1"
    },
    "3955": {
      "op": "REVERT"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "SWAP4"
    },
    "3958": {
      "op": "DUP6"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "SWAP4"
    },
    "3961": {
      "op": "JUMPDEST"
    },
    "3962": {
      "op": "DUP4"
    },
    "3963": {
      "op": "DUP6"
    },
    "3964": {
      "op": "LT"
    },
    "3965": {
      "op": "ISZERO"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3969": {
      "op": "JUMPI"
    },
    "3970": {
      "op": "DUP5"
    },
    "3971": {
      "op": "CALLDATALOAD"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "MSTORE"
    },
    "3974": {
      "op": "SWAP4"
    },
    "3975": {
      "op": "DUP6"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "SWAP4"
    },
    "3978": {
      "op": "SWAP1"
    },
    "3979": {
      "op": "DUP6"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "op": "SWAP1"
    },
    "3982": {
      "op": "PUSH2",
      "value": "0xF79"
    },
    "3985": {
      "op": "JUMP"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "SWAP7"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "op": "POP"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "POP"
    },
    "3994": {
      "op": "POP"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "SWAP3"
    },
    "3997": {
      "op": "SWAP6"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "SWAP3"
    },
    "4000": {
      "op": "SWAP6"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "op": "SWAP3"
    },
    "4003": {
      "op": "SWAP6"
    },
    "4004": {
      "jump": "o",
      "op": "JUMP"
    },
    "4005": {
      "op": "JUMPDEST"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4008": {
      "op": "DUP1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4011": {
      "op": "DUP4"
    },
    "4012": {
      "op": "DUP6"
    },
    "4013": {
      "op": "SUB"
    },
    "4014": {
      "op": "SLT"
    },
    "4015": {
      "op": "ISZERO"
    },
    "4016": {
      "op": "PUSH2",
      "value": "0xFB8"
    },
    "4019": {
      "op": "JUMPI"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4022": {
      "op": "DUP1"
    },
    "4023": {
      "op": "REVERT"
    },
    "4024": {
      "op": "JUMPDEST"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "op": "DUP1"
    },
    "4028": {
      "op": "CALLDATALOAD"
    },
    "4029": {
      "op": "SWAP3"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4032": {
      "op": "SWAP1"
    },
    "4033": {
      "op": "SWAP2"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "CALLDATALOAD"
    },
    "4036": {
      "op": "SWAP2"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "jump": "o",
      "op": "JUMP"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4044": {
      "op": "DUP3"
    },
    "4045": {
      "op": "DUP5"
    },
    "4046": {
      "op": "SUB"
    },
    "4047": {
      "op": "SLT"
    },
    "4048": {
      "op": "ISZERO"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xFD9"
    },
    "4052": {
      "op": "JUMPI"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4055": {
      "op": "DUP1"
    },
    "4056": {
      "op": "REVERT"
    },
    "4057": {
      "op": "JUMPDEST"
    },
    "4058": {
      "op": "DUP3"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4061": {
      "op": "DUP4"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "SLT"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "4067": {
      "op": "JUMPI"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4070": {
      "op": "DUP1"
    },
    "4071": {
      "op": "REVERT"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "4079": {
      "jump": "i",
      "op": "JUMP"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "DUP1"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4084": {
      "op": "DUP5"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "DUP6"
    },
    "4087": {
      "op": "DUP2"
    },
    "4088": {
      "op": "GT"
    },
    "4089": {
      "op": "ISZERO"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0x1002"
    },
    "4093": {
      "op": "JUMPI"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4096": {
      "op": "DUP1"
    },
    "4097": {
      "op": "REVERT"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "DUP5"
    },
    "4100": {
      "op": "JUMPDEST"
    },
    "4101": {
      "op": "DUP2"
    },
    "4102": {
      "op": "DUP2"
    },
    "4103": {
      "op": "LT"
    },
    "4104": {
      "op": "ISZERO"
    },
    "4105": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "4108": {
      "op": "JUMPI"
    },
    "4109": {
      "op": "DUP1"
    },
    "4110": {
      "op": "MLOAD"
    },
    "4111": {
      "op": "DUP5"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4115": {
      "op": "SWAP4"
    },
    "4116": {
      "op": "DUP5"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "op": "SWAP4"
    },
    "4119": {
      "op": "ADD"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1004"
    },
    "4123": {
      "op": "JUMP"
    },
    "4124": {
      "op": "JUMPDEST"
    },
    "4125": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4132": {
      "op": "SHL"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4145": {
      "op": "REVERT"
    },
    "4146": {
      "op": "JUMPDEST"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4151": {
      "op": "DUP3"
    },
    "4152": {
      "op": "DUP5"
    },
    "4153": {
      "op": "SUB"
    },
    "4154": {
      "op": "SLT"
    },
    "4155": {
      "op": "ISZERO"
    },
    "4156": {
      "op": "PUSH2",
      "value": "0x1044"
    },
    "4159": {
      "op": "JUMPI"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4162": {
      "op": "DUP1"
    },
    "4163": {
      "op": "REVERT"
    },
    "4164": {
      "op": "JUMPDEST"
    },
    "4165": {
      "op": "DUP2"
    },
    "4166": {
      "op": "MLOAD"
    },
    "4167": {
      "op": "DUP1"
    },
    "4168": {
      "op": "ISZERO"
    },
    "4169": {
      "op": "ISZERO"
    },
    "4170": {
      "op": "DUP2"
    },
    "4171": {
      "op": "EQ"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0xEAA"
    },
    "4175": {
      "op": "JUMPI"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4178": {
      "op": "DUP1"
    },
    "4179": {
      "op": "REVERT"
    },
    "4180": {
      "op": "JUMPDEST"
    },
    "4181": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4191": {
      "op": "MSTORE"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4196": {
      "op": "MSTORE"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4201": {
      "op": "REVERT"
    },
    "4202": {
      "op": "JUMPDEST"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4207": {
      "op": "DUP3"
    },
    "4208": {
      "op": "AND"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4211": {
      "op": "DUP2"
    },
    "4212": {
      "op": "SUB"
    },
    "4213": {
      "op": "PUSH2",
      "value": "0x1080"
    },
    "4216": {
      "op": "JUMPI"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x1080"
    },
    "4220": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4223": {
      "jump": "i",
      "op": "JUMP"
    },
    "4224": {
      "op": "JUMPDEST"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "SWAP3"
    },
    "4229": {
      "op": "SWAP2"
    },
    "4230": {
      "op": "POP"
    },
    "4231": {
      "op": "POP"
    },
    "4232": {
      "jump": "o",
      "op": "JUMP"
    },
    "4233": {
      "op": "JUMPDEST"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "DUP3"
    },
    "4238": {
      "op": "LT"
    },
    "4239": {
      "op": "ISZERO"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4243": {
      "op": "JUMPI"
    },
    "4244": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4250": {
      "jump": "i",
      "op": "JUMP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "op": "SUB"
    },
    "4254": {
      "op": "SWAP1"
    },
    "4255": {
      "jump": "o",
      "op": "JUMP"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4259": {
      "op": "DUP3"
    },
    "4260": {
      "op": "NOT"
    },
    "4261": {
      "op": "DUP3"
    },
    "4262": {
      "op": "GT"
    },
    "4263": {
      "op": "ISZERO"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x10B3"
    },
    "4267": {
      "op": "JUMPI"
    },
    "4268": {
      "op": "PUSH2",
      "value": "0x10B3"
    },
    "4271": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4274": {
      "jump": "i",
      "op": "JUMP"
    },
    "4275": {
      "op": "JUMPDEST"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "SWAP1"
    },
    "4279": {
      "jump": "o",
      "op": "JUMP"
    },
    "4280": {
      "op": "JUMPDEST"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4283": {
      "op": "DUP3"
    },
    "4284": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "4287": {
      "op": "JUMPI"
    },
    "4288": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4295": {
      "op": "SHL"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4298": {
      "op": "MSTORE"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4303": {
      "op": "MSTORE"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "REVERT"
    },
    "4309": {
      "op": "JUMPDEST"
    },
    "4310": {
      "op": "POP"
    },
    "4311": {
      "op": "DIV"
    },
    "4312": {
      "op": "SWAP1"
    },
    "4313": {
      "jump": "o",
      "op": "JUMP"
    },
    "4314": {
      "op": "JUMPDEST"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4317": {
      "op": "DUP2"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4320": {
      "op": "NOT"
    },
    "4321": {
      "op": "DIV"
    },
    "4322": {
      "op": "DUP4"
    },
    "4323": {
      "op": "GT"
    },
    "4324": {
      "op": "DUP3"
    },
    "4325": {
      "op": "ISZERO"
    },
    "4326": {
      "op": "ISZERO"
    },
    "4327": {
      "op": "AND"
    },
    "4328": {
      "op": "ISZERO"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4332": {
      "op": "JUMPI"
    },
    "4333": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4336": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4339": {
      "jump": "i",
      "op": "JUMP"
    },
    "4340": {
      "op": "JUMPDEST"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "op": "MUL"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "jump": "o",
      "op": "JUMP"
    },
    "4345": {
      "op": "JUMPDEST"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0x110B"
    },
    "4355": {
      "op": "JUMPI"
    },
    "4356": {
      "op": "PUSH2",
      "value": "0x110B"
    },
    "4359": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4362": {
      "jump": "i",
      "op": "JUMP"
    },
    "4363": {
      "op": "JUMPDEST"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4367": {
      "op": "ADD"
    },
    "4368": {
      "op": "SWAP1"
    },
    "4369": {
      "jump": "o",
      "op": "JUMP"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "DUP1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4374": {
      "op": "JUMPDEST"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4377": {
      "op": "DUP2"
    },
    "4378": {
      "op": "LT"
    },
    "4379": {
      "op": "ISZERO"
    },
    "4380": {
      "op": "PUSH2",
      "value": "0x56D"
    },
    "4383": {
      "op": "JUMPI"
    },
    "4384": {
      "op": "DUP2"
    },
    "4385": {
      "op": "MLOAD"
    },
    "4386": {
      "op": "DUP5"
    },
    "4387": {
      "op": "MSTORE"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4390": {
      "op": "SWAP4"
    },
    "4391": {
      "op": "DUP5"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "SWAP4"
    },
    "4394": {
      "op": "SWAP1"
    },
    "4395": {
      "op": "SWAP2"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "SWAP1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4404": {
      "op": "JUMP"
    },
    "4405": {
      "op": "JUMPDEST"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4408": {
      "op": "DUP2"
    },
    "4409": {
      "op": "MLOAD"
    },
    "4410": {
      "op": "DUP1"
    },
    "4411": {
      "op": "DUP5"
    },
    "4412": {
      "op": "MSTORE"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4415": {
      "op": "DUP1"
    },
    "4416": {
      "op": "DUP6"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "SWAP5"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "op": "DUP1"
    },
    "4421": {
      "op": "DUP5"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4425": {
      "op": "JUMPDEST"
    },
    "4426": {
      "op": "DUP4"
    },
    "4427": {
      "op": "DUP2"
    },
    "4428": {
      "op": "LT"
    },
    "4429": {
      "op": "ISZERO"
    },
    "4430": {
      "op": "PUSH2",
      "value": "0x1165"
    },
    "4433": {
      "op": "JUMPI"
    },
    "4434": {
      "op": "DUP2"
    },
    "4435": {
      "op": "MLOAD"
    },
    "4436": {
      "op": "DUP8"
    },
    "4437": {
      "op": "MSTORE"
    },
    "4438": {
      "op": "SWAP6"
    },
    "4439": {
      "op": "DUP3"
    },
    "4440": {
      "op": "ADD"
    },
    "4441": {
      "op": "SWAP6"
    },
    "4442": {
      "op": "SWAP1"
    },
    "4443": {
      "op": "DUP3"
    },
    "4444": {
      "op": "ADD"
    },
    "4445": {
      "op": "SWAP1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "PUSH2",
      "value": "0x1149"
    },
    "4452": {
      "op": "JUMP"
    },
    "4453": {
      "op": "JUMPDEST"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "SWAP5"
    },
    "4456": {
      "op": "SWAP6"
    },
    "4457": {
      "op": "SWAP5"
    },
    "4458": {
      "op": "POP"
    },
    "4459": {
      "op": "POP"
    },
    "4460": {
      "op": "POP"
    },
    "4461": {
      "op": "POP"
    },
    "4462": {
      "op": "POP"
    },
    "4463": {
      "jump": "o",
      "op": "JUMP"
    },
    "4464": {
      "op": "JUMPDEST"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4467": {
      "op": "DUP2"
    },
    "4468": {
      "op": "MLOAD"
    },
    "4469": {
      "op": "DUP1"
    },
    "4470": {
      "op": "DUP5"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4474": {
      "op": "DUP1"
    },
    "4475": {
      "op": "DUP6"
    },
    "4476": {
      "op": "ADD"
    },
    "4477": {
      "op": "SWAP5"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "op": "DUP1"
    },
    "4480": {
      "op": "DUP5"
    },
    "4481": {
      "op": "ADD"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4484": {
      "op": "JUMPDEST"
    },
    "4485": {
      "op": "DUP4"
    },
    "4486": {
      "op": "DUP2"
    },
    "4487": {
      "op": "LT"
    },
    "4488": {
      "op": "ISZERO"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x1165"
    },
    "4492": {
      "op": "JUMPI"
    },
    "4493": {
      "op": "PUSH2",
      "value": "0x1197"
    },
    "4496": {
      "op": "DUP8"
    },
    "4497": {
      "op": "DUP4"
    },
    "4498": {
      "op": "MLOAD"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4502": {
      "jump": "i",
      "op": "JUMP"
    },
    "4503": {
      "op": "JUMPDEST"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4506": {
      "op": "SWAP7"
    },
    "4507": {
      "op": "SWAP1"
    },
    "4508": {
      "op": "SWAP7"
    },
    "4509": {
      "op": "ADD"
    },
    "4510": {
      "op": "SWAP6"
    },
    "4511": {
      "op": "SWAP1"
    },
    "4512": {
      "op": "DUP3"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "SWAP1"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4517": {
      "op": "ADD"
    },
    "4518": {
      "op": "PUSH2",
      "value": "0x1184"
    },
    "4521": {
      "op": "JUMP"
    },
    "4522": {
      "op": "JUMPDEST"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4525": {
      "op": "DUP2"
    },
    "4526": {
      "op": "MSTORE"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4529": {
      "op": "DUP7"
    },
    "4530": {
      "op": "MLOAD"
    },
    "4531": {
      "op": "DUP1"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4534": {
      "op": "DUP5"
    },
    "4535": {
      "op": "ADD"
    },
    "4536": {
      "op": "MSTORE"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "JUMPDEST"
    },
    "4540": {
      "op": "DUP2"
    },
    "4541": {
      "op": "DUP2"
    },
    "4542": {
      "op": "LT"
    },
    "4543": {
      "op": "ISZERO"
    },
    "4544": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4547": {
      "op": "JUMPI"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4550": {
      "op": "DUP2"
    },
    "4551": {
      "op": "DUP11"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "DUP2"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "MLOAD"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4558": {
      "op": "DUP7"
    },
    "4559": {
      "op": "DUP5"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "ADD"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4567": {
      "op": "JUMP"
    },
    "4568": {
      "op": "JUMPDEST"
    },
    "4569": {
      "op": "DUP2"
    },
    "4570": {
      "op": "DUP2"
    },
    "4571": {
      "op": "GT"
    },
    "4572": {
      "op": "ISZERO"
    },
    "4573": {
      "op": "PUSH2",
      "value": "0x11EA"
    },
    "4576": {
      "op": "JUMPI"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4581": {
      "op": "DUP4"
    },
    "4582": {
      "op": "DUP7"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "ADD"
    },
    "4585": {
      "op": "MSTORE"
    },
    "4586": {
      "op": "JUMPDEST"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4590": {
      "op": "DUP4"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "DUP8"
    },
    "4593": {
      "op": "SWAP1"
    },
    "4594": {
      "op": "MSTORE"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4597": {
      "op": "ADD"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4600": {
      "op": "NOT"
    },
    "4601": {
      "op": "AND"
    },
    "4602": {
      "op": "DUP3"
    },
    "4603": {
      "op": "ADD"
    },
    "4604": {
      "op": "PUSH2",
      "value": "0x1208"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4609": {
      "op": "DUP5"
    },
    "4610": {
      "op": "ADD"
    },
    "4611": {
      "op": "DUP8"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4615": {
      "jump": "i",
      "op": "JUMP"
    },
    "4616": {
      "op": "JUMPDEST"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4619": {
      "op": "DUP4"
    },
    "4620": {
      "op": "DUP3"
    },
    "4621": {
      "op": "SUB"
    },
    "4622": {
      "op": "ADD"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4625": {
      "op": "DUP5"
    },
    "4626": {
      "op": "ADD"
    },
    "4627": {
      "op": "MSTORE"
    },
    "4628": {
      "op": "PUSH2",
      "value": "0x1220"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4633": {
      "op": "DUP3"
    },
    "4634": {
      "op": "ADD"
    },
    "4635": {
      "op": "DUP7"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x1135"
    },
    "4639": {
      "jump": "i",
      "op": "JUMP"
    },
    "4640": {
      "op": "JUMPDEST"
    },
    "4641": {
      "op": "SWAP1"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "op": "DUP3"
    },
    "4644": {
      "op": "DUP2"
    },
    "4645": {
      "op": "SUB"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4648": {
      "op": "DUP5"
    },
    "4649": {
      "op": "ADD"
    },
    "4650": {
      "op": "MSTORE"
    },
    "4651": {
      "op": "PUSH2",
      "value": "0x1234"
    },
    "4654": {
      "op": "DUP2"
    },
    "4655": {
      "op": "DUP6"
    },
    "4656": {
      "op": "PUSH2",
      "value": "0x1170"
    },
    "4659": {
      "jump": "i",
      "op": "JUMP"
    },
    "4660": {
      "op": "JUMPDEST"
    },
    "4661": {
      "op": "SWAP9"
    },
    "4662": {
      "op": "SWAP8"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "op": "POP"
    },
    "4667": {
      "op": "POP"
    },
    "4668": {
      "op": "POP"
    },
    "4669": {
      "op": "POP"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "jump": "o",
      "op": "JUMP"
    },
    "4672": {
      "op": "JUMPDEST"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4677": {
      "op": "DUP3"
    },
    "4678": {
      "op": "AND"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4681": {
      "op": "DUP5"
    },
    "4682": {
      "op": "AND"
    },
    "4683": {
      "op": "DUP1"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4686": {
      "op": "SUB"
    },
    "4687": {
      "op": "DUP3"
    },
    "4688": {
      "op": "GT"
    },
    "4689": {
      "op": "ISZERO"
    },
    "4690": {
      "op": "PUSH2",
      "value": "0x125D"
    },
    "4693": {
      "op": "JUMPI"
    },
    "4694": {
      "op": "PUSH2",
      "value": "0x125D"
    },
    "4697": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4700": {
      "jump": "i",
      "op": "JUMP"
    },
    "4701": {
      "op": "JUMPDEST"
    },
    "4702": {
      "op": "ADD"
    },
    "4703": {
      "op": "SWAP4"
    },
    "4704": {
      "op": "SWAP3"
    },
    "4705": {
      "op": "POP"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "jump": "o",
      "op": "JUMP"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "DUP6"
    },
    "4711": {
      "op": "DUP2"
    },
    "4712": {
      "op": "MSTORE"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4717": {
      "op": "DUP7"
    },
    "4718": {
      "op": "DUP2"
    },
    "4719": {
      "op": "DUP5"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "MSTORE"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4724": {
      "op": "DUP7"
    },
    "4725": {
      "op": "DUP2"
    },
    "4726": {
      "op": "DUP6"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "op": "MSTORE"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4733": {
      "op": "SHL"
    },
    "4734": {
      "op": "DUP7"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4737": {
      "op": "SHL"
    },
    "4738": {
      "op": "AND"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4741": {
      "op": "DUP6"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "MSTORE"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4746": {
      "op": "DUP5"
    },
    "4747": {
      "op": "ADD"
    },
    "4748": {
      "op": "DUP6"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4751": {
      "op": "DUP1"
    },
    "4752": {
      "op": "JUMPDEST"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4755": {
      "op": "DUP2"
    },
    "4756": {
      "op": "LT"
    },
    "4757": {
      "op": "ISZERO"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x12CE"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "DUP3"
    },
    "4763": {
      "op": "MLOAD"
    },
    "4764": {
      "op": "DUP5"
    },
    "4765": {
      "op": "DUP4"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4769": {
      "op": "DUP2"
    },
    "4770": {
      "op": "LT"
    },
    "4771": {
      "op": "ISZERO"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x12BB"
    },
    "4775": {
      "op": "JUMPI"
    },
    "4776": {
      "op": "DUP3"
    },
    "4777": {
      "op": "MLOAD"
    },
    "4778": {
      "op": "DUP3"
    },
    "4779": {
      "op": "MSTORE"
    },
    "4780": {
      "op": "SWAP2"
    },
    "4781": {
      "op": "DUP9"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "SWAP2"
    },
    "4784": {
      "op": "SWAP1"
    },
    "4785": {
      "op": "DUP9"
    },
    "4786": {
      "op": "ADD"
    },
    "4787": {
      "op": "SWAP1"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4790": {
      "op": "ADD"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x129E"
    },
    "4794": {
      "op": "JUMP"
    },
    "4795": {
      "op": "JUMPDEST"
    },
    "4796": {
      "op": "POP"
    },
    "4797": {
      "op": "POP"
    },
    "4798": {
      "op": "POP"
    },
    "4799": {
      "op": "SWAP3"
    },
    "4800": {
      "op": "DUP5"
    },
    "4801": {
      "op": "ADD"
    },
    "4802": {
      "op": "SWAP3"
    },
    "4803": {
      "op": "SWAP2"
    },
    "4804": {
      "op": "DUP6"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "SWAP2"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4809": {
      "op": "ADD"
    },
    "4810": {
      "op": "PUSH2",
      "value": "0x1290"
    },
    "4813": {
      "op": "JUMP"
    },
    "4814": {
      "op": "JUMPDEST"
    },
    "4815": {
      "op": "POP"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "op": "POP"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0x121"
    },
    "4824": {
      "op": "DUP3"
    },
    "4825": {
      "op": "ADD"
    },
    "4826": {
      "op": "SWAP1"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "op": "SWAP7"
    },
    "4829": {
      "op": "SWAP6"
    },
    "4830": {
      "op": "POP"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "POP"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8e6d1e782db583d52da880bb9ff8757503b155d2",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\n\npragma solidity ^0.8.5;\n\nimport \"./lib/AltBn128.sol\";\nimport \"./lib/LSAG.sol\";\n\ncontract Hetti {\n\n    // Maximum number of participants in a ring\n    uint256 constant ringMaxParticipants = 3;\n\n    struct Ring {\n        uint256 createdBlockNumber;\n        uint256 amountDeposited;\n        bytes32 ringHash;\n        uint8 dParticipantsNo;\n        uint8 wParticipantsNo;\n        mapping (uint256 => uint256[2]) publicKeys;\n        mapping (uint256 => uint256[2]) keyImages;\n    }\n\n    uint256[10] allowedAmounts = [\n        2 ether, 4 ether, 8 ether, 16 ether, 32 ether,\n        64 ether, 128 ether, 256 ether, 512 ether\n    ];\n    \n    uint256 constant minBlockNumberToCloseRing = 0;\n    mapping(uint256 => uint256) ringsNo;\n\n    // allowedAmount => ringIndex => Ring\n    mapping (uint256 => mapping(uint256 => Ring)) public rings;\n\n    function deposit(uint256[2] memory publicKey) public payable\n    {\n        // Get amount sent\n        uint256 receivedEther = floorEtherAndCheck(msg.value);\n\n        // Gets the current ring for the amounts\n        uint256 curIndex = ringsNo[receivedEther];\n        Ring storage ring = rings[receivedEther][curIndex];\n\n        if (!AltBn128.onCurve(uint256(publicKey[0]), uint256(publicKey[1]))) {\n            revert(\"Public Key no on Curve\");\n        }\n\n        // Make sure that public key (stealth address)\n        // isn't already in there\n        for (uint8 i = 0; i < ring.dParticipantsNo; i++) {\n            if (ring.publicKeys[i][0] == publicKey[0] &&\n                ring.publicKeys[i][1] == publicKey[1]) {\n                revert(\"Address already in current Ring\");\n            }\n        }\n\n        // If its a new ring\n        // set createdBlockNum size\n        if (ring.dParticipantsNo == 0) {\n            ring.createdBlockNumber = block.number - 1;\n        }\n\n        // Update ring params\n        ring.publicKeys[ring.dParticipantsNo] = publicKey;\n        ring.dParticipantsNo++;\n        ring.amountDeposited += receivedEther;\n\n        // Create new ring if current ring has exceeded number of participants\n        if (ring.dParticipantsNo >= ringMaxParticipants) {\n            // Set ringHash\n            ring.ringHash = createRingHash(receivedEther / (1 ether), curIndex);\n\n            // Add new Ring pool\n            ringsNo[receivedEther] += 1;\n        }\n    }\n\n    function withdraw(\n        address payable receiver, uint256 amountEther, uint256 index,\n        uint256 c0, uint256[2] memory keyImage, uint256[] memory s\n    ) public\n    {\n        uint i;\n        uint256 startGas = gasleft();\n\n        // Get amount sent\n        uint256 withdrawEther = floorEtherAndCheck(amountEther * 1 ether);\n\n        // Gets the current ring for the amounts\n        Ring storage ring = rings[withdrawEther][index];\n\n        // If everyone has withdrawn\n        if (ring.wParticipantsNo >= ringMaxParticipants) {\n            revert(\"All funds from current Ring has been withdrawn\");\n        }\n\n        // Ring needs to be closed first\n        // TODO: Make sure ring is closed later on...\n        if (ring.ringHash == bytes32(0x00)) {\n            revert(\"Ring isn't closed\");\n        }\n\n        uint256[2][] memory publicKeys = new uint256[2][](ringMaxParticipants);\n\n        for (i = 0; i < ringMaxParticipants; i++) {\n            publicKeys[i] = [\n                uint256(ring.publicKeys[uint8(i)][0]),\n                uint256(ring.publicKeys[uint8(i)][1])\n            ];\n        }\n\n        // Attempts to verify ring signature\n        bool signatureVerified = LSAG.verify(\n            abi.encodePacked(ring.ringHash), // Convert to bytes\n            c0,\n            keyImage,\n            s,\n            publicKeys\n        );\n\n        if (!signatureVerified) {\n            revert(\"Invalid signature\");\n        }\n\n        // Checks if Key Image has been used\n        // AKA No double withdraw\n        for (i = 0; i < ring.wParticipantsNo; i++) {\n            if (ring.keyImages[uint8(i)][0] == keyImage[0] &&\n                ring.keyImages[uint8(i)][1] == keyImage[1]) {\n                revert(\"Signature has been used!\");\n            }\n        }\n\n        // Otherwise adds key image to the current key image\n        // And adjusts params accordingly\n        ring.keyImages[ring.wParticipantsNo] = keyImage;\n        ring.wParticipantsNo += 1;\n\n        receiver.transfer(withdrawEther);\n    }\n\n\n    function createRingHash(uint256 amountEther, uint256 index) internal view\n        returns (bytes32)\n    {\n        uint256[2][ringMaxParticipants] memory publicKeys;\n        uint256 receivedEther = floorEtherAndCheck(amountEther * 1 ether);\n\n        Ring storage r = rings[receivedEther][index];\n\n        for (uint8 i = 0; i < ringMaxParticipants; i++) {\n            publicKeys[i] = r.publicKeys[i];\n        }\n\n        bytes memory b = abi.encodePacked(\n            blockhash(block.number - 1),\n            r.createdBlockNumber,\n            r.amountDeposited,\n            r.dParticipantsNo,\n            publicKeys\n        );\n\n        return keccak256(b);\n    }\n\n    function forceCloseRing(\n        uint256 amount, uint256 index\n    ) public\n    {\n        // Get amount sent\n        uint256 receivedEther = floorEtherAndCheck(amount * 1 ether);\n\n        // Gets the current ring for the amounts\n        uint256 curIndex = ringsNo[receivedEther];\n        Ring storage ring = rings[receivedEther][curIndex];\n\n\n        if (ring.ringHash != bytes32(0x00)) {\n            revert(\"Ring is already closed!\");\n        }\n\n        if (block.number - 1 - ring.createdBlockNumber >= minBlockNumberToCloseRing) {\n            revert(\"Ring needs to mature longer before forcefully closing\");\n        }\n\n        // Close the ring\n        ring.ringHash = createRingHash(receivedEther / (1 ether), index);\n\n        // Create new ring\n        ringsNo[receivedEther] += 1;\n    }\n\n\n    function floorEtherAndCheck(uint256 receivedAmount) internal view\n        returns (uint256)\n    {\n        uint256 i;\n        bool allowed = false;\n\n        // Floors received ether\n        uint256 receivedEther = (receivedAmount / 1 ether) * 1 ether;\n\n        for (i = 0; i < 10; i ++) {\n            if (allowedAmounts[i] == receivedEther) {\n                allowed = true;\n            }\n            if (allowed) {\n                break;\n            }\n        }\n\n        // Revert if ETH sent isn't in the allowed fixed amounts\n        require(allowed, \"Only ETH values of 2, 4, 6, 8 ... 512 are allowed\");\n\n        return receivedEther;\n    }\n\n    function getRingHash(uint256 amountEther, uint256 index) public view\n        returns (bytes32)\n    {\n        uint256 receivedEther = floorEtherAndCheck(amountEther * 1 ether);\n        return rings[receivedEther][index].ringHash;\n    }\n\n    function privateToPublic(uint256 sk) public view returns (uint256[2] memory publicKey) {\n        publicKey = AltBn128.ecMulG(sk);\n        require(AltBn128.onCurve(publicKey[0], publicKey[1]), \"PK_NOT_ON_CURVE\");\n\n        return publicKey;\n    }\n\n    // function keyGen(int r) external view returns (uint256[2] memory) {\n    //     return LSAG.keyGen(r);\n    // }\n}",
  "sourceMap": "525:141:0:-:0;123:6978;525:141;564:7;123:6978;525:141;;;573:7;525:141;;582:7;525:141;;591:8;525:141;;601:8;525:141;;619:8;525:141;;629:9;525:141;;640:9;525:141;;651:9;525:141;;;;-1:-1:-1;;525:141:0;;:::i;:::-;;123:6978;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;123:6978:0;;;;;;;;;;;;;;-1:-1:-1;123:6978:0;;;-1:-1:-1;123:6978:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Hetti.sol",
  "type": "contract"
}