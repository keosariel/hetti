{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "_publicKey",
          "type": "uint256[2]"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "getCurrentRingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packedData",
          "type": "uint256"
        }
      ],
      "name": "getParticipant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPublicKeys",
      "outputs": [
        {
          "internalType": "bytes32[2][5]",
          "name": "",
          "type": "bytes32[2][5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ringIndex",
          "type": "uint256"
        }
      ],
      "name": "getRingHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRingMaxParticipants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packedData",
          "type": "uint256"
        }
      ],
      "name": "getRingPackedData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packedData",
          "type": "uint256"
        }
      ],
      "name": "getWParticipant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "packedRingData",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ringHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ringsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ringIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "c0",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "keyImage",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[]",
          "name": "s",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "1": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "5": "contracts/HettiPool.sol",
    "7": "contracts/lib/AltBn128.sol",
    "8": "contracts/lib/LSAG.sol"
  },
  "ast": {
    "absolutePath": "contracts/HettiPool.sol",
    "exportedSymbols": {
      "AltBn128": [
        1944
      ],
      "Context": [
        2395
      ],
      "ERC20": [
        1692
      ],
      "HettiPool": [
        1010
      ],
      "IERC20": [
        2348
      ],
      "IERC20Metadata": [
        2373
      ],
      "LSAG": [
        2270
      ]
    },
    "id": 1011,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "43:23:5"
      },
      {
        "absolutePath": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1011,
        "sourceUnit": 1693,
        "src": "68:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/AltBn128.sol",
        "file": "./lib/AltBn128.sol",
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1011,
        "sourceUnit": 1945,
        "src": "124:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/LSAG.sol",
        "file": "./lib/LSAG.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1011,
        "sourceUnit": 2271,
        "src": "153:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HettiPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1010,
        "linearizedBaseContracts": [
          1010
        ],
        "name": "HettiPool",
        "nameLocation": "189:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "0dc149f0",
            "id": 140,
            "name": "AlreadyInitialized",
            "nameLocation": "395:18:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:2:5"
            },
            "src": "389:27:5"
          },
          {
            "errorSelector": "87138d5c",
            "id": 142,
            "name": "NotInitialized",
            "nameLocation": "427:14:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "441:2:5"
            },
            "src": "421:23:5"
          },
          {
            "constant": true,
            "id": 145,
            "mutability": "constant",
            "name": "MAX_RING_PARTICIPANT",
            "nameLocation": "697:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "680:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "720:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 148,
            "mutability": "constant",
            "name": "CLOSE_RING_BLOCK_THRESHOLD",
            "nameLocation": "955:26:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "938:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "938:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "984:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 151,
            "mutability": "constant",
            "name": "_BITPOS_NUMBER_PARTICIPANTS",
            "nameLocation": "1056:27:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "1039:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1039:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3332",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1086:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32_by_1",
                "typeString": "int_const 32"
              },
              "value": "32"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 154,
            "mutability": "constant",
            "name": "_BITPOS_NUMBER_WITHDRAWALS",
            "nameLocation": "1157:26:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "1140:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1140:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3438",
              "id": 153,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1186:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_48_by_1",
                "typeString": "int_const 48"
              },
              "value": "48"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 157,
            "mutability": "constant",
            "name": "_BITWIDTH_PARTICIPANTS",
            "nameLocation": "1212:22:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "1195:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 155,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1195:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3136",
              "id": 156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1237:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16_by_1",
                "typeString": "int_const 16"
              },
              "value": "16"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 160,
            "mutability": "constant",
            "name": "_BITWIDTH_BLOCK_NUM",
            "nameLocation": "1262:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "1245:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1245:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3332",
              "id": 159,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1284:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32_by_1",
                "typeString": "int_const 32"
              },
              "value": "32"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 168,
            "mutability": "constant",
            "name": "_BITMASK_BLOCK_NUM",
            "nameLocation": "1309:18:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "1292:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 161,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1331:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 163,
                      "name": "_BITWIDTH_BLOCK_NUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "1336:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1331:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 165,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1330:26:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 166,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1358:1:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "1330:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 176,
            "mutability": "constant",
            "name": "_BITMASK_PARTICIPANTS",
            "nameLocation": "1382:21:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "1365:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 169,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1365:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1407:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 171,
                      "name": "_BITWIDTH_PARTICIPANTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1412:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1407:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 173,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1406:29:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 174,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1437:1:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "1406:32:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "HettiPool.Ring",
            "id": 195,
            "members": [
              {
                "constant": false,
                "id": 178,
                "mutability": "mutable",
                "name": "amountDeposited",
                "nameLocation": "1705:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 195,
                "src": "1697:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 177,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1697:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 180,
                "mutability": "mutable",
                "name": "packedRingData",
                "nameLocation": "1914:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 195,
                "src": "1906:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 179,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1906:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 186,
                "mutability": "mutable",
                "name": "publicKeys",
                "nameLocation": "2019:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 195,
                "src": "1987:42:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                  "typeString": "mapping(uint256 => uint256[2])"
                },
                "typeName": {
                  "id": 185,
                  "keyType": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1987:31:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                    "typeString": "mapping(uint256 => uint256[2])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 182,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2007:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 184,
                    "length": {
                      "hexValue": "32",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2015:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2007:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 192,
                "mutability": "mutable",
                "name": "keyImages",
                "nameLocation": "2139:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 195,
                "src": "2107:41:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                  "typeString": "mapping(uint256 => uint256[2])"
                },
                "typeName": {
                  "id": 191,
                  "keyType": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2107:31:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                    "typeString": "mapping(uint256 => uint256[2])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 188,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2127:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 190,
                    "length": {
                      "hexValue": "32",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2135:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2127:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 194,
                "mutability": "mutable",
                "name": "ringHash",
                "nameLocation": "2166:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 195,
                "src": "2158:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 193,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2158:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ring",
            "nameLocation": "1632:4:5",
            "nodeType": "StructDefinition",
            "scope": 1010,
            "src": "1625:556:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 197,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "2202:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "2187:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 196,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2187:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b97e856",
            "id": 199,
            "mutability": "mutable",
            "name": "tokenDecimals",
            "nameLocation": "2228:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "2213:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 198,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2213:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b69ef8a8",
            "id": 201,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "2262:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "2247:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2247:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 205,
            "mutability": "mutable",
            "name": "allowedAmounts",
            "nameLocation": "2288:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "2276:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$10_storage",
              "typeString": "uint256[10]"
            },
            "typeName": {
              "baseType": {
                "id": 202,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2276:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 204,
              "length": {
                "hexValue": "3130",
                "id": 203,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2284:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "2276:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$10_storage_ptr",
                "typeString": "uint256[10]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9325019d",
            "id": 209,
            "mutability": "mutable",
            "name": "ringsNumber",
            "nameLocation": "2376:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "2341:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 208,
              "keyType": {
                "id": 206,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2349:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2341:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 207,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2360:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6381d19e",
            "id": 216,
            "mutability": "mutable",
            "name": "rings",
            "nameLocation": "2487:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1010,
            "src": "2434:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring))"
            },
            "typeName": {
              "id": 215,
              "keyType": {
                "id": 210,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2443:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2434:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring))"
              },
              "valueType": {
                "id": 214,
                "keyType": {
                  "id": 211,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2462:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2454:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                  "typeString": "mapping(uint256 => struct HettiPool.Ring)"
                },
                "valueType": {
                  "id": 213,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 212,
                    "name": "Ring",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 195,
                    "src": "2473:4:5"
                  },
                  "referencedDeclaration": 195,
                  "src": "2473:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                    "typeString": "struct HettiPool.Ring"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2659:338:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 222,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2673:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2690:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2682:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2682:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2673:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 231,
                  "nodeType": "IfStatement",
                  "src": "2669:52:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 228,
                        "name": "AlreadyInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2701:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2701:20:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 230,
                    "nodeType": "RevertStatement",
                    "src": "2694:27:5"
                  }
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2731:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 233,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "2739:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2731:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:14:5"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2755:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2777:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 237,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "2771:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1692_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2771:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1692",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1180,
                        "src": "2771:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2771:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2755:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:40:5"
                },
                {
                  "body": {
                    "id": 270,
                    "nodeType": "Block",
                    "src": "2854:137:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 252,
                              "name": "allowedAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "2868:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$10_storage",
                                "typeString": "uint256[10] storage ref"
                              }
                            },
                            "id": 254,
                            "indexExpression": {
                              "id": 253,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "2883:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2868:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2889:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "id": 256,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 245,
                                    "src": "2894:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2889:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 258,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2888:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 259,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2900:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "id": 260,
                                    "name": "tokenDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 199,
                                    "src": "2906:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2900:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 262,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2899:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2888:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2868:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 265,
                        "nodeType": "ExpressionStatement",
                        "src": "2868:52:5"
                      },
                      {
                        "id": 269,
                        "nodeType": "UncheckedBlock",
                        "src": "2935:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2963:3:5",
                              "subExpression": {
                                "id": 266,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 245,
                                "src": "2963:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 268,
                            "nodeType": "ExpressionStatement",
                            "src": "2963:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 248,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "2825:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 249,
                        "name": "allowedAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2829:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$10_storage",
                          "typeString": "uint256[10] storage ref"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2829:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2825:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "initializationExpression": {
                    "assignments": [
                      245
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2818:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "2810:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2810:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 247,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2822:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2810:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2806:185:5"
                }
              ]
            },
            "documentation": {
              "id": 217,
              "nodeType": "StructuredDocumentation",
              "src": "2499:112:5",
              "text": "@notice Initialize the vault to use and accept `token`\n @param _token The address of the token to use"
            },
            "functionSelector": "c4d66de8",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "2625:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2644:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2636:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:16:5"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2659:0:5"
            },
            "scope": 1010,
            "src": "2616:381:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "3246:1692:5",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "amountTokenRecieved",
                      "nameLocation": "3315:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "3307:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3307:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "3349:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "3337:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3337:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3307:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3394:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3394:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 297,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3414:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HettiPool_$1010",
                              "typeString": "contract HettiPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HettiPool_$1010",
                              "typeString": "contract HettiPool"
                            }
                          ],
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3406:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 295,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3406:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3406:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 299,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "3421:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 290,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "3374:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 289,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "3368:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1692_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1305,
                      "src": "3368:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:61:5"
                },
                {
                  "condition": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3444:65:5",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 306,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3470:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 308,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3481:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3470:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3462:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3462:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3462:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 312,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3494:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 314,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3505:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3494:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3486:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 310,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3486:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3486:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 302,
                          "name": "AltBn128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1944,
                          "src": "3445:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AltBn128_$1944_$",
                            "typeString": "type(library AltBn128)"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "onCurve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1879,
                        "src": "3445:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256,uint256) pure returns (bool)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3445:64:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 323,
                  "nodeType": "IfStatement",
                  "src": "3440:121:5",
                  "trueBody": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "3511:50:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "504b5f4e4f545f4f4e5f4355525645",
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3532:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd9320bac24e24791fbeb7f06292de9b0eb5c79f0fbea9354c619a9899b5676e",
                                "typeString": "literal_string \"PK_NOT_ON_CURVE\""
                              },
                              "value": "PK_NOT_ON_CURVE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dd9320bac24e24791fbeb7f06292de9b0eb5c79f0fbea9354c619a9899b5676e",
                                "typeString": "literal_string \"PK_NOT_ON_CURVE\""
                              }
                            ],
                            "id": 318,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3525:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3525:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "3525:25:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "ringIndex",
                      "nameLocation": "3628:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "3620:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3620:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "baseExpression": {
                      "id": 326,
                      "name": "ringsNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "3640:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 328,
                    "indexExpression": {
                      "id": 327,
                      "name": "amountTokenRecieved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "3652:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3640:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3620:52:5"
                },
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "3695:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "3682:17:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                        "typeString": "struct HettiPool.Ring"
                      },
                      "typeName": {
                        "id": 331,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 330,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 195,
                          "src": "3682:4:5"
                        },
                        "referencedDeclaration": 195,
                        "src": "3682:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 333,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3702:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                        }
                      },
                      "id": 335,
                      "indexExpression": {
                        "id": 334,
                        "name": "amountTokenRecieved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "3708:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3702:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                        "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                      }
                    },
                    "id": 337,
                    "indexExpression": {
                      "id": 336,
                      "name": "ringIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "3729:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3702:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$195_storage",
                      "typeString": "struct HettiPool.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3682:57:5"
                },
                {
                  "assignments": [
                    340,
                    342,
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "wParticipants",
                      "nameLocation": "3756:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "3751:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3751:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 342,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "3784:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "3779:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 341,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3779:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "blockNum",
                      "nameLocation": "3803:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "3798:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3798:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 346,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "3833:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "packedRingData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 180,
                        "src": "3833:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 345,
                      "name": "getRingPackedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "3815:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3815:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3750:103:5"
                },
                {
                  "body": {
                    "id": 388,
                    "nodeType": "Block",
                    "src": "3961:247:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 357,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 332,
                                    "src": "3979:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 358,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "publicKeys",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 186,
                                  "src": "3979:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 360,
                                "indexExpression": {
                                  "id": 359,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "3995:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3979:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 362,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3998:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3979:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 363,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "4004:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 365,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4015:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4004:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3979:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 367,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 332,
                                    "src": "4037:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "publicKeys",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 186,
                                  "src": "4037:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 370,
                                "indexExpression": {
                                  "id": 369,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "4053:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4037:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 372,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4056:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4037:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 373,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "4062:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 375,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4073:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4062:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4037:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3979:96:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 383,
                        "nodeType": "IfStatement",
                        "src": "3975:163:5",
                        "trueBody": {
                          "id": 382,
                          "nodeType": "Block",
                          "src": "4077:61:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "504b5f414c52454144595f494e5f52494e47",
                                    "id": 379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4102:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f66bce24130503187d7a08e9b03744ff74c670deb76f3c98ebe84cfb9aa8174c",
                                      "typeString": "literal_string \"PK_ALREADY_IN_RING\""
                                    },
                                    "value": "PK_ALREADY_IN_RING"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_f66bce24130503187d7a08e9b03744ff74c670deb76f3c98ebe84cfb9aa8174c",
                                      "typeString": "literal_string \"PK_ALREADY_IN_RING\""
                                    }
                                  ],
                                  "id": 378,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "4095:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4095:28:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 381,
                              "nodeType": "ExpressionStatement",
                              "src": "4095:28:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 387,
                        "nodeType": "UncheckedBlock",
                        "src": "4152:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "4180:3:5",
                              "subExpression": {
                                "id": 384,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "4180:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 386,
                            "nodeType": "ExpressionStatement",
                            "src": "4180:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 354,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "3942:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 355,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "3946:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3942:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 389,
                  "initializationExpression": {
                    "assignments": [
                      351
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3935:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "3927:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3927:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 353,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3939:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3927:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3922:286:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 390,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "4222:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4238:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4222:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 401,
                  "nodeType": "IfStatement",
                  "src": "4218:75:5",
                  "trueBody": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "4241:52:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 393,
                            "name": "blockNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "4255:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 394,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4266:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "4266:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4281:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4266:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4255:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "4255:27:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 402,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "4303:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicKeys",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 186,
                        "src": "4303:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                        }
                      },
                      "id": 406,
                      "indexExpression": {
                        "id": 404,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "4319:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4303:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                        "typeString": "uint256[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 407,
                      "name": "_publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "4335:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "4303:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage",
                      "typeString": "uint256[2] storage ref"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:42:5"
                },
                {
                  "expression": {
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 410,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "4355:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 178,
                      "src": "4355:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 413,
                      "name": "amountTokenRecieved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "4379:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4355:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:43:5"
                },
                {
                  "id": 419,
                  "nodeType": "UncheckedBlock",
                  "src": "4408:49:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4432:14:5",
                        "subExpression": {
                          "id": 416,
                          "name": "participants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "4432:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 418,
                      "nodeType": "ExpressionStatement",
                      "src": "4432:14:5"
                    }
                  ]
                },
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "packedData",
                      "nameLocation": "4472:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "4467:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 420,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4467:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 422,
                            "name": "wParticipants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "4486:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "id": 423,
                            "name": "_BITWIDTH_PARTICIPANTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "4503:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4486:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 425,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4485:41:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "id": 426,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "4529:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4485:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4467:74:5"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 429,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "4551:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 430,
                              "name": "packedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "4565:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "id": 431,
                              "name": "_BITWIDTH_BLOCK_NUM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "4579:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4565:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 433,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4564:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "id": 434,
                        "name": "blockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4602:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4564:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4551:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:59:5"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 438,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "4620:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "packedRingData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 180,
                      "src": "4620:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 441,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "4642:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4620:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4620:32:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 444,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "4716:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 445,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4732:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4716:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 463,
                  "nodeType": "IfStatement",
                  "src": "4712:220:5",
                  "trueBody": {
                    "id": 462,
                    "nodeType": "Block",
                    "src": "4754:178:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 447,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "4768:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                "typeString": "struct HettiPool.Ring storage pointer"
                              }
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ringHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 194,
                            "src": "4768:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 451,
                                "name": "amountTokenRecieved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "4793:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 452,
                                "name": "ringIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "4814:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 450,
                              "name": "hashRing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "4784:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,uint256) view returns (bytes32)"
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4784:40:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4768:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 455,
                        "nodeType": "ExpressionStatement",
                        "src": "4768:56:5"
                      },
                      {
                        "expression": {
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 456,
                              "name": "ringsNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 209,
                              "src": "4884:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 458,
                            "indexExpression": {
                              "id": 457,
                              "name": "amountTokenRecieved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "4896:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4884:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4920:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4884:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 461,
                        "nodeType": "ExpressionStatement",
                        "src": "4884:37:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 274,
              "nodeType": "StructuredDocumentation",
              "src": "3003:170:5",
              "text": "@notice Deposit `amount` of `token` into the vault\n @param _amount The amount of `token` to deposit\n @param _publicKey The public key of the participant"
            },
            "functionSelector": "71d8ded9",
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3187:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3200:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "3195:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_publicKey",
                  "nameLocation": "3227:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "3209:28:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 277,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3209:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 279,
                    "length": {
                      "hexValue": "32",
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3217:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3209:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3194:44:5"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3246:0:5"
            },
            "scope": 1010,
            "src": "3178:1760:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "5122:1699:5",
              "statements": [
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "5145:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "5132:17:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                        "typeString": "struct HettiPool.Ring"
                      },
                      "typeName": {
                        "id": 484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 483,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 195,
                          "src": "5132:4:5"
                        },
                        "referencedDeclaration": 195,
                        "src": "5132:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 491,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 486,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "5152:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                        }
                      },
                      "id": 488,
                      "indexExpression": {
                        "id": 487,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "5158:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5152:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                        "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                      }
                    },
                    "id": 490,
                    "indexExpression": {
                      "id": 489,
                      "name": "ringIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "5171:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5152:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$195_storage",
                      "typeString": "struct HettiPool.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5132:49:5"
                },
                {
                  "assignments": [
                    493,
                    495,
                    497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "wParticipants",
                      "nameLocation": "5198:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "5193:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5193:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "5226:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "5221:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 494,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5221:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 497,
                      "mutability": "mutable",
                      "name": "blockNum",
                      "nameLocation": "5245:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "5240:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 496,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5240:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 499,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "5275:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "packedRingData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 180,
                        "src": "5275:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 498,
                      "name": "getRingPackedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "5257:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5257:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5192:103:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 503,
                      "name": "wParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "5319:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 504,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "5336:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5319:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 511,
                  "nodeType": "IfStatement",
                  "src": "5315:97:5",
                  "trueBody": {
                    "id": 510,
                    "nodeType": "Block",
                    "src": "5358:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "414c4c5f46554e44535f57495448445241574e",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5379:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c634b3b1716440aaa88dc45b014b8f309105c452b71701861a713535bb28a2c",
                                "typeString": "literal_string \"ALL_FUNDS_WITHDRAWN\""
                              },
                              "value": "ALL_FUNDS_WITHDRAWN"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7c634b3b1716440aaa88dc45b014b8f309105c452b71701861a713535bb28a2c",
                                "typeString": "literal_string \"ALL_FUNDS_WITHDRAWN\""
                              }
                            ],
                            "id": 506,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "5372:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5372:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "5372:29:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 512,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "5426:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ringHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 194,
                      "src": "5426:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5451:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5443:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5443:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5443:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5426:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 524,
                  "nodeType": "IfStatement",
                  "src": "5422:86:5",
                  "trueBody": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "5458:50:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "52494e475f4e4f545f434c4f534544",
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5479:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ae11486da3a827106adc7d5d70961a9463b6590ca346e868e8ec9875c0c9b66b",
                                "typeString": "literal_string \"RING_NOT_CLOSED\""
                              },
                              "value": "RING_NOT_CLOSED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ae11486da3a827106adc7d5d70961a9463b6590ca346e868e8ec9875c0c9b66b",
                                "typeString": "literal_string \"RING_NOT_CLOSED\""
                              }
                            ],
                            "id": 519,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "5472:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5472:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "5472:25:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 531,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "5538:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "5518:30:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[2][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 528,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5518:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 529,
                          "length": {
                            "hexValue": "32",
                            "id": 527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5526:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "5518:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 530,
                        "nodeType": "ArrayTypeName",
                        "src": "5518:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                          "typeString": "uint256[2][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 539,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 537,
                        "name": "MAX_RING_PARTICIPANT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "5568:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5551:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[2] memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 532,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5555:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 534,
                          "length": {
                            "hexValue": "32",
                            "id": 533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5563:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "5555:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 535,
                        "nodeType": "ArrayTypeName",
                        "src": "5555:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                          "typeString": "uint256[2][]"
                        }
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5551:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[2] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5518:71:5"
                },
                {
                  "body": {
                    "id": 560,
                    "nodeType": "Block",
                    "src": "5647:118:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 547,
                              "name": "publicKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "5661:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[2] memory[] memory"
                              }
                            },
                            "id": 549,
                            "indexExpression": {
                              "id": 548,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "5672:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5661:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 550,
                                "name": "ring",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "5677:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                  "typeString": "struct HettiPool.Ring storage pointer"
                                }
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "publicKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 186,
                              "src": "5677:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 553,
                            "indexExpression": {
                              "id": 552,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "5693:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5677:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "src": "5661:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 555,
                        "nodeType": "ExpressionStatement",
                        "src": "5661:34:5"
                      },
                      {
                        "id": 559,
                        "nodeType": "UncheckedBlock",
                        "src": "5709:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "5737:3:5",
                              "subExpression": {
                                "id": 556,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 541,
                                "src": "5737:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 558,
                            "nodeType": "ExpressionStatement",
                            "src": "5737:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 544,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "5620:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 545,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "5624:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5620:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 561,
                  "initializationExpression": {
                    "assignments": [
                      541
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5613:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "5605:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5605:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 543,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5617:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5605:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5600:165:5"
                },
                {
                  "assignments": [
                    563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 563,
                      "mutability": "mutable",
                      "name": "signatureVerified",
                      "nameLocation": "5825:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "5820:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 562,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5820:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 576,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 568,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5887:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                "typeString": "struct HettiPool.Ring storage pointer"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ringHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 194,
                            "src": "5887:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 566,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5870:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5870:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5870:31:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 571,
                        "name": "c0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "5935:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 572,
                        "name": "keyImage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "5951:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "id": 573,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "5973:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 574,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "5988:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 564,
                        "name": "LSAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2270,
                        "src": "5845:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSAG_$2270_$",
                          "typeString": "type(library LSAG)"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2269,
                      "src": "5845:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,uint256,uint256[2] memory,uint256[] memory,uint256[2] memory[] memory) view returns (bool)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5845:163:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5820:188:5"
                },
                {
                  "condition": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6023:18:5",
                    "subExpression": {
                      "id": 577,
                      "name": "signatureVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "6024:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 584,
                  "nodeType": "IfStatement",
                  "src": "6019:76:5",
                  "trueBody": {
                    "id": 583,
                    "nodeType": "Block",
                    "src": "6043:52:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "494e56414c49445f5349474e4154555245",
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6064:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
                                "typeString": "literal_string \"INVALID_SIGNATURE\""
                              },
                              "value": "INVALID_SIGNATURE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
                                "typeString": "literal_string \"INVALID_SIGNATURE\""
                              }
                            ],
                            "id": 579,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6057:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6057:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 582,
                        "nodeType": "ExpressionStatement",
                        "src": "6057:27:5"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "6210:237:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 592,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "6228:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyImages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 192,
                                  "src": "6228:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 595,
                                "indexExpression": {
                                  "id": 594,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 586,
                                  "src": "6243:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6228:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 597,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6246:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6228:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 598,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "6252:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 600,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6261:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6252:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6228:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 602,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "6283:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyImages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 192,
                                  "src": "6283:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 605,
                                "indexExpression": {
                                  "id": 604,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 586,
                                  "src": "6298:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6283:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 607,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6301:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6283:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 608,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "6307:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 610,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6316:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6307:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6283:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6228:90:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 618,
                        "nodeType": "IfStatement",
                        "src": "6224:153:5",
                        "trueBody": {
                          "id": 617,
                          "nodeType": "Block",
                          "src": "6320:57:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "555345445f5349474e4154555245",
                                    "id": 614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6345:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bde00ef8e8c7cefc3cfc63c51af4c60401c4f294a165c6b4598c8cd1d57de8a6",
                                      "typeString": "literal_string \"USED_SIGNATURE\""
                                    },
                                    "value": "USED_SIGNATURE"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_bde00ef8e8c7cefc3cfc63c51af4c60401c4f294a165c6b4598c8cd1d57de8a6",
                                      "typeString": "literal_string \"USED_SIGNATURE\""
                                    }
                                  ],
                                  "id": 613,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "6338:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6338:24:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 616,
                              "nodeType": "ExpressionStatement",
                              "src": "6338:24:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 622,
                        "nodeType": "UncheckedBlock",
                        "src": "6391:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "6419:3:5",
                              "subExpression": {
                                "id": 619,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 586,
                                "src": "6419:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 621,
                            "nodeType": "ExpressionStatement",
                            "src": "6419:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 589,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "6190:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 590,
                      "name": "wParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "6194:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6190:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "initializationExpression": {
                    "assignments": [
                      586
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6183:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "6178:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6178:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 588,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6187:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6178:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6173:274:5"
                },
                {
                  "expression": {
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 625,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "6461:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyImages",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 192,
                        "src": "6461:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                        }
                      },
                      "id": 629,
                      "indexExpression": {
                        "id": 627,
                        "name": "wParticipants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "6476:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6461:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                        "typeString": "uint256[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 630,
                      "name": "keyImage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "6493:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "6461:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage",
                      "typeString": "uint256[2] storage ref"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "6461:40:5"
                },
                {
                  "id": 636,
                  "nodeType": "UncheckedBlock",
                  "src": "6511:50:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "6535:15:5",
                        "subExpression": {
                          "id": 633,
                          "name": "wParticipants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "6535:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 635,
                      "nodeType": "ExpressionStatement",
                      "src": "6535:15:5"
                    }
                  ]
                },
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "packedData",
                      "nameLocation": "6576:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "6571:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6571:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 645,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 639,
                            "name": "wParticipants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "6590:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "id": 640,
                            "name": "_BITWIDTH_PARTICIPANTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "6607:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6590:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 642,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6589:41:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "id": 643,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "6633:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6589:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6571:74:5"
                },
                {
                  "expression": {
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 646,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "6655:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 647,
                              "name": "packedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "6669:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "id": 648,
                              "name": "_BITWIDTH_BLOCK_NUM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "6683:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6669:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 650,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6668:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "id": 651,
                        "name": "blockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "6706:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6668:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6655:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "6655:59:5"
                },
                {
                  "expression": {
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 655,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "6724:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "packedRingData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 180,
                      "src": "6724:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 658,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "6746:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6724:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "6724:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 665,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "6791:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 666,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "6802:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 662,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "6775:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 661,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "6769:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1692_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6769:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1229,
                      "src": "6769:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:45:5"
                }
              ]
            },
            "functionSelector": "62230498",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4953:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4987:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "4971:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4971:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "5006:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "4998:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "ringIndex",
                  "nameLocation": "5027:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "5019:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5019:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "c0",
                  "nameLocation": "5054:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "5046:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5046:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "keyImage",
                  "nameLocation": "5076:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "5058:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 474,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5058:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 476,
                    "length": {
                      "hexValue": "32",
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5066:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5058:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "5103:1:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "5086:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 478,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5086:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 479,
                    "nodeType": "ArrayTypeName",
                    "src": "5086:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4961:149:5"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5122:0:5"
            },
            "scope": 1010,
            "src": "4944:1877:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "6931:681:5",
              "statements": [
                {
                  "assignments": [
                    686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 686,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "6981:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "6941:50:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$5_memory_ptr",
                        "typeString": "uint256[2][5]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 683,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6941:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 684,
                          "length": {
                            "hexValue": "32",
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6949:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "6941:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 685,
                        "length": {
                          "id": 682,
                          "name": "MAX_RING_PARTICIPANT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "6952:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "6941:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$5_storage_ptr",
                          "typeString": "uint256[2][5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 687,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6941:50:5"
                },
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "receivedToken",
                      "nameLocation": "7009:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "7001:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7001:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 691,
                        "name": "_amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 672,
                        "src": "7037:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 690,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "7025:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7025:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7001:49:5"
                },
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "7074:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "7061:17:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                        "typeString": "struct HettiPool.Ring"
                      },
                      "typeName": {
                        "id": 695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 694,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 195,
                          "src": "7061:4:5"
                        },
                        "referencedDeclaration": 195,
                        "src": "7061:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                          "typeString": "struct HettiPool.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 702,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 697,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "7081:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                        }
                      },
                      "id": 699,
                      "indexExpression": {
                        "id": 698,
                        "name": "receivedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7087:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7081:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                        "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                      }
                    },
                    "id": 701,
                    "indexExpression": {
                      "id": 700,
                      "name": "_ringIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "7102:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7081:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$195_storage",
                      "typeString": "struct HettiPool.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7061:52:5"
                },
                {
                  "body": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "7169:119:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 710,
                              "name": "publicKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "7183:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$5_memory_ptr",
                                "typeString": "uint256[2] memory[5] memory"
                              }
                            },
                            "id": 712,
                            "indexExpression": {
                              "id": 711,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "7194:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7183:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 713,
                                "name": "ring",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 696,
                                "src": "7199:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                                  "typeString": "struct HettiPool.Ring storage pointer"
                                }
                              },
                              "id": 714,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "publicKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 186,
                              "src": "7199:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 716,
                            "indexExpression": {
                              "id": 715,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "7215:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7199:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "src": "7183:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 718,
                        "nodeType": "ExpressionStatement",
                        "src": "7183:34:5"
                      },
                      {
                        "id": 722,
                        "nodeType": "UncheckedBlock",
                        "src": "7232:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "7260:3:5",
                              "subExpression": {
                                "id": 719,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 704,
                                "src": "7260:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 721,
                            "nodeType": "ExpressionStatement",
                            "src": "7260:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 707,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "7142:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 708,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "7146:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7142:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 724,
                  "initializationExpression": {
                    "assignments": [
                      704
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7135:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 724,
                        "src": "7129:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "7129:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 706,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7139:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7129:11:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "7124:164:5"
                },
                {
                  "assignments": [
                    726,
                    null,
                    728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 726,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "7304:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "7299:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7299:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "blockNum",
                      "nameLocation": "7324:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "7319:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7319:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 730,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "7354:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "packedRingData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 180,
                        "src": "7354:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 729,
                      "name": "getRingPackedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "7336:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7336:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7298:76:5"
                },
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "7398:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "7385:14:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7385:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 750,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 739,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7442:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "7442:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7457:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7442:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 738,
                          "name": "blockhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -5,
                          "src": "7432:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) view returns (bytes32)"
                          }
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7432:27:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 744,
                        "name": "blockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "7473:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 745,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "7495:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$195_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountDeposited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 178,
                        "src": "7495:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 747,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "7529:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 748,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "7555:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$5_memory_ptr",
                          "typeString": "uint256[2] memory[5] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$5_memory_ptr",
                          "typeString": "uint256[2] memory[5] memory"
                        }
                      ],
                      "expression": {
                        "id": 736,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7402:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "7402:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7402:173:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7385:190:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 752,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "7603:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 751,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7593:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7593:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 678,
                  "id": 754,
                  "nodeType": "Return",
                  "src": "7586:19:5"
                }
              ]
            },
            "id": 756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashRing",
            "nameLocation": "6836:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "_amountToken",
                  "nameLocation": "6853:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6845:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6845:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "_ringIndex",
                  "nameLocation": "6875:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6867:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6867:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6844:42:5"
            },
            "returnParameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6918:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6917:9:5"
            },
            "scope": 1010,
            "src": "6827:785:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "7723:124:5",
              "statements": [
                {
                  "assignments": [
                    766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 766,
                      "mutability": "mutable",
                      "name": "receivedToken",
                      "nameLocation": "7741:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 778,
                      "src": "7733:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 765,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7733:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 770,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 768,
                        "name": "_amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "7769:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 767,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "7757:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7757:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7733:49:5"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 771,
                          "name": "rings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "7799:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                          }
                        },
                        "id": 773,
                        "indexExpression": {
                          "id": 772,
                          "name": "receivedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 766,
                          "src": "7805:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7799:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                          "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                        }
                      },
                      "id": 775,
                      "indexExpression": {
                        "id": 774,
                        "name": "_ringIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "7820:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7799:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$195_storage",
                        "typeString": "struct HettiPool.Ring storage ref"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ringHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 194,
                    "src": "7799:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 764,
                  "id": 777,
                  "nodeType": "Return",
                  "src": "7792:48:5"
                }
              ]
            },
            "functionSelector": "9f1961e6",
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingHash",
            "nameLocation": "7627:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "_amountToken",
                  "nameLocation": "7647:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "7639:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7639:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "_ringIndex",
                  "nameLocation": "7669:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "7661:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7638:42:5"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "7710:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7710:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7709:9:5"
            },
            "scope": 1010,
            "src": "7618:229:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "7909:61:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 790,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7957:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HettiPool_$1010",
                              "typeString": "contract HettiPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HettiPool_$1010",
                              "typeString": "contract HettiPool"
                            }
                          ],
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7949:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 788,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7949:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7949:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 785,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "7932:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 784,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "7926:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1692_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7926:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1204,
                      "src": "7926:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7926:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 783,
                  "id": 793,
                  "nodeType": "Return",
                  "src": "7919:44:5"
                }
              ]
            },
            "functionSelector": "abd70aa2",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nameLocation": "7862:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7876:2:5"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "7900:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7900:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7899:9:5"
            },
            "scope": 1010,
            "src": "7853:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 841,
              "nodeType": "Block",
              "src": "8342:445:5",
              "statements": [
                {
                  "assignments": [
                    803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 803,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "8357:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "8352:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 802,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8352:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8367:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8352:20:5"
                },
                {
                  "body": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "8412:229:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 813,
                              "name": "allowedAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "8430:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$10_storage",
                                "typeString": "uint256[10] storage ref"
                              }
                            },
                            "id": 815,
                            "indexExpression": {
                              "id": 814,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "8445:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8430:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 816,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "8451:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8430:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 823,
                        "nodeType": "IfStatement",
                        "src": "8426:81:5",
                        "trueBody": {
                          "id": 822,
                          "nodeType": "Block",
                          "src": "8460:47:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 818,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 803,
                                  "src": "8478:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8488:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "8478:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 821,
                              "nodeType": "ExpressionStatement",
                              "src": "8478:14:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 824,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 803,
                          "src": "8524:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 827,
                        "nodeType": "IfStatement",
                        "src": "8520:51:5",
                        "trueBody": {
                          "id": 826,
                          "nodeType": "Block",
                          "src": "8533:38:5",
                          "statements": [
                            {
                              "id": 825,
                              "nodeType": "Break",
                              "src": "8551:5:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 831,
                        "nodeType": "UncheckedBlock",
                        "src": "8585:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "8613:3:5",
                              "subExpression": {
                                "id": 828,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "8613:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 830,
                            "nodeType": "ExpressionStatement",
                            "src": "8613:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 810,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "8403:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8407:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "8403:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 833,
                  "initializationExpression": {
                    "assignments": [
                      807
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8396:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "8388:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8388:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 809,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8400:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8388:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "8383:258:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 835,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "8726:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414d4f554e545f4e4f545f414c4c4f574544",
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8735:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44fe74eae53febc46c69a4a9edd92da99421b5498bcdab254e852200e5f674d9",
                          "typeString": "literal_string \"AMOUNT_NOT_ALLOWED\""
                        },
                        "value": "AMOUNT_NOT_ALLOWED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44fe74eae53febc46c69a4a9edd92da99421b5498bcdab254e852200e5f674d9",
                          "typeString": "literal_string \"AMOUNT_NOT_ALLOWED\""
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8718:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8718:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "8718:38:5"
                },
                {
                  "expression": {
                    "id": 839,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 797,
                    "src": "8773:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 801,
                  "id": 840,
                  "nodeType": "Return",
                  "src": "8766:14:5"
                }
              ]
            },
            "id": 842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amountCheck",
            "nameLocation": "8269:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8289:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "8281:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8281:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8280:17:5"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "8329:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8329:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8328:9:5"
            },
            "scope": 1010,
            "src": "8260:527:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "8926:367:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 856,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "8948:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 855,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "8936:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8936:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "8936:24:5"
                },
                {
                  "assignments": [
                    866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 866,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "9011:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 922,
                      "src": "8971:50:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$5_memory_ptr",
                        "typeString": "bytes32[2][5]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 863,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8971:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 864,
                          "length": {
                            "hexValue": "32",
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8979:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "8971:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                            "typeString": "bytes32[2]"
                          }
                        },
                        "id": 865,
                        "length": {
                          "id": 862,
                          "name": "MAX_RING_PARTICIPANT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "8982:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "8971:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$5_storage_ptr",
                          "typeString": "bytes32[2][5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 867,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8971:50:5"
                },
                {
                  "body": {
                    "id": 918,
                    "nodeType": "Block",
                    "src": "9080:179:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 878,
                                "name": "publicKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 866,
                                "src": "9094:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$5_memory_ptr",
                                  "typeString": "bytes32[2] memory[5] memory"
                                }
                              },
                              "id": 881,
                              "indexExpression": {
                                "id": 879,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "9105:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9094:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                                "typeString": "bytes32[2] memory"
                              }
                            },
                            "id": 882,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9108:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9094:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 885,
                                          "name": "rings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 216,
                                          "src": "9121:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                                          }
                                        },
                                        "id": 887,
                                        "indexExpression": {
                                          "id": 886,
                                          "name": "amountToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 844,
                                          "src": "9127:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9121:18:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                                          "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                                        }
                                      },
                                      "id": 889,
                                      "indexExpression": {
                                        "id": 888,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 846,
                                        "src": "9140:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9121:25:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Ring_$195_storage",
                                        "typeString": "struct HettiPool.Ring storage ref"
                                      }
                                    },
                                    "id": 890,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "publicKeys",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 186,
                                    "src": "9121:36:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                      "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                    }
                                  },
                                  "id": 892,
                                  "indexExpression": {
                                    "id": 891,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 869,
                                    "src": "9158:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9121:39:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                    "typeString": "uint256[2] storage ref"
                                  }
                                },
                                "id": 894,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9161:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9121:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9113:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 883,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "9113:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9113:51:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9094:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "9094:70:5"
                      },
                      {
                        "expression": {
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 898,
                                "name": "publicKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 866,
                                "src": "9178:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$5_memory_ptr",
                                  "typeString": "bytes32[2] memory[5] memory"
                                }
                              },
                              "id": 901,
                              "indexExpression": {
                                "id": 899,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "9189:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9178:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                                "typeString": "bytes32[2] memory"
                              }
                            },
                            "id": 902,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9192:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9178:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 905,
                                          "name": "rings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 216,
                                          "src": "9205:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                                          }
                                        },
                                        "id": 907,
                                        "indexExpression": {
                                          "id": 906,
                                          "name": "amountToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 844,
                                          "src": "9211:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9205:18:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$195_storage_$",
                                          "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                                        }
                                      },
                                      "id": 909,
                                      "indexExpression": {
                                        "id": 908,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 846,
                                        "src": "9224:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9205:25:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Ring_$195_storage",
                                        "typeString": "struct HettiPool.Ring storage ref"
                                      }
                                    },
                                    "id": 910,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "publicKeys",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 186,
                                    "src": "9205:36:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                      "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                    }
                                  },
                                  "id": 912,
                                  "indexExpression": {
                                    "id": 911,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 869,
                                    "src": "9242:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9205:39:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                    "typeString": "uint256[2] storage ref"
                                  }
                                },
                                "id": 914,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9245:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9205:42:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9197:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 903,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "9197:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9197:51:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9178:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 917,
                        "nodeType": "ExpressionStatement",
                        "src": "9178:70:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 872,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "9049:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 873,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "9053:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9049:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 919,
                  "initializationExpression": {
                    "assignments": [
                      869
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9042:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "9037:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9037:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 871,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9046:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9037:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9075:3:5",
                      "subExpression": {
                        "id": 875,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "9075:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 877,
                    "nodeType": "ExpressionStatement",
                    "src": "9075:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "9032:227:5"
                },
                {
                  "expression": {
                    "id": 920,
                    "name": "publicKeys",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 866,
                    "src": "9276:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$5_memory_ptr",
                      "typeString": "bytes32[2] memory[5] memory"
                    }
                  },
                  "functionReturnParameters": 854,
                  "id": 921,
                  "nodeType": "Return",
                  "src": "9269:17:5"
                }
              ]
            },
            "functionSelector": "d5fce735",
            "id": 923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicKeys",
            "nameLocation": "8802:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "8824:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "8816:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8816:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "8845:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "8837:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8837:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8815:36:5"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "8881:39:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$5_memory_ptr",
                    "typeString": "bytes32[2][5]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 848,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8881:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 850,
                      "length": {
                        "hexValue": "32",
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8889:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "8881:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 852,
                    "length": {
                      "id": 851,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "8892:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8881:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$5_storage_ptr",
                      "typeString": "bytes32[2][5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8880:41:5"
            },
            "scope": 1010,
            "src": "8793:500:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 951,
              "nodeType": "Block",
              "src": "9390:223:5",
              "statements": [
                {
                  "assignments": [
                    935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "9408:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 951,
                      "src": "9400:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9400:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 939,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 936,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "9412:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 937,
                      "name": "_BITWIDTH_BLOCK_NUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "9426:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9412:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9400:45:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 940,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "9485:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">>",
                        "rightExpression": {
                          "id": 941,
                          "name": "_BITWIDTH_PARTICIPANTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "9490:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9485:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 943,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "9526:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "id": 944,
                          "name": "_BITMASK_PARTICIPANTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "9530:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9526:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 946,
                          "name": "packedData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "9565:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "id": 947,
                          "name": "_BITMASK_BLOCK_NUM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "9578:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9565:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 949,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9471:135:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 933,
                  "id": 950,
                  "nodeType": "Return",
                  "src": "9464:142:5"
                }
              ]
            },
            "functionSelector": "bf12505b",
            "id": 952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingPackedData",
            "nameLocation": "9308:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "packedData",
                  "nameLocation": "9331:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "9326:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9326:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9325:17:5"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "9364:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9364:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "9373:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9373:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "9382:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9382:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9363:27:5"
            },
            "scope": 1010,
            "src": "9299:314:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "9693:85:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 959,
                            "name": "packedData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "9711:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">>",
                          "rightExpression": {
                            "id": 960,
                            "name": "_BITWIDTH_BLOCK_NUM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "9725:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9711:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 962,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9710:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 963,
                      "name": "_BITWIDTH_PARTICIPANTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "9749:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9710:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 958,
                  "id": 965,
                  "nodeType": "Return",
                  "src": "9703:68:5"
                }
              ]
            },
            "functionSelector": "9edb6cbd",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWParticipant",
            "nameLocation": "9628:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "packedData",
                  "nameLocation": "9652:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "9644:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9644:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9643:20:5"
            },
            "returnParameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "9685:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9685:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9684:9:5"
            },
            "scope": 1010,
            "src": "9619:159:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 984,
              "nodeType": "Block",
              "src": "9857:113:5",
              "statements": [
                {
                  "assignments": [
                    975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 975,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "9875:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 984,
                      "src": "9867:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 974,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9867:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 979,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 976,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "9879:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 977,
                      "name": "_BITWIDTH_BLOCK_NUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "9893:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9879:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9867:45:5"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 980,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "9938:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&",
                    "rightExpression": {
                      "id": 981,
                      "name": "_BITMASK_PARTICIPANTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "9942:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9938:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 973,
                  "id": 983,
                  "nodeType": "Return",
                  "src": "9931:32:5"
                }
              ]
            },
            "functionSelector": "1b9db2ef",
            "id": 985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getParticipant",
            "nameLocation": "9793:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "packedData",
                  "nameLocation": "9816:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 985,
                  "src": "9808:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9808:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9807:20:5"
            },
            "returnParameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 985,
                  "src": "9849:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9849:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9848:9:5"
            },
            "scope": 1010,
            "src": "9784:186:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "10052:44:5",
              "statements": [
                {
                  "expression": {
                    "id": 990,
                    "name": "MAX_RING_PARTICIPANT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "10069:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 989,
                  "id": 991,
                  "nodeType": "Return",
                  "src": "10062:27:5"
                }
              ]
            },
            "functionSelector": "7c0ffaa2",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingMaxParticipants",
            "nameLocation": "9985:22:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10007:2:5"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "10039:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10039:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10038:9:5"
            },
            "scope": 1010,
            "src": "9976:120:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "10194:82:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1001,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "10216:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1000,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "10204:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10204:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "10204:24:5"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1004,
                      "name": "ringsNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "10245:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1006,
                    "indexExpression": {
                      "id": 1005,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "10257:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10245:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 999,
                  "id": 1007,
                  "nodeType": "Return",
                  "src": "10238:31:5"
                }
              ]
            },
            "functionSelector": "7f5bf51c",
            "id": 1009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRingIndex",
            "nameLocation": "10111:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "10139:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "10131:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10131:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10130:21:5"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "10181:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10181:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10180:9:5"
            },
            "scope": 1010,
            "src": "10102:174:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1011,
        "src": "180:10098:5",
        "usedErrors": [
          140,
          142
        ]
      }
    ],
    "src": "43:10235:5"
  },
  "bytecode": "608060405234801561001057600080fd5b5061147b806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639edb6cbd11610097578063bf12505b11610066578063bf12505b14610223578063c4d66de814610236578063d5fce73514610249578063fc0c546a1461026957600080fd5b80639edb6cbd146101eb5780639f1961e6146101ff578063abd70aa214610212578063b69ef8a81461021a57600080fd5b806371d8ded9116100d357806371d8ded91461019e5780637c0ffaa2146101b15780637f5bf51c146101b85780639325019d146101cb57600080fd5b80631b9db2ef146101055780633b97e8561461012b57806362230498146101345780636381d19e14610149575b600080fd5b610118610113366004610e1b565b610294565b6040519081526020015b60405180910390f35b61011860015481565b610147610142366004610f03565b6102b0565b005b610183610157366004610feb565b600e60209081526000928352604080842090915290825290208054600182015460049092015490919083565b60408051938452602084019290925290820152606001610122565b6101476101ac36600461100d565b610646565b6005610118565b6101186101c6366004610e1b565b610904565b6101186101d9366004610e1b565b600d6020526000908152604090205481565b6101186101f9366004610e1b565b60301c90565b61011861020d366004610feb565b610923565b610118610956565b61011860025481565b610183610231366004610e1b565b6109c8565b61014761024436600461103a565b610a06565b61025c610257366004610feb565b610b02565b604051610122919061105e565b60005461027c906001600160a01b031681565b6040516001600160a01b039091168152602001610122565b6000602082901c6102a96001620100006110cf565b1692915050565b6000858152600e6020908152604080832087845290915281206001810154909190819081906102de906109c8565b9250925092506005831061032f5760405162461bcd60e51b815260206004820152601360248201527220a6262fa32aa72229afaba4aa24222920aba760691b60448201526064015b60405180910390fd5b60048401546103725760405162461bcd60e51b815260206004820152600f60248201526e14925391d7d393d517d0d313d4d151608a1b6044820152606401610326565b60408051600580825260c08201909252600091816020015b610392610d50565b81526020019060019003908161038a57905050905060005b600581101561041357600081815260028781016020526040918290208251808401938490529290919082845b8154815260200190600101908083116103d6575050505050828281518110610400576104006110e6565b60209081029190910101526001016103aa565b50600073__LSAG__________________________________63fe46a2b2876004015460405160200161044791815260200190565b6040516020818303038152906040528b8b8b876040518663ffffffff1660e01b815260040161047a95949392919061119a565b602060405180830381865af4158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb9190611230565b9050806104fe5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b6044820152606401610326565b60005b85811015610587578851600082815260038901602052604090205414801561054157506020808a0151600083815260038a01909252604090912060010154145b1561057f5760405162461bcd60e51b815260206004820152600e60248201526d555345445f5349474e415455524560901b6044820152606401610326565b600101610501565b50600085815260038701602052604090206105a490896002610d6e565b506001948501601081901b851760201b841795870186905560005460405163a9059cbb60e01b81526001600160a01b038f81166004830152602482018f90529297929091169063a9059cbb906044016020604051808303816000875af1158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190611230565b5050505050505050505050505050565b600061065183610bc9565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611230565b5081516020830151604051630cd3b28960e31b81526004810192909252602482015273__AltBn128______________________________9063669d944890604401602060405180830381865af415801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190611230565b61078d5760405162461bcd60e51b815260206004820152600f60248201526e504b5f4e4f545f4f4e5f435552564560881b6044820152606401610326565b6000818152600d6020908152604080832054600e83528184208185529092528220600181015491929091819081906107c4906109c8565b92509250925060005b82811015610857578751600082815260028701602052604090205414801561080d5750602080890151600083815260028801909252604090912060010154145b1561084f5760405162461bcd60e51b8152602060048201526012602482015271504b5f414c52454144595f494e5f52494e4760701b6044820152606401610326565b6001016107cd565b508160000361086e5761086b6001436110cf565b90505b60008281526002808601602052604090912061088b918990610d6e565b50858460000160008282546108a09190611252565b90915550506001918201601084901b811760201b821792850183905591600583106108f9576108cf8787610c4e565b60048601556000878152600d602052604081208054600192906108f3908490611252565b90915550505b505050505050505050565b600061090f82610bc9565b50506000908152600d602052604090205490565b60008061092f84610bc9565b6000908152600e602090815260408083208684529091529020600401549150505b92915050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c3919061126a565b905090565b60008080602084901c603085901c6109e46001620100006110cf565b82166109f660016401000000006110cf565b8716935093509350509193909250565b6000546001600160a01b031615610a2f5760405162dc149f60e41b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015610a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac9190611283565b60ff1660015560005b600a811015610afe57600154610acc90600a61138a565b610ad782600261138a565b610ae19190611396565b600382600a8110610af457610af46110e6565b0155600101610ab5565b5050565b610b0a610dac565b610b1383610bc9565b50610b1c610dac565b60005b6005811015610bc1576000858152600e602090815260408083208784528252808320848452600201909152902054828260058110610b5f57610b5f6110e6565b60209081029190910151919091526000868152600e8252604080822087835283528082208483526002019092522060010154828260058110610ba357610ba36110e6565b60200201516001602002015280610bb9816113b5565b915050610b1f565b509392505050565b600080805b600a811015610c045783600382600a8110610beb57610beb6110e6565b015403610bf757600191505b81610c0457600101610bce565b5080610c475760405162461bcd60e51b8152602060048201526012602482015271105353d5539517d393d517d0531313d5d15160721b6044820152606401610326565b5090919050565b6000610c58610dd9565b6000610c6385610bc9565b6000818152600e6020908152604080832088845290915281209192505b60058160ff161015610ced5760ff8116600090815260028381016020526040918290208251808401938490529290919082845b815481526020019060010190808311610cb3575050505050848260ff1660058110610ce057610ce06110e6565b6020020152600101610c80565b50600080610cfe83600101546109c8565b92505091506000600143610d1291906110cf565b8454604051610d2b924091859187908b906020016113ce565b60408051808303601f1901815291905280516020909101209998505050505050505050565b60405180604001604052806002906020820280368337509192915050565b8260028101928215610d9c579160200282015b82811115610d9c578251825591602001919060010190610d81565b50610da8929150610e06565b5090565b6040518060a001604052806005905b610dc3610d50565b815260200190600190039081610dbb5790505090565b6040518060a001604052806005905b610df0610d50565b815260200190600190039081610de85790505090565b5b80821115610da85760008155600101610e07565b600060208284031215610e2d57600080fd5b5035919050565b6001600160a01b0381168114610e4957600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e8b57610e8b610e4c565b604052919050565b600082601f830112610ea457600080fd5b6040516040810181811067ffffffffffffffff82111715610ec757610ec7610e4c565b8060405250806040840185811115610ede57600080fd5b845b81811015610ef8578035835260209283019201610ee0565b509195945050505050565b60008060008060008060e08789031215610f1c57600080fd5b8635610f2781610e34565b955060208781013595506040880135945060608801359350610f4c8960808a01610e93565b925060c088013567ffffffffffffffff80821115610f6957600080fd5b818a0191508a601f830112610f7d57600080fd5b813581811115610f8f57610f8f610e4c565b8060051b9150610fa0848301610e62565b818152918301840191848101908d841115610fba57600080fd5b938501935b83851015610fd857843582529385019390850190610fbf565b8096505050505050509295509295509295565b60008060408385031215610ffe57600080fd5b50508035926020909101359150565b6000806060838503121561102057600080fd5b823591506110318460208501610e93565b90509250929050565b60006020828403121561104c57600080fd5b813561105781610e34565b9392505050565b610140810181836000805b60058110156110af57825184835b6002811015611096578251825260209283019290910190600101611077565b5050506040939093019260209290920191600101611069565b5050505092915050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b634e487b7160e01b600052603260045260246000fd5b8060005b600281101561111f578151845260209384019390910190600101611100565b50505050565b600081518084526020808501945080840160005b8381101561115557815187529582019590820190600101611139565b509495945050505050565b600081518084526020808501945080840160005b83811015611155576111878783516110fc565b6040969096019590820190600101611174565b60c08152600086518060c084015260005b818110156111c8576020818a0181015160e08684010152016111ab565b818111156111da57600060e083860101525b5060208301879052601f01601f191682016111f860408401876110fc565b60e083820301608084015261121060e0820186611125565b905082810360a08401526112248185611160565b98975050505050505050565b60006020828403121561124257600080fd5b8151801515811461105757600080fd5b60008219821115611265576112656110b9565b500190565b60006020828403121561127c57600080fd5b5051919050565b60006020828403121561129557600080fd5b815160ff8116811461105757600080fd5b600181815b808511156112e15781600019048211156112c7576112c76110b9565b808516156112d457918102915b93841c93908002906112ab565b509250929050565b6000826112f857506001610950565b8161130557506000610950565b816001811461131b576002811461132557611341565b6001915050610950565b60ff841115611336576113366110b9565b50506001821b610950565b5060208310610133831016604e8410600b8410161715611364575081810a610950565b61136e83836112a6565b8060001904821115611382576113826110b9565b029392505050565b600061105783836112e9565b60008160001904831182151516156113b0576113b06110b9565b500290565b6000600182016113c7576113c76110b9565b5060010190565b8581526000602086818401526040868185015285606085015260808401856000805b600581101561142e57825184835b600281101561141b578251825291880191908801906001016113fe565b50505092840192918501916001016113f0565b5050505050506101c082019050969550505050505056fea26469706673582212202f65674890c2bfae2c5c5e7733c413b2a8d7500c796c687f931c5838daeb418b64736f6c634300080d0033",
  "bytecodeSha1": "d0c4ca7a7850b037a72e5842c92783d229335b83",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "HettiPool",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "5": {
        "HettiPool.amountCheck": {
          "59": [
            8430,
            8458,
            false
          ],
          "60": [
            8524,
            8531,
            false
          ],
          "61": [
            8726,
            8733,
            true
          ]
        },
        "HettiPool.deposit": {
          "53": [
            3445,
            3509,
            false
          ],
          "54": [
            3979,
            4017,
            false
          ],
          "55": [
            4037,
            4075,
            false
          ],
          "56": [
            4222,
            4239,
            false
          ],
          "57": [
            4716,
            4752,
            false
          ]
        },
        "HettiPool.initialize": {
          "58": [
            2673,
            2692,
            false
          ]
        },
        "HettiPool.withdraw": {
          "49": [
            5319,
            5356,
            false
          ],
          "50": [
            6024,
            6041,
            false
          ],
          "51": [
            6228,
            6263,
            false
          ],
          "52": [
            6283,
            6318,
            false
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "5": {
        "HettiPool.amountCheck": {
          "41": [
            8478,
            8492
          ],
          "42": [
            8551,
            8556
          ],
          "43": [
            8613,
            8616
          ],
          "44": [
            8718,
            8756
          ],
          "45": [
            8766,
            8780
          ]
        },
        "HettiPool.deposit": {
          "14": [
            3368,
            3429
          ],
          "15": [
            3525,
            3550
          ],
          "16": [
            4095,
            4123
          ],
          "17": [
            4180,
            4183
          ],
          "18": [
            4255,
            4282
          ],
          "19": [
            4303,
            4345
          ],
          "20": [
            4355,
            4398
          ],
          "21": [
            4432,
            4446
          ],
          "22": [
            4551,
            4610
          ],
          "23": [
            4620,
            4652
          ],
          "24": [
            4768,
            4824
          ],
          "25": [
            4884,
            4921
          ]
        },
        "HettiPool.getCurrentRingIndex": {
          "26": [
            10204,
            10228
          ],
          "27": [
            10238,
            10269
          ]
        },
        "HettiPool.getParticipant": {
          "1": [
            9931,
            9963
          ]
        },
        "HettiPool.getPoolBalance": {
          "29": [
            7919,
            7963
          ]
        },
        "HettiPool.getPublicKeys": {
          "36": [
            8936,
            8960
          ],
          "37": [
            9094,
            9164
          ],
          "38": [
            9178,
            9248
          ],
          "39": [
            9075,
            9078
          ],
          "40": [
            9269,
            9286
          ]
        },
        "HettiPool.getRingHash": {
          "28": [
            7792,
            7840
          ]
        },
        "HettiPool.getRingPackedData": {
          "30": [
            9464,
            9606
          ]
        },
        "HettiPool.getWParticipant": {
          "0": [
            9703,
            9771
          ]
        },
        "HettiPool.hashRing": {
          "46": [
            7183,
            7217
          ],
          "47": [
            7260,
            7263
          ],
          "48": [
            7586,
            7605
          ]
        },
        "HettiPool.initialize": {
          "31": [
            2669,
            2721
          ],
          "32": [
            2731,
            2745
          ],
          "33": [
            2755,
            2795
          ],
          "34": [
            2868,
            2920
          ],
          "35": [
            2963,
            2966
          ]
        },
        "HettiPool.withdraw": {
          "2": [
            5372,
            5401
          ],
          "3": [
            5472,
            5497
          ],
          "4": [
            5661,
            5695
          ],
          "5": [
            5737,
            5740
          ],
          "6": [
            6057,
            6084
          ],
          "7": [
            6338,
            6362
          ],
          "8": [
            6419,
            6422
          ],
          "9": [
            6461,
            6501
          ],
          "10": [
            6535,
            6550
          ],
          "11": [
            6655,
            6714
          ],
          "12": [
            6724,
            6756
          ],
          "13": [
            6769,
            6814
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "AltBn128",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "LSAG"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c80639edb6cbd11610097578063bf12505b11610066578063bf12505b14610223578063c4d66de814610236578063d5fce73514610249578063fc0c546a1461026957600080fd5b80639edb6cbd146101eb5780639f1961e6146101ff578063abd70aa214610212578063b69ef8a81461021a57600080fd5b806371d8ded9116100d357806371d8ded91461019e5780637c0ffaa2146101b15780637f5bf51c146101b85780639325019d146101cb57600080fd5b80631b9db2ef146101055780633b97e8561461012b57806362230498146101345780636381d19e14610149575b600080fd5b610118610113366004610e1b565b610294565b6040519081526020015b60405180910390f35b61011860015481565b610147610142366004610f03565b6102b0565b005b610183610157366004610feb565b600e60209081526000928352604080842090915290825290208054600182015460049092015490919083565b60408051938452602084019290925290820152606001610122565b6101476101ac36600461100d565b610646565b6005610118565b6101186101c6366004610e1b565b610904565b6101186101d9366004610e1b565b600d6020526000908152604090205481565b6101186101f9366004610e1b565b60301c90565b61011861020d366004610feb565b610923565b610118610956565b61011860025481565b610183610231366004610e1b565b6109c8565b61014761024436600461103a565b610a06565b61025c610257366004610feb565b610b02565b604051610122919061105e565b60005461027c906001600160a01b031681565b6040516001600160a01b039091168152602001610122565b6000602082901c6102a96001620100006110cf565b1692915050565b6000858152600e6020908152604080832087845290915281206001810154909190819081906102de906109c8565b9250925092506005831061032f5760405162461bcd60e51b815260206004820152601360248201527220a6262fa32aa72229afaba4aa24222920aba760691b60448201526064015b60405180910390fd5b60048401546103725760405162461bcd60e51b815260206004820152600f60248201526e14925391d7d393d517d0d313d4d151608a1b6044820152606401610326565b60408051600580825260c08201909252600091816020015b610392610d50565b81526020019060019003908161038a57905050905060005b600581101561041357600081815260028781016020526040918290208251808401938490529290919082845b8154815260200190600101908083116103d6575050505050828281518110610400576104006110e6565b60209081029190910101526001016103aa565b50600073__$59a6a99b146727e155adc36af30d91d8cc$__63fe46a2b2876004015460405160200161044791815260200190565b6040516020818303038152906040528b8b8b876040518663ffffffff1660e01b815260040161047a95949392919061119a565b602060405180830381865af4158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb9190611230565b9050806104fe5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b6044820152606401610326565b60005b85811015610587578851600082815260038901602052604090205414801561054157506020808a0151600083815260038a01909252604090912060010154145b1561057f5760405162461bcd60e51b815260206004820152600e60248201526d555345445f5349474e415455524560901b6044820152606401610326565b600101610501565b50600085815260038701602052604090206105a490896002610d6e565b506001948501601081901b851760201b841795870186905560005460405163a9059cbb60e01b81526001600160a01b038f81166004830152602482018f90529297929091169063a9059cbb906044016020604051808303816000875af1158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190611230565b5050505050505050505050505050565b600061065183610bc9565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611230565b5081516020830151604051630cd3b28960e31b81526004810192909252602482015273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063669d944890604401602060405180830381865af415801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190611230565b61078d5760405162461bcd60e51b815260206004820152600f60248201526e504b5f4e4f545f4f4e5f435552564560881b6044820152606401610326565b6000818152600d6020908152604080832054600e83528184208185529092528220600181015491929091819081906107c4906109c8565b92509250925060005b82811015610857578751600082815260028701602052604090205414801561080d5750602080890151600083815260028801909252604090912060010154145b1561084f5760405162461bcd60e51b8152602060048201526012602482015271504b5f414c52454144595f494e5f52494e4760701b6044820152606401610326565b6001016107cd565b508160000361086e5761086b6001436110cf565b90505b60008281526002808601602052604090912061088b918990610d6e565b50858460000160008282546108a09190611252565b90915550506001918201601084901b811760201b821792850183905591600583106108f9576108cf8787610c4e565b60048601556000878152600d602052604081208054600192906108f3908490611252565b90915550505b505050505050505050565b600061090f82610bc9565b50506000908152600d602052604090205490565b60008061092f84610bc9565b6000908152600e602090815260408083208684529091529020600401549150505b92915050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c3919061126a565b905090565b60008080602084901c603085901c6109e46001620100006110cf565b82166109f660016401000000006110cf565b8716935093509350509193909250565b6000546001600160a01b031615610a2f5760405162dc149f60e41b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015610a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac9190611283565b60ff1660015560005b600a811015610afe57600154610acc90600a61138a565b610ad782600261138a565b610ae19190611396565b600382600a8110610af457610af46110e6565b0155600101610ab5565b5050565b610b0a610dac565b610b1383610bc9565b50610b1c610dac565b60005b6005811015610bc1576000858152600e602090815260408083208784528252808320848452600201909152902054828260058110610b5f57610b5f6110e6565b60209081029190910151919091526000868152600e8252604080822087835283528082208483526002019092522060010154828260058110610ba357610ba36110e6565b60200201516001602002015280610bb9816113b5565b915050610b1f565b509392505050565b600080805b600a811015610c045783600382600a8110610beb57610beb6110e6565b015403610bf757600191505b81610c0457600101610bce565b5080610c475760405162461bcd60e51b8152602060048201526012602482015271105353d5539517d393d517d0531313d5d15160721b6044820152606401610326565b5090919050565b6000610c58610dd9565b6000610c6385610bc9565b6000818152600e6020908152604080832088845290915281209192505b60058160ff161015610ced5760ff8116600090815260028381016020526040918290208251808401938490529290919082845b815481526020019060010190808311610cb3575050505050848260ff1660058110610ce057610ce06110e6565b6020020152600101610c80565b50600080610cfe83600101546109c8565b92505091506000600143610d1291906110cf565b8454604051610d2b924091859187908b906020016113ce565b60408051808303601f1901815291905280516020909101209998505050505050505050565b60405180604001604052806002906020820280368337509192915050565b8260028101928215610d9c579160200282015b82811115610d9c578251825591602001919060010190610d81565b50610da8929150610e06565b5090565b6040518060a001604052806005905b610dc3610d50565b815260200190600190039081610dbb5790505090565b6040518060a001604052806005905b610df0610d50565b815260200190600190039081610de85790505090565b5b80821115610da85760008155600101610e07565b600060208284031215610e2d57600080fd5b5035919050565b6001600160a01b0381168114610e4957600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e8b57610e8b610e4c565b604052919050565b600082601f830112610ea457600080fd5b6040516040810181811067ffffffffffffffff82111715610ec757610ec7610e4c565b8060405250806040840185811115610ede57600080fd5b845b81811015610ef8578035835260209283019201610ee0565b509195945050505050565b60008060008060008060e08789031215610f1c57600080fd5b8635610f2781610e34565b955060208781013595506040880135945060608801359350610f4c8960808a01610e93565b925060c088013567ffffffffffffffff80821115610f6957600080fd5b818a0191508a601f830112610f7d57600080fd5b813581811115610f8f57610f8f610e4c565b8060051b9150610fa0848301610e62565b818152918301840191848101908d841115610fba57600080fd5b938501935b83851015610fd857843582529385019390850190610fbf565b8096505050505050509295509295509295565b60008060408385031215610ffe57600080fd5b50508035926020909101359150565b6000806060838503121561102057600080fd5b823591506110318460208501610e93565b90509250929050565b60006020828403121561104c57600080fd5b813561105781610e34565b9392505050565b610140810181836000805b60058110156110af57825184835b6002811015611096578251825260209283019290910190600101611077565b5050506040939093019260209290920191600101611069565b5050505092915050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b634e487b7160e01b600052603260045260246000fd5b8060005b600281101561111f578151845260209384019390910190600101611100565b50505050565b600081518084526020808501945080840160005b8381101561115557815187529582019590820190600101611139565b509495945050505050565b600081518084526020808501945080840160005b83811015611155576111878783516110fc565b6040969096019590820190600101611174565b60c08152600086518060c084015260005b818110156111c8576020818a0181015160e08684010152016111ab565b818111156111da57600060e083860101525b5060208301879052601f01601f191682016111f860408401876110fc565b60e083820301608084015261121060e0820186611125565b905082810360a08401526112248185611160565b98975050505050505050565b60006020828403121561124257600080fd5b8151801515811461105757600080fd5b60008219821115611265576112656110b9565b500190565b60006020828403121561127c57600080fd5b5051919050565b60006020828403121561129557600080fd5b815160ff8116811461105757600080fd5b600181815b808511156112e15781600019048211156112c7576112c76110b9565b808516156112d457918102915b93841c93908002906112ab565b509250929050565b6000826112f857506001610950565b8161130557506000610950565b816001811461131b576002811461132557611341565b6001915050610950565b60ff841115611336576113366110b9565b50506001821b610950565b5060208310610133831016604e8410600b8410161715611364575081810a610950565b61136e83836112a6565b8060001904821115611382576113826110b9565b029392505050565b600061105783836112e9565b60008160001904831182151516156113b0576113b06110b9565b500290565b6000600182016113c7576113c76110b9565b5060010190565b8581526000602086818401526040868185015285606085015260808401856000805b600581101561142e57825184835b600281101561141b578251825291880191908801906001016113fe565b50505092840192918501916001016113f0565b5050505050506101c082019050969550505050505056fea26469706673582212202f65674890c2bfae2c5c5e7733c413b2a8d7500c796c687f931c5838daeb418b64736f6c634300080d0033",
  "deployedSourceMap": "180:10098:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9784:186;;;;;;:::i;:::-;;:::i;:::-;;;345:25:9;;;333:2;318:18;9784:186:5;;;;;;;;2213:28;;;;;;4944:1877;;;;;;:::i;:::-;;:::i;:::-;;2434:58;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3464:25:9;;;3520:2;3505:18;;3498:34;;;;3548:18;;;3541:34;3452:2;3437:18;2434:58:5;3262:319:9;3178:1760:5;;;;;;:::i;:::-;;:::i;9976:120::-;720:1;9976:120;;10102:174;;;;;;:::i;:::-;;:::i;2341:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;9619:159;;;;;;:::i;:::-;9710:61;;;9619:159;7618:229;;;;;;:::i;:::-;;:::i;7853:117::-;;;:::i;2247:22::-;;;;;;9299:314;;;;;;:::i;:::-;;:::i;2616:381::-;;;;;;:::i;:::-;;:::i;8793:500::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2187:20::-;;;;;-1:-1:-1;;;;;2187:20:5;;;;;;-1:-1:-1;;;;;5719:32:9;;;5701:51;;5689:2;5674:18;2187:20:5;5555:203:9;9784:186:5;9849:7;1284:2;9879:33;;;1406:32;1437:1;1407:27;1406:32;:::i;:::-;9938:25;;9784:186;-1:-1:-1;;9784:186:5:o;4944:1877::-;5132:17;5152:18;;;:5;:18;;;;;;;;:29;;;;;;;;5275:19;;;;5152:29;;5132:17;;;;;5257:38;;:17;:38::i;:::-;5192:103;;;;;;720:1;5319:13;:37;5315:97;;5372:29;;-1:-1:-1;;;5372:29:5;;6227:2:9;5372:29:5;;;6209:21:9;6266:2;6246:18;;;6239:30;-1:-1:-1;;;6285:18:9;;;6278:49;6344:18;;5372:29:5;;;;;;;;5315:97;5426:13;;;;5422:86;;5472:25;;-1:-1:-1;;;5472:25:5;;6575:2:9;5472:25:5;;;6557:21:9;6614:2;6594:18;;;6587:30;-1:-1:-1;;;6633:18:9;;;6626:45;6688:18;;5472:25:5;6373:339:9;5422:86:5;5551:38;;;720:1;5551:38;;;;;;;;;5518:30;;5551:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5518:71;;5605:9;5600:165;720:1;5620;:24;5600:165;;;5677:18;;;;:15;;;;:18;;;;;;;5661:34;;;;;;;;;;5677:18;;:15;:18;5661:34;;;;;;;;;;;;;;;;;;;;;;:10;5672:1;5661:13;;;;;;;;:::i;:::-;;;;;;;;;;:34;5737:3;;5600:165;;;;5820:22;5845:4;:11;5887:4;:13;;;5870:31;;;;;;6978:19:9;;7022:2;7013:12;;6849:182;5870:31:5;;;;;;;;;;;;;5935:2;5951:8;5973:1;5988:10;5845:163;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5820:188;;6024:17;6019:76;;6057:27;;-1:-1:-1;;;6057:27:5;;10021:2:9;6057:27:5;;;10003:21:9;10060:2;10040:18;;;10033:30;-1:-1:-1;;;10079:18:9;;;10072:47;10136:18;;6057:27:5;9819:341:9;6019:76:5;6178:6;6173:274;6194:13;6190:1;:17;6173:274;;;6252:11;;6261:1;6228:17;;;:14;;;6252:11;6228:17;;;;:20;:35;:90;;;;-1:-1:-1;6307:11:5;;;;;6283:17;;;;:14;;;:17;;;;;;;6316:1;6283:20;;:35;6228:90;6224:153;;;6338:24;;-1:-1:-1;;;6338:24:5;;10367:2:9;6338:24:5;;;10349:21:9;10406:2;10386:18;;;10379:30;-1:-1:-1;;;10425:18:9;;;10418:44;10479:18;;6338:24:5;10165:338:9;6224:153:5;6419:3;;6173:274;;;-1:-1:-1;6461:29:5;;;;:14;;;:29;;;;;:40;;6493:8;6461:40;;:::i;:::-;-1:-1:-1;6535:15:5;;;;1237:2;6590:39;;;6589:56;;1284:2;6669:33;6668:46;;6724:19;;;:32;;;6571:15;6775:5;6769:45;;-1:-1:-1;;;6769:45:5;;-1:-1:-1;;;;;10708:32:9;;;6769:45:5;;;10690:51:9;10757:18;;;10750:34;;;6535:15:5;;6668:46;6775:5;;;;6769:21;;10663:18:9;;6769:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5122:1699;;;;;;;4944:1877;;;;;;:::o;3178:1760::-;3307:27;3337:20;3349:7;3337:11;:20::i;:::-;3374:5;;3368:61;;-1:-1:-1;;;3368:61:5;;3394:10;3368:61;;;11035:34:9;3414:4:5;11085:18:9;;;11078:43;11137:18;;;11130:34;;;3307:50:5;;-1:-1:-1;;;;;;3374:5:5;;3368:25;;10970:18:9;;3368:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3470:13:5;;;3494;;;3445:64;;-1:-1:-1;;;3445:64:5;;;;;11357:25:9;;;;11398:18;;;11391:34;3445:8:5;;:16;;11330:18:9;;3445:64:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3440:121;;3525:25;;-1:-1:-1;;;3525:25:5;;11638:2:9;3525:25:5;;;11620:21:9;11677:2;11657:18;;;11650:30;-1:-1:-1;;;11696:18:9;;;11689:45;11751:18;;3525:25:5;11436:339:9;3440:121:5;3620:17;3640:32;;;:11;:32;;;;;;;;;3702:5;:26;;;;;:37;;;;;;;;3833:19;;;;3640:32;;3702:37;;3620:17;;;;3815:38;;:17;:38::i;:::-;3750:103;;;;;;3927:9;3922:286;3946:12;3942:1;:16;3922:286;;;4004:13;;4015:1;3979:18;;;:15;;;4004:13;3979:18;;;;:21;:38;:96;;;;-1:-1:-1;4062:13:5;;;;;4037:18;;;;:15;;;:18;;;;;;;4073:1;4037:21;;:38;3979:96;3975:163;;;4095:28;;-1:-1:-1;;;4095:28:5;;11982:2:9;4095:28:5;;;11964:21:9;12021:2;12001:18;;;11994:30;-1:-1:-1;;;12040:18:9;;;12033:48;12098:18;;4095:28:5;11780:342:9;3975:163:5;4180:3;;3922:286;;;;4222:12;4238:1;4222:17;4218:75;;4266:16;4281:1;4266:12;:16;:::i;:::-;4255:27;;4218:75;4303:29;;;;:15;;;;:29;;;;;;:42;;4335:10;;4303:42;:::i;:::-;;4379:19;4355:4;:20;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;4432:14:5;;;;1237:2;4486:39;;;4485:56;;1284:2;4565:33;4564:46;;4620:19;;;:32;;;4432:14;720:1;4716:36;;4712:220;;4784:40;4793:19;4814:9;4784:8;:40::i;:::-;4768:13;;;:56;4884:32;;;;:11;:32;;;;;:37;;4920:1;;4884:32;:37;;4920:1;;4884:37;:::i;:::-;;;;-1:-1:-1;;4712:220:5;3246:1692;;;;;;;3178:1760;;:::o;10102:174::-;10181:7;10204:24;10216:11;10204;:24::i;:::-;-1:-1:-1;;10245:24:5;;;;:11;:24;;;;;;;10102:174::o;7618:229::-;7710:7;7733:21;7757:25;7769:12;7757:11;:25::i;:::-;7799:20;;;;:5;:20;;;;;;;;:32;;;;;;;;:41;;;;-1:-1:-1;;7618:229:5;;;;;:::o;7853:117::-;7900:7;7932:5;;7926:37;;-1:-1:-1;;;7926:37:5;;7957:4;7926:37;;;5701:51:9;-1:-1:-1;;;;;7932:5:5;;;;7926:22;;5674:18:9;;7926:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7919:44;;7853:117;:::o;9299:314::-;9364:7;;;1284:2;9412:33;;;9485:27;;;;1406:32;1437:1;1407:27;1406:32;:::i;:::-;9526:25;;1330:29;1358:1;1331:24;1330:29;:::i;:::-;9565:10;:31;9464:142;;;;;;;9299:314;;;;;:::o;2616:381::-;2690:1;2673:5;-1:-1:-1;;;;;2673:5:5;:19;2669:52;;2701:20;;-1:-1:-1;;;2701:20:5;;;;;;;;;;;2669:52;2731:5;:14;;-1:-1:-1;;;;;;2731:14:5;-1:-1:-1;;;;;2731:14:5;;;;;;;;2771:24;;;-1:-1:-1;;;2771:24:5;;;;:22;;:24;;;;;;;;;;;;;;;2731:14;2771:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2755:40;;:13;:40;2810:9;2806:185;2829:21;2825:1;:25;2806:185;;;2906:13;;2900:19;;:2;:19;:::i;:::-;2889:6;2894:1;2889;:6;:::i;:::-;2888:32;;;;:::i;:::-;2868:14;2883:1;2868:17;;;;;;;:::i;:::-;;:52;2963:3;;2806:185;;;;2616:381;:::o;8793:500::-;8881:39;;:::i;:::-;8936:24;8948:11;8936;:24::i;:::-;;8971:50;;:::i;:::-;9037:6;9032:227;720:1;9049;:24;9032:227;;;9121:18;;;;:5;:18;;;;;;;;:25;;;;;;;;:39;;;:36;;:39;;;;;:42;9094:10;9121:39;9094:13;;;;;;;:::i;:::-;;;;;;;;;;:70;;;;9108:1;9205:18;;;:5;:18;;;;;;:25;;;;;;;;:39;;;:36;;:39;;;;9245:1;9205:42;;9178:10;9205:39;9178:13;;;;;;;:::i;:::-;;;;;9192:1;9178:16;;;:70;9075:3;;;;:::i;:::-;;;;9032:227;;;-1:-1:-1;9276:10:5;8793:500;-1:-1:-1;;;8793:500:5:o;8260:527::-;8329:7;;;8383:258;8407:2;8403:1;:6;8383:258;;;8451:7;8430:14;8445:1;8430:17;;;;;;;:::i;:::-;;;:28;8426:81;;8488:4;8478:14;;8426:81;8524:7;8551:5;8520:51;8613:3;;8383:258;;;;8726:7;8718:38;;;;-1:-1:-1;;;8718:38:5;;14616:2:9;8718:38:5;;;14598:21:9;14655:2;14635:18;;;14628:30;-1:-1:-1;;;14674:18:9;;;14667:48;14732:18;;8718:38:5;14414:342:9;8718:38:5;-1:-1:-1;8773:7:5;;8260:527;-1:-1:-1;8260:527:5:o;6827:785::-;6918:7;6941:50;;:::i;:::-;7001:21;7025:25;7037:12;7025:11;:25::i;:::-;7061:17;7081:20;;;:5;:20;;;;;;;;:32;;;;;;;;7001:49;;-1:-1:-1;7124:164:5;720:1;7142;:24;;;7124:164;;;7199:18;;;;;;;:15;;;;:18;;;;;;;7183:34;;;;;;;;;;7199:18;;:15;:18;7183:34;;;;;;;;;;;;;;;;;;;;;;:10;7194:1;7183:13;;;;;;;;;:::i;:::-;;;;:34;7260:3;;7124:164;;;;7299:17;7319:13;7336:38;7354:4;:19;;;7336:17;:38::i;:::-;7298:76;;;;;7385:14;7457:1;7442:12;:16;;;;:::i;:::-;7495:20;;7402:173;;;;7432:27;;7473:8;;7529:12;;7555:10;;7402:173;;;:::i;:::-;;;;;;;-1:-1:-1;;7402:173:5;;;;;;7593:12;;7402:173;7593:12;;;;;6827:785;-1:-1:-1;;;;;;;;;6827:785:5:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:180:9;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;381:139::-;-1:-1:-1;;;;;464:31:9;;454:42;;444:70;;510:1;507;500:12;444:70;381:139;:::o;525:127::-;586:10;581:3;577:20;574:1;567:31;617:4;614:1;607:15;641:4;638:1;631:15;657:275;728:2;722:9;793:2;774:13;;-1:-1:-1;;770:27:9;758:40;;828:18;813:34;;849:22;;;810:62;807:88;;;875:18;;:::i;:::-;911:2;904:22;657:275;;-1:-1:-1;657:275:9:o;937:646::-;987:5;1040:3;1033:4;1025:6;1021:17;1017:27;1007:55;;1058:1;1055;1048:12;1007:55;1091:2;1085:9;1133:2;1125:6;1121:15;1202:6;1190:10;1187:22;1166:18;1154:10;1151:34;1148:62;1145:88;;;1213:18;;:::i;:::-;1253:10;1249:2;1242:22;;1284:6;1325:2;1317:6;1313:15;1351:3;1343:6;1340:15;1337:35;;;1368:1;1365;1358:12;1337:35;1392:6;1407:146;1423:6;1418:3;1415:15;1407:146;;;1491:17;;1479:30;;1538:4;1529:14;;;;1440;1407:146;;;-1:-1:-1;1571:6:9;;937:646;-1:-1:-1;;;;;937:646:9:o;1588:1416::-;1748:6;1756;1764;1772;1780;1788;1841:3;1829:9;1820:7;1816:23;1812:33;1809:53;;;1858:1;1855;1848:12;1809:53;1897:9;1884:23;1916:39;1949:5;1916:39;:::i;:::-;1974:5;-1:-1:-1;1998:2:9;2032:18;;;2019:32;;-1:-1:-1;2098:2:9;2083:18;;2070:32;;-1:-1:-1;2149:2:9;2134:18;;2121:32;;-1:-1:-1;2172:54:9;2218:7;2212:3;2197:19;;2172:54;:::i;:::-;2162:64;;2277:3;2266:9;2262:19;2249:33;2301:18;2342:2;2334:6;2331:14;2328:34;;;2358:1;2355;2348:12;2328:34;2396:6;2385:9;2381:22;2371:32;;2441:7;2434:4;2430:2;2426:13;2422:27;2412:55;;2463:1;2460;2453:12;2412:55;2499:2;2486:16;2521:2;2517;2514:10;2511:36;;;2527:18;;:::i;:::-;2573:2;2570:1;2566:10;2556:20;;2596:28;2620:2;2616;2612:11;2596:28;:::i;:::-;2658:15;;;2728:11;;;2724:20;;;2689:12;;;;2756:19;;;2753:39;;;2788:1;2785;2778:12;2753:39;2812:11;;;;2832:142;2848:6;2843:3;2840:15;2832:142;;;2914:17;;2902:30;;2865:12;;;;2952;;;;2832:142;;;2993:5;2983:15;;;;;;;;1588:1416;;;;;;;;:::o;3009:248::-;3077:6;3085;3138:2;3126:9;3117:7;3113:23;3109:32;3106:52;;;3154:1;3151;3144:12;3106:52;-1:-1:-1;;3177:23:9;;;3247:2;3232:18;;;3219:32;;-1:-1:-1;3009:248:9:o;3586:292::-;3677:6;3685;3738:2;3726:9;3717:7;3713:23;3709:32;3706:52;;;3754:1;3751;3744:12;3706:52;3790:9;3777:23;3767:33;;3819:53;3864:7;3859:2;3848:9;3844:18;3819:53;:::i;:::-;3809:63;;3586:292;;;;;:::o;4389:255::-;4448:6;4501:2;4489:9;4480:7;4476:23;4472:32;4469:52;;;4517:1;4514;4507:12;4469:52;4556:9;4543:23;4575:39;4608:5;4575:39;:::i;:::-;4633:5;4389:255;-1:-1:-1;;;4389:255:9:o;4649:901::-;4875:3;4860:19;;4864:9;4956:6;4833:4;;5011:533;5027:4;5022:3;5019:13;5011:533;;;5088:13;;5127:3;5210:1;5224:236;5240:4;5235:3;5232:13;5224:236;;;5313:15;;5299:30;;5356:4;5429:17;;;;5386:14;;;;5264:1;5255:11;5224:236;;;-1:-1:-1;;;5489:4:9;5480:14;;;;;5529:4;5517:17;;;;;5051:1;5042:11;5011:533;;;5015:3;;;;4649:901;;;;:::o;5763:127::-;5824:10;5819:3;5815:20;5812:1;5805:31;5855:4;5852:1;5845:15;5879:4;5876:1;5869:15;5895:125;5935:4;5963:1;5960;5957:8;5954:34;;;5968:18;;:::i;:::-;-1:-1:-1;6005:9:9;;5895:125::o;6717:127::-;6778:10;6773:3;6769:20;6766:1;6759:31;6809:4;6806:1;6799:15;6833:4;6830:1;6823:15;7036:326;7129:5;7152:1;7162:194;7176:4;7173:1;7170:11;7162:194;;;7235:13;;7223:26;;7272:4;7296:12;;;;7331:15;;;;7196:1;7189:9;7162:194;;;7166:3;;7036:326;;:::o;7367:435::-;7420:3;7458:5;7452:12;7485:6;7480:3;7473:19;7511:4;7540:2;7535:3;7531:12;7524:19;;7577:2;7570:5;7566:14;7598:1;7608:169;7622:6;7619:1;7616:13;7608:169;;;7683:13;;7671:26;;7717:12;;;;7752:15;;;;7644:1;7637:9;7608:169;;;-1:-1:-1;7793:3:9;;7367:435;-1:-1:-1;;;;;7367:435:9:o;7807:461::-;7866:3;7904:5;7898:12;7931:6;7926:3;7919:19;7957:4;7986:2;7981:3;7977:12;7970:19;;8023:2;8016:5;8012:14;8044:1;8054:189;8068:6;8065:1;8062:13;8054:189;;;8117:44;8157:3;8148:6;8142:13;8117:44;:::i;:::-;8190:4;8181:14;;;;;8218:15;;;;8090:1;8083:9;8054:189;;8273:1259;8732:3;8721:9;8714:22;8695:4;8765:6;8759:13;8809:6;8803:3;8792:9;8788:19;8781:35;8834:1;8844:145;8858:6;8855:1;8852:13;8844:145;;;8972:4;8956:14;;;8952:25;;8946:32;8940:3;8921:17;;;8917:27;8910:69;8873:12;8844:145;;;9007:6;9004:1;9001:13;8998:92;;;9078:1;9072:3;9063:6;9052:9;9048:22;9044:32;9037:43;8998:92;-1:-1:-1;9185:4:9;9170:20;;9163:36;;;9149:2;9128:15;-1:-1:-1;;9124:29:9;9109:45;;9208:52;9256:2;9241:18;;9233:6;9208:52;:::i;:::-;9321:3;9309:9;9305:2;9301:18;9297:28;9291:3;9280:9;9276:19;9269:57;9349:50;9394:3;9390:2;9386:12;9378:6;9349:50;:::i;:::-;9335:64;;9448:9;9440:6;9436:22;9430:3;9419:9;9415:19;9408:51;9476:50;9519:6;9511;9476:50;:::i;:::-;9468:58;8273:1259;-1:-1:-1;;;;;;;;8273:1259:9:o;9537:277::-;9604:6;9657:2;9645:9;9636:7;9632:23;9628:32;9625:52;;;9673:1;9670;9663:12;9625:52;9705:9;9699:16;9758:5;9751:13;9744:21;9737:5;9734:32;9724:60;;9780:1;9777;9770:12;12127:128;12167:3;12198:1;12194:6;12191:1;12188:13;12185:39;;;12204:18;;:::i;:::-;-1:-1:-1;12240:9:9;;12127:128::o;12260:184::-;12330:6;12383:2;12371:9;12362:7;12358:23;12354:32;12351:52;;;12399:1;12396;12389:12;12351:52;-1:-1:-1;12422:16:9;;12260:184;-1:-1:-1;12260:184:9:o;12449:273::-;12517:6;12570:2;12558:9;12549:7;12545:23;12541:32;12538:52;;;12586:1;12583;12576:12;12538:52;12618:9;12612:16;12668:4;12661:5;12657:16;12650:5;12647:27;12637:55;;12688:1;12685;12678:12;12727:422;12816:1;12859:5;12816:1;12873:270;12894:7;12884:8;12881:21;12873:270;;;12953:4;12949:1;12945:6;12941:17;12935:4;12932:27;12929:53;;;12962:18;;:::i;:::-;13012:7;13002:8;12998:22;12995:55;;;13032:16;;;;12995:55;13111:22;;;;13071:15;;;;12873:270;;;12877:3;12727:422;;;;;:::o;13154:806::-;13203:5;13233:8;13223:80;;-1:-1:-1;13274:1:9;13288:5;;13223:80;13322:4;13312:76;;-1:-1:-1;13359:1:9;13373:5;;13312:76;13404:4;13422:1;13417:59;;;;13490:1;13485:130;;;;13397:218;;13417:59;13447:1;13438:10;;13461:5;;;13485:130;13522:3;13512:8;13509:17;13506:43;;;13529:18;;:::i;:::-;-1:-1:-1;;13585:1:9;13571:16;;13600:5;;13397:218;;13699:2;13689:8;13686:16;13680:3;13674:4;13671:13;13667:36;13661:2;13651:8;13648:16;13643:2;13637:4;13634:12;13630:35;13627:77;13624:159;;;-1:-1:-1;13736:19:9;;;13768:5;;13624:159;13815:34;13840:8;13834:4;13815:34;:::i;:::-;13885:6;13881:1;13877:6;13873:19;13864:7;13861:32;13858:58;;;13896:18;;:::i;:::-;13934:20;;13154:806;-1:-1:-1;;;13154:806:9:o;13965:131::-;14025:5;14054:36;14081:8;14075:4;14054:36;:::i;14101:168::-;14141:7;14207:1;14203;14199:6;14195:14;14192:1;14189:21;14184:1;14177:9;14170:17;14166:45;14163:71;;;14214:18;;:::i;:::-;-1:-1:-1;14254:9:9;;14101:168::o;14274:135::-;14313:3;14334:17;;;14331:43;;14354:18;;:::i;:::-;-1:-1:-1;14401:1:9;14390:13;;14274:135::o;14761:1182::-;15106:6;15101:3;15094:19;15076:3;15132:2;15164:6;15159:2;15154:3;15150:12;15143:28;15190:2;15222:6;15217:2;15212:3;15208:12;15201:28;15259:6;15254:2;15249:3;15245:12;15238:28;15297:3;15292;15288:13;15347:6;15371:1;15392;15402:506;15418:4;15413:3;15410:13;15402:506;;;15479:13;;15518:5;15605:1;15619:205;15635:4;15630:3;15627:13;15619:205;;;15708:15;;15694:30;;15793:17;;;;15750:14;;;;15659:1;15650:11;15619:205;;;-1:-1:-1;;;15846:14:9;;;;15883:15;;;;15442:1;15433:11;15402:506;;;15406:3;;;;;;15933;15928;15924:13;15917:20;;14761:1182;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256[2])": {
        "notice": "Deposit `amount` of `token` into the vault",
        "params": {
          "_amount": "The amount of `token` to deposit",
          "_publicKey": "The public key of the participant"
        }
      },
      "initialize(address)": {
        "notice": "Initialize the vault to use and accept `token`",
        "params": {
          "_token": "The address of the token to use"
        }
      }
    },
    "version": 1
  },
  "offset": [
    180,
    10278
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EDB6CBD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBF12505B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBF12505B EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xD5FCE735 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EDB6CBD EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x9F1961E6 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xABD70AA2 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71D8DED9 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x71D8DED9 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x7C0FFAA2 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x7F5BF51C EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9325019D EQ PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B9DB2EF EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3B97E856 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x62230498 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x6381D19E EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x118 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x103A JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x27C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x2A9 PUSH1 0x1 PUSH3 0x10000 PUSH2 0x10CF JUMP JUMPDEST AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x2DE SWAP1 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x5 DUP4 LT PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x20A6262FA32AA72229AFABA4AA24222920ABA7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14925391D7D393D517D0D313D4D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP1 DUP3 MSTORE PUSH1 0xC0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x392 PUSH2 0xD50 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x38A JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3D6 JUMPI POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x400 JUMPI PUSH2 0x400 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3AA JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xFE46A2B2 DUP8 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x447 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP12 DUP12 DUP12 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x497 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x494E56414C49445F5349474E4154555245 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x587 JUMPI DUP9 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x541 JUMPI POP PUSH1 0x20 DUP1 DUP11 ADD MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 DUP11 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x555345445F5349474E4154555245 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x501 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x5A4 SWAP1 DUP10 PUSH1 0x2 PUSH2 0xD6E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 DUP6 ADD PUSH1 0x10 DUP2 SWAP1 SHL DUP6 OR PUSH1 0x20 SHL DUP5 OR SWAP6 DUP8 ADD DUP7 SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP16 SWAP1 MSTORE SWAP3 SWAP8 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x612 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 DUP4 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xCD3B289 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x669D9448 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x72B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x504B5F4E4F545F4F4E5F4355525645 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x7C4 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x857 JUMPI DUP8 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x80D JUMPI POP PUSH1 0x20 DUP1 DUP10 ADD MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 DUP9 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x504B5F414C52454144595F494E5F52494E47 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7CD JUMP JUMPDEST POP DUP2 PUSH1 0x0 SUB PUSH2 0x86E JUMPI PUSH2 0x86B PUSH1 0x1 NUMBER PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x88B SWAP2 DUP10 SWAP1 PUSH2 0xD6E JUMP JUMPDEST POP DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x10 DUP5 SWAP1 SHL DUP2 OR PUSH1 0x20 SHL DUP3 OR SWAP3 DUP6 ADD DUP4 SWAP1 SSTORE SWAP2 PUSH1 0x5 DUP4 LT PUSH2 0x8F9 JUMPI PUSH2 0x8CF DUP8 DUP8 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8F3 SWAP1 DUP5 SWAP1 PUSH2 0x1252 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92F DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x20 DUP5 SWAP1 SHR PUSH1 0x30 DUP6 SWAP1 SHR PUSH2 0x9E4 PUSH1 0x1 PUSH3 0x10000 PUSH2 0x10CF JUMP JUMPDEST DUP3 AND PUSH2 0x9F6 PUSH1 0x1 PUSH5 0x100000000 PUSH2 0x10CF JUMP JUMPDEST DUP8 AND SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0xDC149F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xAFE JUMPI PUSH1 0x1 SLOAD PUSH2 0xACC SWAP1 PUSH1 0xA PUSH2 0x138A JUMP JUMPDEST PUSH2 0xAD7 DUP3 PUSH1 0x2 PUSH2 0x138A JUMP JUMPDEST PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0xA DUP2 LT PUSH2 0xAF4 JUMPI PUSH2 0xAF4 PUSH2 0x10E6 JUMP JUMPDEST ADD SSTORE PUSH1 0x1 ADD PUSH2 0xAB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB0A PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xB13 DUP4 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH2 0xB1C PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x2 ADD SWAP1 SWAP3 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x20 MUL ADD MSTORE DUP1 PUSH2 0xBB9 DUP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB1F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xC04 JUMPI DUP4 PUSH1 0x3 DUP3 PUSH1 0xA DUP2 LT PUSH2 0xBEB JUMPI PUSH2 0xBEB PUSH2 0x10E6 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0xBF7 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP2 PUSH2 0xC04 JUMPI PUSH1 0x1 ADD PUSH2 0xBCE JUMP JUMPDEST POP DUP1 PUSH2 0xC47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105353D5539517D393D517D0531313D5D151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x326 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC58 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC63 DUP6 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xCED JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xCB3 JUMPI POP POP POP POP POP DUP5 DUP3 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 ADD PUSH2 0xC80 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0xCFE DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x9C8 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD PUSH2 0xD2B SWAP3 BLOCKHASH SWAP2 DUP6 SWAP2 DUP8 SWAP1 DUP12 SWAP1 PUSH1 0x20 ADD PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD9C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD9C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD81 JUMP JUMPDEST POP PUSH2 0xDA8 SWAP3 SWAP2 POP PUSH2 0xE06 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 JUMPDEST PUSH2 0xDC3 PUSH2 0xD50 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDBB JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 JUMPDEST PUSH2 0xDF0 PUSH2 0xD50 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDE8 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xDA8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE8B JUMPI PUSH2 0xE8B PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC7 PUSH2 0xE4C JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEF8 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xEE0 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xF27 DUP2 PUSH2 0xE34 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0xF4C DUP10 PUSH1 0x80 DUP11 ADD PUSH2 0xE93 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xE4C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xFA0 DUP5 DUP4 ADD PUSH2 0xE62 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP14 DUP5 GT ISZERO PUSH2 0xFBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xFD8 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xFBF JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1031 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xE93 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1057 DUP2 PUSH2 0xE34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x140 DUP2 ADD DUP2 DUP4 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x10AF JUMPI DUP3 MLOAD DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1096 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1077 JUMP JUMPDEST POP POP POP PUSH1 0x40 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1069 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x111F JUMPI DUP2 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1155 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1139 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1187 DUP8 DUP4 MLOAD PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1174 JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 DUP7 MLOAD DUP1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x20 DUP2 DUP11 ADD DUP2 ADD MLOAD PUSH1 0xE0 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x11AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x11DA JUMPI PUSH1 0x0 PUSH1 0xE0 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x11F8 PUSH1 0x40 DUP5 ADD DUP8 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1210 PUSH1 0xE0 DUP3 ADD DUP7 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1224 DUP2 DUP6 PUSH2 0x1160 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1265 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x12E1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C7 PUSH2 0x10B9 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x12D4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x12AB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12F8 JUMPI POP PUSH1 0x1 PUSH2 0x950 JUMP JUMPDEST DUP2 PUSH2 0x1305 JUMPI POP PUSH1 0x0 PUSH2 0x950 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x131B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1325 JUMPI PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x950 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1336 PUSH2 0x10B9 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x950 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1364 JUMPI POP DUP2 DUP2 EXP PUSH2 0x950 JUMP JUMPDEST PUSH2 0x136E DUP4 DUP4 PUSH2 0x12A6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1382 PUSH2 0x10B9 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1057 DUP4 DUP4 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13B0 JUMPI PUSH2 0x13B0 PUSH2 0x10B9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13C7 JUMPI PUSH2 0x13C7 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP7 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP7 DUP2 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP6 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x142E JUMPI DUP3 MLOAD DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x141B JUMPI DUP3 MLOAD DUP3 MSTORE SWAP2 DUP9 ADD SWAP2 SWAP1 DUP9 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13FE JUMP JUMPDEST POP POP POP SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13F0 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x1C0 DUP3 ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH6 0x674890C2BFAE 0x2C 0x5C 0x5E PUSH24 0x33C413B2A8D7500C796C687F931C5838DAEB418B64736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9EDB6CBD"
    },
    "38": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBF12505B"
    },
    "49": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBF12505B"
    },
    "60": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x223"
    },
    "64": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC4D66DE8"
    },
    "71": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "75": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD5FCE735"
    },
    "82": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x249"
    },
    "86": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x269"
    },
    "97": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "REVERT",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9EDB6CBD"
    },
    "109": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EB"
    },
    "113": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9F1961E6"
    },
    "120": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FF"
    },
    "124": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xABD70AA2"
    },
    "131": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x212"
    },
    "135": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB69EF8A8"
    },
    "142": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "146": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "150": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "REVERT",
      "path": "5"
    },
    "151": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "153": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x71D8DED9"
    },
    "158": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "GT",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x71D8DED9"
    },
    "169": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19E"
    },
    "173": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7C0FFAA2"
    },
    "180": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B1"
    },
    "184": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7F5BF51C"
    },
    "191": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8"
    },
    "195": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9325019D"
    },
    "202": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CB"
    },
    "206": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "210": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "REVERT",
      "path": "5"
    },
    "211": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "213": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1B9DB2EF"
    },
    "218": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "224": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3B97E856"
    },
    "229": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12B"
    },
    "233": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "235": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x62230498"
    },
    "240": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "241": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x134"
    },
    "244": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6381D19E"
    },
    "251": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "EQ",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x149"
    },
    "255": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        180,
        10278
      ],
      "op": "REVERT",
      "path": "5"
    },
    "261": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "262": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "265": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x113"
    },
    "268": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "269": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "271": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1B"
    },
    "274": {
      "fn": "HettiPool.getParticipant",
      "jump": "i",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMP",
      "path": "5"
    },
    "275": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "276": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x294"
    },
    "279": {
      "fn": "HettiPool.getParticipant",
      "jump": "i",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMP",
      "path": "5"
    },
    "280": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "281": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "283": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "DUP2"
    },
    "286": {
      "op": "MSTORE"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "289": {
      "op": "ADD"
    },
    "290": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "291": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "293": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "294": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "DUP1",
      "path": "5"
    },
    "295": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "296": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "SUB",
      "path": "5"
    },
    "297": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "298": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "RETURN",
      "path": "5"
    },
    "299": {
      "offset": [
        2213,
        2241
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "300": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        2213,
        2241
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "303": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        2213,
        2241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "305": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        2213,
        2241
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "306": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        2213,
        2241
      ],
      "op": "DUP2",
      "path": "5"
    },
    "307": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        2213,
        2241
      ],
      "op": "JUMP",
      "path": "5"
    },
    "308": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "309": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147"
    },
    "312": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x142"
    },
    "315": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "316": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "318": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF03"
    },
    "321": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMP",
      "path": "5"
    },
    "322": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "323": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "326": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMP",
      "path": "5"
    },
    "327": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "328": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "STOP",
      "path": "5"
    },
    "329": {
      "offset": [
        2434,
        2492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "330": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x183"
    },
    "333": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x157"
    },
    "336": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "337": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "339": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFEB"
    },
    "342": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        2434,
        2492
      ],
      "op": "JUMP",
      "path": "5"
    },
    "343": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "344": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "346": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "348": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "349": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP2",
      "path": "5"
    },
    "350": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "351": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "353": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "354": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP4",
      "path": "5"
    },
    "355": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "356": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "358": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP1",
      "path": "5"
    },
    "359": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP5",
      "path": "5"
    },
    "360": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "361": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "362": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "363": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "364": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "365": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP3",
      "path": "5"
    },
    "366": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "367": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "368": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "369": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP1",
      "path": "5"
    },
    "370": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "371": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "373": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP3",
      "path": "5"
    },
    "374": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "ADD",
      "path": "5"
    },
    "375": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "376": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "378": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "379": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "380": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "ADD",
      "path": "5"
    },
    "381": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "382": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "383": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "384": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "385": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP4",
      "path": "5"
    },
    "386": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "JUMP",
      "path": "5"
    },
    "387": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "388": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "390": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "DUP1",
      "path": "5"
    },
    "391": {
      "fn": "HettiPool.withdraw",
      "offset": [
        2434,
        2492
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "392": {
      "op": "SWAP4"
    },
    "393": {
      "op": "DUP5"
    },
    "394": {
      "op": "MSTORE"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "397": {
      "op": "DUP5"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "op": "SWAP3"
    },
    "400": {
      "op": "SWAP1"
    },
    "401": {
      "op": "SWAP3"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "SWAP1"
    },
    "404": {
      "op": "DUP3"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "409": {
      "op": "ADD"
    },
    "410": {
      "offset": [
        2434,
        2492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122"
    },
    "413": {
      "op": "JUMP"
    },
    "414": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "415": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147"
    },
    "418": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC"
    },
    "421": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "422": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "424": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100D"
    },
    "427": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        3178,
        4938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "428": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "429": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x646"
    },
    "432": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        3178,
        4938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "433": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        9976,
        10096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "434": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "436": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        9976,
        10096
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "439": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        9976,
        10096
      ],
      "op": "JUMP",
      "path": "5"
    },
    "440": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "441": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "444": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C6"
    },
    "447": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "448": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "450": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1B"
    },
    "453": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        10102,
        10276
      ],
      "op": "JUMP",
      "path": "5"
    },
    "454": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "455": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x904"
    },
    "458": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        10102,
        10276
      ],
      "op": "JUMP",
      "path": "5"
    },
    "459": {
      "offset": [
        2341,
        2387
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "460": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "463": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D9"
    },
    "466": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "467": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "469": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1B"
    },
    "472": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        2341,
        2387
      ],
      "op": "JUMP",
      "path": "5"
    },
    "473": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "474": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "476": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "478": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "479": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "481": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "482": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "DUP2",
      "path": "5"
    },
    "483": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "484": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "486": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "487": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "488": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "489": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "DUP2",
      "path": "5"
    },
    "490": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        2341,
        2387
      ],
      "op": "JUMP",
      "path": "5"
    },
    "491": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "492": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "495": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F9"
    },
    "498": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "499": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "501": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1B"
    },
    "504": {
      "fn": "HettiPool.getWParticipant",
      "jump": "i",
      "offset": [
        9619,
        9778
      ],
      "op": "JUMP",
      "path": "5"
    },
    "505": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "506": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9710,
        9771
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x30"
    },
    "508": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9710,
        9771
      ],
      "op": "SHR",
      "path": "5"
    },
    "509": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9710,
        9771
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "510": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        9619,
        9778
      ],
      "op": "JUMP",
      "path": "5"
    },
    "511": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "512": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "515": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20D"
    },
    "518": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "519": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "521": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFEB"
    },
    "524": {
      "fn": "HettiPool.getRingHash",
      "jump": "i",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMP",
      "path": "5"
    },
    "525": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "526": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x923"
    },
    "529": {
      "fn": "HettiPool.getRingHash",
      "jump": "i",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMP",
      "path": "5"
    },
    "530": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7853,
        7970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "531": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7853,
        7970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "534": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7853,
        7970
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x956"
    },
    "537": {
      "fn": "HettiPool.getPoolBalance",
      "jump": "i",
      "offset": [
        7853,
        7970
      ],
      "op": "JUMP",
      "path": "5"
    },
    "538": {
      "offset": [
        2247,
        2269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "539": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        2247,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "542": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        2247,
        2269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "544": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        2247,
        2269
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "545": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        2247,
        2269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "546": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        2247,
        2269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "547": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "548": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x183"
    },
    "551": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x231"
    },
    "554": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "555": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "557": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1B"
    },
    "560": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        9299,
        9613
      ],
      "op": "JUMP",
      "path": "5"
    },
    "561": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "562": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "565": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        9299,
        9613
      ],
      "op": "JUMP",
      "path": "5"
    },
    "566": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "567": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147"
    },
    "570": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x244"
    },
    "573": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "574": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "576": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x103A"
    },
    "579": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2616,
        2997
      ],
      "op": "JUMP",
      "path": "5"
    },
    "580": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "581": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA06"
    },
    "584": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2616,
        2997
      ],
      "op": "JUMP",
      "path": "5"
    },
    "585": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "586": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25C"
    },
    "589": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x257"
    },
    "592": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "593": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "595": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFEB"
    },
    "598": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMP",
      "path": "5"
    },
    "599": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "600": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB02"
    },
    "603": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMP",
      "path": "5"
    },
    "604": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "605": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "607": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "608": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122"
    },
    "611": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "612": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "613": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x105E"
    },
    "616": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMP",
      "path": "5"
    },
    "617": {
      "offset": [
        2187,
        2207
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "618": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "620": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "621": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27C"
    },
    "624": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "631": {
      "op": "SHL"
    },
    "632": {
      "op": "SUB"
    },
    "633": {
      "offset": [
        2187,
        2207
      ],
      "op": "AND",
      "path": "5"
    },
    "634": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "635": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "JUMP",
      "path": "5"
    },
    "636": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "637": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "639": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        2187,
        2207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "op": "SUB"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "SWAP2"
    },
    "650": {
      "op": "AND"
    },
    "651": {
      "op": "DUP2"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "offset": [
        2187,
        2207
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "661": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9849,
        9856
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "663": {
      "offset": [
        1284,
        1286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "665": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9879,
        9912
      ],
      "op": "DUP3",
      "path": "5"
    },
    "666": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9879,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "667": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9879,
        9912
      ],
      "op": "SHR",
      "path": "5"
    },
    "668": {
      "offset": [
        1406,
        1438
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A9"
    },
    "671": {
      "offset": [
        1437,
        1438
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "673": {
      "offset": [
        1407,
        1434
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x10000"
    },
    "677": {
      "offset": [
        1406,
        1438
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CF"
    },
    "680": {
      "fn": "HettiPool.getParticipant",
      "jump": "i",
      "offset": [
        1406,
        1438
      ],
      "op": "JUMP",
      "path": "5"
    },
    "681": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        1406,
        1438
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "682": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9938,
        9963
      ],
      "op": "AND",
      "path": "5",
      "statement": 1
    },
    "683": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9938,
        9963
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "684": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        9784,
        9970
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "685": {
      "op": "POP"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "HettiPool.getParticipant",
      "jump": "o",
      "offset": [
        9784,
        9970
      ],
      "op": "JUMP",
      "path": "5"
    },
    "688": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "689": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5132,
        5149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "691": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "DUP6",
      "path": "5"
    },
    "692": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "DUP2",
      "path": "5"
    },
    "693": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "694": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "696": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "698": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "699": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "DUP2",
      "path": "5"
    },
    "700": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "701": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "703": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "DUP1",
      "path": "5"
    },
    "704": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "DUP4",
      "path": "5"
    },
    "705": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5170
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "706": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "DUP8",
      "path": "5"
    },
    "707": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "DUP5",
      "path": "5"
    },
    "708": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "709": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "710": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "711": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "712": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "DUP2",
      "path": "5"
    },
    "713": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "714": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5275,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "716": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5275,
        5294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "717": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5275,
        5294
      ],
      "op": "ADD",
      "path": "5"
    },
    "718": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5275,
        5294
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "719": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "720": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5152,
        5181
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "721": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5132,
        5149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "722": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5132,
        5149
      ],
      "op": "DUP2",
      "path": "5"
    },
    "723": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5132,
        5149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "724": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5132,
        5149
      ],
      "op": "DUP2",
      "path": "5"
    },
    "725": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5132,
        5149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "726": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5257,
        5295
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DE"
    },
    "729": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5257,
        5295
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "730": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5257,
        5274
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "733": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        5257,
        5295
      ],
      "op": "JUMP",
      "path": "5"
    },
    "734": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5257,
        5295
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "735": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5192,
        5295
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "736": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5192,
        5295
      ],
      "op": "POP",
      "path": "5"
    },
    "737": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5192,
        5295
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "738": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5192,
        5295
      ],
      "op": "POP",
      "path": "5"
    },
    "739": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5192,
        5295
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "740": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5192,
        5295
      ],
      "op": "POP",
      "path": "5"
    },
    "741": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "743": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5319,
        5332
      ],
      "op": "DUP4",
      "path": "5"
    },
    "744": {
      "branch": 49,
      "fn": "HettiPool.withdraw",
      "offset": [
        5319,
        5356
      ],
      "op": "LT",
      "path": "5"
    },
    "745": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5315,
        5412
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32F"
    },
    "748": {
      "branch": 49,
      "fn": "HettiPool.withdraw",
      "offset": [
        5315,
        5412
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "749": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x40"
    },
    "751": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "DUP2",
      "path": "5"
    },
    "760": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "763": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "765": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "DUP3",
      "path": "5"
    },
    "766": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "ADD",
      "path": "5"
    },
    "767": {
      "op": "MSTORE"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "772": {
      "op": "DUP3"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "PUSH19",
      "value": "0x20A6262FA32AA72229AFABA4AA24222920ABA7"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "800": {
      "op": "DUP3"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "805": {
      "op": "ADD"
    },
    "806": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "807": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "809": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "810": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "DUP1",
      "path": "5"
    },
    "811": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "812": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "SUB",
      "path": "5"
    },
    "813": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "814": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5372,
        5401
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "815": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5315,
        5412
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "816": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5426,
        5439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "818": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5426,
        5439
      ],
      "op": "DUP5",
      "path": "5"
    },
    "819": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5426,
        5439
      ],
      "op": "ADD",
      "path": "5"
    },
    "820": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5426,
        5439
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "821": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5422,
        5508
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x372"
    },
    "824": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5422,
        5508
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "825": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x40"
    },
    "827": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "DUP2",
      "path": "5"
    },
    "836": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "839": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "841": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "DUP3",
      "path": "5"
    },
    "842": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "ADD",
      "path": "5"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "848": {
      "op": "DUP3"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "op": "MSTORE"
    },
    "851": {
      "op": "PUSH15",
      "value": "0x14925391D7D393D517D0D313D4D151"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "869": {
      "op": "SHL"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5472,
        5497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x326"
    },
    "881": {
      "op": "JUMP"
    },
    "882": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5422,
        5508
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "883": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "885": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP1",
      "path": "5"
    },
    "886": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "887": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "889": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP1",
      "path": "5"
    },
    "890": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP3",
      "path": "5"
    },
    "891": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "892": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC0"
    },
    "894": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP3",
      "path": "5"
    },
    "895": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "ADD",
      "path": "5"
    },
    "896": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "897": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "898": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "899": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5518,
        5548
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "901": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5518,
        5548
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "902": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "903": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "905": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "ADD",
      "path": "5"
    },
    "906": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "907": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392"
    },
    "910": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD50"
    },
    "913": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        5551,
        5589
      ],
      "op": "JUMP",
      "path": "5"
    },
    "914": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "915": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "916": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "917": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "919": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "ADD",
      "path": "5"
    },
    "920": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "921": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "923": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "924": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SUB",
      "path": "5"
    },
    "925": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "926": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "927": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38A"
    },
    "930": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "931": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "932": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "POP",
      "path": "5"
    },
    "933": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5551,
        5589
      ],
      "op": "POP",
      "path": "5"
    },
    "934": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5518,
        5589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "935": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5518,
        5589
      ],
      "op": "POP",
      "path": "5"
    },
    "936": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5605,
        5614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "938": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "939": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "941": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5620,
        5621
      ],
      "op": "DUP2",
      "path": "5"
    },
    "942": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5620,
        5644
      ],
      "op": "LT",
      "path": "5"
    },
    "943": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "944": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x413"
    },
    "947": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "948": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "950": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "DUP2",
      "path": "5"
    },
    "951": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "DUP2",
      "path": "5"
    },
    "952": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "953": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5692
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "955": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5692
      ],
      "op": "DUP8",
      "path": "5"
    },
    "956": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5692
      ],
      "op": "DUP2",
      "path": "5"
    },
    "957": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5692
      ],
      "op": "ADD",
      "path": "5"
    },
    "958": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "960": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "961": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "963": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "964": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "DUP3",
      "path": "5"
    },
    "965": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "966": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "967": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP3",
      "path": "5"
    },
    "968": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "969": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP1",
      "path": "5"
    },
    "970": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP5",
      "path": "5"
    },
    "971": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "ADD",
      "path": "5"
    },
    "972": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "973": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP5",
      "path": "5"
    },
    "974": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "975": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "976": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "977": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "978": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "979": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5692
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "980": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5677,
        5695
      ],
      "op": "DUP3",
      "path": "5"
    },
    "981": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP5",
      "path": "5"
    },
    "982": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "983": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP2",
      "path": "5"
    },
    "984": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "985": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP2",
      "path": "5"
    },
    "986": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "987": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "989": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "ADD",
      "path": "5"
    },
    "990": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "991": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "993": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "ADD",
      "path": "5"
    },
    "994": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "995": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP1",
      "path": "5"
    },
    "996": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "DUP4",
      "path": "5"
    },
    "997": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "GT",
      "path": "5"
    },
    "998": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D6"
    },
    "1001": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1002": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "POP",
      "path": "5"
    },
    "1003": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "POP",
      "path": "5"
    },
    "1004": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "POP",
      "path": "5"
    },
    "1005": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "POP",
      "path": "5"
    },
    "1006": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "POP",
      "path": "5"
    },
    "1007": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1008": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5672,
        5673
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1009": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1010": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1011": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1012": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "LT",
      "path": "5"
    },
    "1013": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x400"
    },
    "1016": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1017": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x400"
    },
    "1020": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E6"
    },
    "1023": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        5661,
        5674
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1024": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1025": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1027": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1028": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1029": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "MUL",
      "path": "5"
    },
    "1030": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1031": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1032": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1033": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "ADD",
      "path": "5"
    },
    "1034": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5674
      ],
      "op": "ADD",
      "path": "5"
    },
    "1035": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5661,
        5695
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1036": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5737,
        5740
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x1"
    },
    "1038": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5737,
        5740
      ],
      "op": "ADD",
      "path": "5"
    },
    "1039": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AA"
    },
    "1042": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1043": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1044": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5600,
        5765
      ],
      "op": "POP",
      "path": "5"
    },
    "1045": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5820,
        5842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1047": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        5849
      ],
      "op": "PUSH20",
      "path": "5",
      "value": "0x0"
    },
    "1068": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        5856
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFE46A2B2"
    },
    "1073": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5887,
        5891
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1074": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5887,
        5900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1076": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5887,
        5900
      ],
      "op": "ADD",
      "path": "5"
    },
    "1077": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5887,
        5900
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1078": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1080": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1081": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1083": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "ADD",
      "path": "5"
    },
    "1084": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x447"
    },
    "1087": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1088": {
      "op": "DUP2"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "SWAP1"
    },
    "1094": {
      "op": "JUMP"
    },
    "1095": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1096": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1098": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1099": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1101": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1102": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1103": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "SUB",
      "path": "5"
    },
    "1104": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "SUB",
      "path": "5"
    },
    "1105": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1106": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1107": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1108": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1110": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5870,
        5901
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1111": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5935,
        5937
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1112": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5951,
        5959
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1113": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5973,
        5974
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1114": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5988,
        5998
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1115": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1117": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1118": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1119": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1124": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "AND",
      "path": "5"
    },
    "1125": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "1127": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SHL",
      "path": "5"
    },
    "1128": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1129": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1130": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1132": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "ADD",
      "path": "5"
    },
    "1133": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x47A"
    },
    "1136": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1137": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1138": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1139": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1140": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1141": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1142": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x119A"
    },
    "1145": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        5845,
        6008
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1146": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1147": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1149": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1151": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1152": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1153": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1154": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SUB",
      "path": "5"
    },
    "1155": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1156": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1157": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "GAS",
      "path": "5"
    },
    "1158": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DELEGATECALL",
      "path": "5"
    },
    "1159": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1160": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1161": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1162": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x497"
    },
    "1165": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1166": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1167": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1169": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1170": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1171": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1172": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1174": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1175": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1176": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "POP",
      "path": "5"
    },
    "1177": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "POP",
      "path": "5"
    },
    "1178": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "POP",
      "path": "5"
    },
    "1179": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "POP",
      "path": "5"
    },
    "1180": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1182": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1183": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1184": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1186": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "NOT",
      "path": "5"
    },
    "1187": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1189": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1190": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "ADD",
      "path": "5"
    },
    "1191": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "AND",
      "path": "5"
    },
    "1192": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1193": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "ADD",
      "path": "5"
    },
    "1194": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1195": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1197": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1198": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "POP",
      "path": "5"
    },
    "1199": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1200": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "ADD",
      "path": "5"
    },
    "1201": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1202": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BB"
    },
    "1205": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1206": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1207": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1230"
    },
    "1210": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        5845,
        6008
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1211": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5845,
        6008
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1212": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5820,
        6008
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1213": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5820,
        6008
      ],
      "op": "POP",
      "path": "5"
    },
    "1214": {
      "branch": 50,
      "fn": "HettiPool.withdraw",
      "offset": [
        6024,
        6041
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1215": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6019,
        6095
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FE"
    },
    "1218": {
      "branch": 50,
      "fn": "HettiPool.withdraw",
      "offset": [
        6019,
        6095
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1219": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x40"
    },
    "1221": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1230": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1233": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1235": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1236": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "ADD",
      "path": "5"
    },
    "1237": {
      "op": "MSTORE"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1242": {
      "op": "DUP3"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "MSTORE"
    },
    "1245": {
      "op": "PUSH17",
      "value": "0x494E56414C49445F5349474E4154555245"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1268": {
      "op": "DUP3"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x326"
    },
    "1277": {
      "op": "JUMP"
    },
    "1278": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6019,
        6095
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1279": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6178,
        6184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1281": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1282": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6194,
        6207
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1283": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6190,
        6191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1284": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6190,
        6207
      ],
      "op": "LT",
      "path": "5"
    },
    "1285": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1286": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x587"
    },
    "1289": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1290": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6252,
        6263
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1291": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6252,
        6263
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1292": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6261,
        6262
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1294": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1295": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1296": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1297": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6242
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1299": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6242
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1300": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6242
      ],
      "op": "ADD",
      "path": "5"
    },
    "1301": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6252,
        6263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1303": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1304": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1306": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1307": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6245
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1308": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6248
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1309": {
      "branch": 51,
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6263
      ],
      "op": "EQ",
      "path": "5"
    },
    "1310": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6318
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1311": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6318
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1312": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6318
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x541"
    },
    "1315": {
      "branch": 51,
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6318
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6307,
        6318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1319": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6307,
        6318
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1320": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6307,
        6318
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1321": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6307,
        6318
      ],
      "op": "ADD",
      "path": "5"
    },
    "1322": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6307,
        6318
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1323": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1325": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1326": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1327": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1328": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1330": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6297
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1331": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6297
      ],
      "op": "ADD",
      "path": "5"
    },
    "1332": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1333": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1334": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1335": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1337": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1338": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1339": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6300
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1340": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6316,
        6317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1342": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6303
      ],
      "op": "ADD",
      "path": "5"
    },
    "1343": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6303
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1344": {
      "branch": 52,
      "fn": "HettiPool.withdraw",
      "offset": [
        6283,
        6318
      ],
      "op": "EQ",
      "path": "5"
    },
    "1345": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6228,
        6318
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1346": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6224,
        6377
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1347": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6224,
        6377
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57F"
    },
    "1350": {
      "branch": 52,
      "fn": "HettiPool.withdraw",
      "offset": [
        6224,
        6377
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1351": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x40"
    },
    "1353": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1362": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1365": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1367": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1368": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "ADD",
      "path": "5"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1374": {
      "op": "DUP3"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "op": "MSTORE"
    },
    "1377": {
      "op": "PUSH14",
      "value": "0x555345445F5349474E4154555245"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6338,
        6362
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x326"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6224,
        6377
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1408": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6419,
        6422
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x1"
    },
    "1410": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6419,
        6422
      ],
      "op": "ADD",
      "path": "5"
    },
    "1411": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x501"
    },
    "1414": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1415": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6173,
        6447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x0"
    },
    "1419": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1420": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1421": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1422": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1424": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6475
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1425": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6475
      ],
      "op": "ADD",
      "path": "5"
    },
    "1426": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1428": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1429": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1431": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1432": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6490
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1433": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A4"
    },
    "1436": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1437": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6493,
        6501
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1438": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1440": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6E"
    },
    "1443": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        6461,
        6501
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1444": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6461,
        6501
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6535,
        6550
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x1"
    },
    "1448": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6535,
        6550
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1449": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6535,
        6550
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1450": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6535,
        6550
      ],
      "op": "ADD",
      "path": "5"
    },
    "1451": {
      "offset": [
        1237,
        1239
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "1453": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6590,
        6629
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1454": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6590,
        6629
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1455": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6590,
        6629
      ],
      "op": "SHL",
      "path": "5"
    },
    "1456": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6589,
        6645
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1457": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6589,
        6645
      ],
      "op": "OR",
      "path": "5"
    },
    "1458": {
      "offset": [
        1284,
        1286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1460": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6669,
        6702
      ],
      "op": "SHL",
      "path": "5",
      "statement": 11
    },
    "1461": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6668,
        6714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1462": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6668,
        6714
      ],
      "op": "OR",
      "path": "5"
    },
    "1463": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6724,
        6743
      ],
      "op": "SWAP6",
      "path": "5",
      "statement": 12
    },
    "1464": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6724,
        6743
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1465": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6724,
        6743
      ],
      "op": "ADD",
      "path": "5"
    },
    "1466": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6724,
        6756
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1467": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6724,
        6756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1468": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6724,
        6756
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1469": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6571,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1471": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6775,
        6780
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 13
    },
    "1472": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1474": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1475": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1484": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "op": "DUP16"
    },
    "1494": {
      "op": "DUP2"
    },
    "1495": {
      "op": "AND"
    },
    "1496": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1498": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1499": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "ADD",
      "path": "5"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "DUP16"
    },
    "1506": {
      "op": "SWAP1"
    },
    "1507": {
      "op": "MSTORE"
    },
    "1508": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6535,
        6550
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1509": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6535,
        6550
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1510": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6668,
        6714
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1511": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6775,
        6780
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1512": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6775,
        6780
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1513": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6775,
        6780
      ],
      "op": "AND",
      "path": "5"
    },
    "1514": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6775,
        6780
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1515": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6790
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "1520": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1526": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1528": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1529": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1530": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1531": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "SUB",
      "path": "5"
    },
    "1532": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1533": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1535": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1536": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "GAS",
      "path": "5"
    },
    "1537": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "CALL",
      "path": "5"
    },
    "1538": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1539": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1540": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1541": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x612"
    },
    "1544": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1545": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1546": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1548": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1549": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1550": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1551": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1553": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1554": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1555": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "POP",
      "path": "5"
    },
    "1556": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "POP",
      "path": "5"
    },
    "1557": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "POP",
      "path": "5"
    },
    "1558": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "POP",
      "path": "5"
    },
    "1559": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1561": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1562": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1563": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1565": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "NOT",
      "path": "5"
    },
    "1566": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1568": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1569": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "ADD",
      "path": "5"
    },
    "1570": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "AND",
      "path": "5"
    },
    "1571": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1572": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "ADD",
      "path": "5"
    },
    "1573": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1574": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1576": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1577": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "POP",
      "path": "5"
    },
    "1578": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1579": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "ADD",
      "path": "5"
    },
    "1580": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1581": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x636"
    },
    "1584": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1585": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1586": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1230"
    },
    "1589": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        6769,
        6814
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1590": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1591": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6769,
        6814
      ],
      "op": "POP",
      "path": "5"
    },
    "1592": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1593": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1594": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1595": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1596": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1597": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1598": {
      "fn": "HettiPool.withdraw",
      "offset": [
        5122,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1599": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1600": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1601": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1602": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1603": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1604": {
      "fn": "HettiPool.withdraw",
      "offset": [
        4944,
        6821
      ],
      "op": "POP",
      "path": "5"
    },
    "1605": {
      "fn": "HettiPool.withdraw",
      "jump": "o",
      "offset": [
        4944,
        6821
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1606": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1607": {
      "fn": "HettiPool.deposit",
      "offset": [
        3307,
        3334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1609": {
      "fn": "HettiPool.deposit",
      "offset": [
        3337,
        3357
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x651"
    },
    "1612": {
      "fn": "HettiPool.deposit",
      "offset": [
        3349,
        3356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1613": {
      "fn": "HettiPool.deposit",
      "offset": [
        3337,
        3348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC9"
    },
    "1616": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        3337,
        3357
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1617": {
      "fn": "HettiPool.deposit",
      "offset": [
        3337,
        3357
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1618": {
      "fn": "HettiPool.deposit",
      "offset": [
        3374,
        3379
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x0"
    },
    "1620": {
      "fn": "HettiPool.deposit",
      "offset": [
        3374,
        3379
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1621": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1623": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1624": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1633": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1634": {
      "fn": "HettiPool.deposit",
      "offset": [
        3394,
        3404
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1635": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1637": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1638": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "ADD",
      "path": "5"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "fn": "HettiPool.deposit",
      "offset": [
        3414,
        3418
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1643": {
      "op": "DUP3"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1648": {
      "op": "DUP2"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "op": "DUP7"
    },
    "1651": {
      "op": "SWAP1"
    },
    "1652": {
      "op": "MSTORE"
    },
    "1653": {
      "fn": "HettiPool.deposit",
      "offset": [
        3307,
        3357
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1654": {
      "fn": "HettiPool.deposit",
      "offset": [
        3307,
        3357
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1662": {
      "op": "SHL"
    },
    "1663": {
      "op": "SUB"
    },
    "1664": {
      "fn": "HettiPool.deposit",
      "offset": [
        3374,
        3379
      ],
      "op": "AND",
      "path": "5"
    },
    "1665": {
      "fn": "HettiPool.deposit",
      "offset": [
        3374,
        3379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1666": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3393
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "1671": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3393
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1677": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1679": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1680": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1681": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1682": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "SUB",
      "path": "5"
    },
    "1683": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1684": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1686": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1687": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "GAS",
      "path": "5"
    },
    "1688": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "CALL",
      "path": "5"
    },
    "1689": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1690": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1691": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1692": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A9"
    },
    "1695": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1696": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1697": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1699": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1700": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1701": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1702": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1704": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1705": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1706": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "POP",
      "path": "5"
    },
    "1707": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "POP",
      "path": "5"
    },
    "1708": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "POP",
      "path": "5"
    },
    "1709": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "POP",
      "path": "5"
    },
    "1710": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1712": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1713": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1714": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1716": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "NOT",
      "path": "5"
    },
    "1717": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1719": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1720": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "ADD",
      "path": "5"
    },
    "1721": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "AND",
      "path": "5"
    },
    "1722": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1723": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "ADD",
      "path": "5"
    },
    "1724": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1725": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1727": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1728": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "POP",
      "path": "5"
    },
    "1729": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1730": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "ADD",
      "path": "5"
    },
    "1731": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1732": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6CD"
    },
    "1735": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1736": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1737": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1230"
    },
    "1740": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        3368,
        3429
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1741": {
      "fn": "HettiPool.deposit",
      "offset": [
        3368,
        3429
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "HettiPool.deposit",
      "offset": [
        3470,
        3483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1744": {
      "fn": "HettiPool.deposit",
      "offset": [
        3470,
        3483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1745": {
      "fn": "HettiPool.deposit",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1747": {
      "fn": "HettiPool.deposit",
      "offset": [
        3494,
        3507
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1748": {
      "fn": "HettiPool.deposit",
      "offset": [
        3494,
        3507
      ],
      "op": "ADD",
      "path": "5"
    },
    "1749": {
      "fn": "HettiPool.deposit",
      "offset": [
        3494,
        3507
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1750": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1752": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1753": {
      "op": "PUSH4",
      "value": "0xCD3B289"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1762": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1763": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1765": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1766": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "ADD",
      "path": "5"
    },
    "1767": {
      "op": "SWAP3"
    },
    "1768": {
      "op": "SWAP1"
    },
    "1769": {
      "op": "SWAP3"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3453
      ],
      "op": "PUSH20",
      "path": "5",
      "value": "0x0"
    },
    "1797": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3453
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1798": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3461
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x669D9448"
    },
    "1803": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3461
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1809": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1811": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1812": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1813": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1814": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "SUB",
      "path": "5"
    },
    "1815": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1816": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1817": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "GAS",
      "path": "5"
    },
    "1818": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DELEGATECALL",
      "path": "5"
    },
    "1819": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1820": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1821": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1822": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72B"
    },
    "1825": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1826": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1827": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1829": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1830": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1831": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1832": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1834": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1835": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1836": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "POP",
      "path": "5"
    },
    "1837": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "POP",
      "path": "5"
    },
    "1838": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "POP",
      "path": "5"
    },
    "1839": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "POP",
      "path": "5"
    },
    "1840": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1842": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1843": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1844": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1846": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "NOT",
      "path": "5"
    },
    "1847": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1849": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1850": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "ADD",
      "path": "5"
    },
    "1851": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "AND",
      "path": "5"
    },
    "1852": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1853": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "ADD",
      "path": "5"
    },
    "1854": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1855": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1857": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1858": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "POP",
      "path": "5"
    },
    "1859": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1860": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "ADD",
      "path": "5"
    },
    "1861": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1862": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74F"
    },
    "1865": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1866": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1867": {
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1230"
    },
    "1870": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        3445,
        3509
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1871": {
      "branch": 53,
      "fn": "HettiPool.deposit",
      "offset": [
        3445,
        3509
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1872": {
      "fn": "HettiPool.deposit",
      "offset": [
        3440,
        3561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x78D"
    },
    "1875": {
      "branch": 53,
      "fn": "HettiPool.deposit",
      "offset": [
        3440,
        3561
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1876": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x40"
    },
    "1878": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1887": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1890": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1892": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1893": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "ADD",
      "path": "5"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1899": {
      "op": "DUP3"
    },
    "1900": {
      "op": "ADD"
    },
    "1901": {
      "op": "MSTORE"
    },
    "1902": {
      "op": "PUSH15",
      "value": "0x504B5F4E4F545F4F4E5F4355525645"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1923": {
      "op": "DUP3"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "op": "MSTORE"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1928": {
      "op": "ADD"
    },
    "1929": {
      "fn": "HettiPool.deposit",
      "offset": [
        3525,
        3550
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x326"
    },
    "1932": {
      "op": "JUMP"
    },
    "1933": {
      "fn": "HettiPool.deposit",
      "offset": [
        3440,
        3561
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1934": {
      "fn": "HettiPool.deposit",
      "offset": [
        3620,
        3637
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1936": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1937": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1938": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1939": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "1941": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1943": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1944": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1945": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1946": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1948": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1949": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1950": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1951": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1952": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "1954": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3728
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1955": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3728
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1956": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3728
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1957": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3728
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1958": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3728
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1959": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1960": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1961": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1962": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1963": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1964": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1965": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1966": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1967": {
      "fn": "HettiPool.deposit",
      "offset": [
        3833,
        3852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1969": {
      "fn": "HettiPool.deposit",
      "offset": [
        3833,
        3852
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1970": {
      "fn": "HettiPool.deposit",
      "offset": [
        3833,
        3852
      ],
      "op": "ADD",
      "path": "5"
    },
    "1971": {
      "fn": "HettiPool.deposit",
      "offset": [
        3833,
        3852
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1972": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1973": {
      "fn": "HettiPool.deposit",
      "offset": [
        3640,
        3672
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1974": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1975": {
      "fn": "HettiPool.deposit",
      "offset": [
        3702,
        3739
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1976": {
      "fn": "HettiPool.deposit",
      "offset": [
        3620,
        3637
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1977": {
      "fn": "HettiPool.deposit",
      "offset": [
        3620,
        3637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1978": {
      "fn": "HettiPool.deposit",
      "offset": [
        3620,
        3637
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1979": {
      "fn": "HettiPool.deposit",
      "offset": [
        3620,
        3637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1980": {
      "fn": "HettiPool.deposit",
      "offset": [
        3815,
        3853
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C4"
    },
    "1983": {
      "fn": "HettiPool.deposit",
      "offset": [
        3815,
        3853
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1984": {
      "fn": "HettiPool.deposit",
      "offset": [
        3815,
        3832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "1987": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        3815,
        3853
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1988": {
      "fn": "HettiPool.deposit",
      "offset": [
        3815,
        3853
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1989": {
      "fn": "HettiPool.deposit",
      "offset": [
        3750,
        3853
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1990": {
      "fn": "HettiPool.deposit",
      "offset": [
        3750,
        3853
      ],
      "op": "POP",
      "path": "5"
    },
    "1991": {
      "fn": "HettiPool.deposit",
      "offset": [
        3750,
        3853
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1992": {
      "fn": "HettiPool.deposit",
      "offset": [
        3750,
        3853
      ],
      "op": "POP",
      "path": "5"
    },
    "1993": {
      "fn": "HettiPool.deposit",
      "offset": [
        3750,
        3853
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1994": {
      "fn": "HettiPool.deposit",
      "offset": [
        3750,
        3853
      ],
      "op": "POP",
      "path": "5"
    },
    "1995": {
      "fn": "HettiPool.deposit",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1997": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1998": {
      "fn": "HettiPool.deposit",
      "offset": [
        3946,
        3958
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1999": {
      "fn": "HettiPool.deposit",
      "offset": [
        3942,
        3943
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2000": {
      "fn": "HettiPool.deposit",
      "offset": [
        3942,
        3958
      ],
      "op": "LT",
      "path": "5"
    },
    "2001": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2002": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x857"
    },
    "2005": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2006": {
      "fn": "HettiPool.deposit",
      "offset": [
        4004,
        4017
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2007": {
      "fn": "HettiPool.deposit",
      "offset": [
        4004,
        4017
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2008": {
      "fn": "HettiPool.deposit",
      "offset": [
        4015,
        4016
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2010": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2011": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2012": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2013": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2015": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3994
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2016": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3994
      ],
      "op": "ADD",
      "path": "5"
    },
    "2017": {
      "fn": "HettiPool.deposit",
      "offset": [
        4004,
        4017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2019": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2020": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2022": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2023": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        3997
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2024": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4000
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2025": {
      "branch": 54,
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4017
      ],
      "op": "EQ",
      "path": "5"
    },
    "2026": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4075
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2027": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4075
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2028": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4075
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80D"
    },
    "2031": {
      "branch": 54,
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4075
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "fn": "HettiPool.deposit",
      "offset": [
        4062,
        4075
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2035": {
      "fn": "HettiPool.deposit",
      "offset": [
        4062,
        4075
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2036": {
      "fn": "HettiPool.deposit",
      "offset": [
        4062,
        4075
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2037": {
      "fn": "HettiPool.deposit",
      "offset": [
        4062,
        4075
      ],
      "op": "ADD",
      "path": "5"
    },
    "2038": {
      "fn": "HettiPool.deposit",
      "offset": [
        4062,
        4075
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2039": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2041": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2042": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2043": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2044": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2046": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4052
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2047": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4052
      ],
      "op": "ADD",
      "path": "5"
    },
    "2048": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2049": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2050": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2051": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2053": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2054": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2055": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4055
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2056": {
      "fn": "HettiPool.deposit",
      "offset": [
        4073,
        4074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2058": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4058
      ],
      "op": "ADD",
      "path": "5"
    },
    "2059": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4058
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2060": {
      "branch": 55,
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        4075
      ],
      "op": "EQ",
      "path": "5"
    },
    "2061": {
      "fn": "HettiPool.deposit",
      "offset": [
        3979,
        4075
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2062": {
      "fn": "HettiPool.deposit",
      "offset": [
        3975,
        4138
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2063": {
      "fn": "HettiPool.deposit",
      "offset": [
        3975,
        4138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x84F"
    },
    "2066": {
      "branch": 55,
      "fn": "HettiPool.deposit",
      "offset": [
        3975,
        4138
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2067": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x40"
    },
    "2069": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2078": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2081": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2083": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2084": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "ADD",
      "path": "5"
    },
    "2085": {
      "op": "MSTORE"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH18",
      "value": "0x504B5F414C52454144595F494E5F52494E47"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2117": {
      "op": "DUP3"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2122": {
      "op": "ADD"
    },
    "2123": {
      "fn": "HettiPool.deposit",
      "offset": [
        4095,
        4123
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x326"
    },
    "2126": {
      "op": "JUMP"
    },
    "2127": {
      "fn": "HettiPool.deposit",
      "offset": [
        3975,
        4138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2128": {
      "fn": "HettiPool.deposit",
      "offset": [
        4180,
        4183
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 17,
      "value": "0x1"
    },
    "2130": {
      "fn": "HettiPool.deposit",
      "offset": [
        4180,
        4183
      ],
      "op": "ADD",
      "path": "5"
    },
    "2131": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "2134": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2135": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2136": {
      "fn": "HettiPool.deposit",
      "offset": [
        3922,
        4208
      ],
      "op": "POP",
      "path": "5"
    },
    "2137": {
      "fn": "HettiPool.deposit",
      "offset": [
        4222,
        4234
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2138": {
      "fn": "HettiPool.deposit",
      "offset": [
        4238,
        4239
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2140": {
      "branch": 56,
      "fn": "HettiPool.deposit",
      "offset": [
        4222,
        4239
      ],
      "op": "SUB",
      "path": "5"
    },
    "2141": {
      "fn": "HettiPool.deposit",
      "offset": [
        4218,
        4293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "2144": {
      "branch": 56,
      "fn": "HettiPool.deposit",
      "offset": [
        4218,
        4293
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2145": {
      "fn": "HettiPool.deposit",
      "offset": [
        4266,
        4282
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 18,
      "value": "0x86B"
    },
    "2148": {
      "fn": "HettiPool.deposit",
      "offset": [
        4281,
        4282
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2150": {
      "fn": "HettiPool.deposit",
      "offset": [
        4266,
        4278
      ],
      "op": "NUMBER",
      "path": "5"
    },
    "2151": {
      "fn": "HettiPool.deposit",
      "offset": [
        4266,
        4282
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CF"
    },
    "2154": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4266,
        4282
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2155": {
      "fn": "HettiPool.deposit",
      "offset": [
        4266,
        4282
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2156": {
      "fn": "HettiPool.deposit",
      "offset": [
        4255,
        4282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2157": {
      "fn": "HettiPool.deposit",
      "offset": [
        4255,
        4282
      ],
      "op": "POP",
      "path": "5"
    },
    "2158": {
      "fn": "HettiPool.deposit",
      "offset": [
        4218,
        4293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2159": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 19,
      "value": "0x0"
    },
    "2161": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2162": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2163": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2164": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2166": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4318
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2167": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4318
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2168": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4318
      ],
      "op": "ADD",
      "path": "5"
    },
    "2169": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2171": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2172": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2174": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2175": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2176": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4332
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2177": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4345
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x88B"
    },
    "2180": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4345
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2181": {
      "fn": "HettiPool.deposit",
      "offset": [
        4335,
        4345
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2182": {
      "fn": "HettiPool.deposit",
      "offset": [
        4335,
        4345
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2183": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4345
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6E"
    },
    "2186": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4303,
        4345
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2187": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4345
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2188": {
      "fn": "HettiPool.deposit",
      "offset": [
        4303,
        4345
      ],
      "op": "POP",
      "path": "5"
    },
    "2189": {
      "fn": "HettiPool.deposit",
      "offset": [
        4379,
        4398
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 20
    },
    "2190": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2191": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2193": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4375
      ],
      "op": "ADD",
      "path": "5"
    },
    "2194": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2196": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2197": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2198": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2199": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A0"
    },
    "2202": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2203": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2204": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1252"
    },
    "2207": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4355,
        4398
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2208": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2209": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2210": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2211": {
      "fn": "HettiPool.deposit",
      "offset": [
        4355,
        4398
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "fn": "HettiPool.deposit",
      "offset": [
        4432,
        4446
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x1"
    },
    "2216": {
      "fn": "HettiPool.deposit",
      "offset": [
        4432,
        4446
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2217": {
      "fn": "HettiPool.deposit",
      "offset": [
        4432,
        4446
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2218": {
      "fn": "HettiPool.deposit",
      "offset": [
        4432,
        4446
      ],
      "op": "ADD",
      "path": "5"
    },
    "2219": {
      "offset": [
        1237,
        1239
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "2221": {
      "fn": "HettiPool.deposit",
      "offset": [
        4486,
        4525
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2222": {
      "fn": "HettiPool.deposit",
      "offset": [
        4486,
        4525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2223": {
      "fn": "HettiPool.deposit",
      "offset": [
        4486,
        4525
      ],
      "op": "SHL",
      "path": "5"
    },
    "2224": {
      "fn": "HettiPool.deposit",
      "offset": [
        4485,
        4541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2225": {
      "fn": "HettiPool.deposit",
      "offset": [
        4485,
        4541
      ],
      "op": "OR",
      "path": "5"
    },
    "2226": {
      "offset": [
        1284,
        1286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2228": {
      "fn": "HettiPool.deposit",
      "offset": [
        4565,
        4598
      ],
      "op": "SHL",
      "path": "5",
      "statement": 22
    },
    "2229": {
      "fn": "HettiPool.deposit",
      "offset": [
        4564,
        4610
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2230": {
      "fn": "HettiPool.deposit",
      "offset": [
        4564,
        4610
      ],
      "op": "OR",
      "path": "5"
    },
    "2231": {
      "fn": "HettiPool.deposit",
      "offset": [
        4620,
        4639
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 23
    },
    "2232": {
      "fn": "HettiPool.deposit",
      "offset": [
        4620,
        4639
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2233": {
      "fn": "HettiPool.deposit",
      "offset": [
        4620,
        4639
      ],
      "op": "ADD",
      "path": "5"
    },
    "2234": {
      "fn": "HettiPool.deposit",
      "offset": [
        4620,
        4652
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2235": {
      "fn": "HettiPool.deposit",
      "offset": [
        4620,
        4652
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2236": {
      "fn": "HettiPool.deposit",
      "offset": [
        4620,
        4652
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2237": {
      "fn": "HettiPool.deposit",
      "offset": [
        4432,
        4446
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2238": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2240": {
      "fn": "HettiPool.deposit",
      "offset": [
        4716,
        4752
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2241": {
      "branch": 57,
      "fn": "HettiPool.deposit",
      "offset": [
        4716,
        4752
      ],
      "op": "LT",
      "path": "5"
    },
    "2242": {
      "fn": "HettiPool.deposit",
      "offset": [
        4712,
        4932
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F9"
    },
    "2245": {
      "branch": 57,
      "fn": "HettiPool.deposit",
      "offset": [
        4712,
        4932
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2246": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        4824
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 24,
      "value": "0x8CF"
    },
    "2249": {
      "fn": "HettiPool.deposit",
      "offset": [
        4793,
        4812
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2250": {
      "fn": "HettiPool.deposit",
      "offset": [
        4814,
        4823
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2251": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        4792
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4E"
    },
    "2254": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4784,
        4824
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2255": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        4824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2256": {
      "fn": "HettiPool.deposit",
      "offset": [
        4768,
        4781
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2258": {
      "fn": "HettiPool.deposit",
      "offset": [
        4768,
        4781
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2259": {
      "fn": "HettiPool.deposit",
      "offset": [
        4768,
        4781
      ],
      "op": "ADD",
      "path": "5"
    },
    "2260": {
      "fn": "HettiPool.deposit",
      "offset": [
        4768,
        4824
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2261": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x0"
    },
    "2263": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2264": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2265": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2266": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4895
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "2268": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2270": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2271": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2273": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2274": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2275": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2276": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2277": {
      "fn": "HettiPool.deposit",
      "offset": [
        4920,
        4921
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2279": {
      "fn": "HettiPool.deposit",
      "offset": [
        4920,
        4921
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2280": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4916
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2281": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F3"
    },
    "2284": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2285": {
      "fn": "HettiPool.deposit",
      "offset": [
        4920,
        4921
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2286": {
      "fn": "HettiPool.deposit",
      "offset": [
        4920,
        4921
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2287": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1252"
    },
    "2290": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4884,
        4921
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2291": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2292": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2293": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2294": {
      "fn": "HettiPool.deposit",
      "offset": [
        4884,
        4921
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "fn": "HettiPool.deposit",
      "offset": [
        4712,
        4932
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2298": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2299": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2300": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2301": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2302": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2303": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2304": {
      "fn": "HettiPool.deposit",
      "offset": [
        3246,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2305": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2306": {
      "fn": "HettiPool.deposit",
      "offset": [
        3178,
        4938
      ],
      "op": "POP",
      "path": "5"
    },
    "2307": {
      "fn": "HettiPool.deposit",
      "jump": "o",
      "offset": [
        3178,
        4938
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2308": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10102,
        10276
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2309": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10181,
        10188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2311": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10204,
        10228
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0x90F"
    },
    "2314": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10216,
        10227
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2315": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10204,
        10215
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC9"
    },
    "2318": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        10204,
        10228
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2319": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10204,
        10228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "POP"
    },
    "2322": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 27,
      "value": "0x0"
    },
    "2324": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2325": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2326": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2327": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "2329": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2331": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2332": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2334": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2335": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2336": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2337": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        10245,
        10269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2338": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "o",
      "offset": [
        10102,
        10276
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2339": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2340": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7710,
        7717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2342": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7733,
        7754
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2343": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7757,
        7782
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92F"
    },
    "2346": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7769,
        7781
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2347": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7757,
        7768
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC9"
    },
    "2350": {
      "fn": "HettiPool.getRingHash",
      "jump": "i",
      "offset": [
        7757,
        7782
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2351": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7757,
        7782
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2352": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0x0"
    },
    "2354": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2355": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2356": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2357": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "2359": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2361": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2362": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2363": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2364": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2366": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2367": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2368": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7819
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2369": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2370": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2371": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2372": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2373": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2374": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2375": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2376": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7831
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2377": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2379": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7840
      ],
      "op": "ADD",
      "path": "5"
    },
    "2380": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7840
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2381": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7799,
        7840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2385": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2386": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2387": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "POP",
      "path": "5"
    },
    "2388": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        7618,
        7847
      ],
      "op": "POP",
      "path": "5"
    },
    "2389": {
      "fn": "HettiPool.getRingHash",
      "jump": "o",
      "offset": [
        7618,
        7847
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2390": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7853,
        7970
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2391": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7900,
        7907
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2393": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7932,
        7937
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 29
    },
    "2394": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7932,
        7937
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2395": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2397": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2398": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2407": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2408": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7957,
        7961
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "2409": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2411": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2412": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "ADD",
      "path": "5"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2420": {
      "op": "SHL"
    },
    "2421": {
      "op": "SUB"
    },
    "2422": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7932,
        7937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2423": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7932,
        7937
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2424": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7932,
        7937
      ],
      "op": "AND",
      "path": "5"
    },
    "2425": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7932,
        7937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2426": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7948
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "2431": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7948
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2437": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2439": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2440": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2441": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2442": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "SUB",
      "path": "5"
    },
    "2443": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2444": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2445": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "GAS",
      "path": "5"
    },
    "2446": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2447": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2448": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2449": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2450": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x99F"
    },
    "2453": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2454": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2455": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2457": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2458": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2459": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2460": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2462": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2463": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2464": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "POP",
      "path": "5"
    },
    "2465": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "POP",
      "path": "5"
    },
    "2466": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "POP",
      "path": "5"
    },
    "2467": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "POP",
      "path": "5"
    },
    "2468": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2470": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2471": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2472": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2474": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "NOT",
      "path": "5"
    },
    "2475": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2477": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2478": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "ADD",
      "path": "5"
    },
    "2479": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "AND",
      "path": "5"
    },
    "2480": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2481": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "ADD",
      "path": "5"
    },
    "2482": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2483": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2485": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2486": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "POP",
      "path": "5"
    },
    "2487": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2488": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "ADD",
      "path": "5"
    },
    "2489": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2490": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C3"
    },
    "2493": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2494": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2495": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126A"
    },
    "2498": {
      "fn": "HettiPool.getPoolBalance",
      "jump": "i",
      "offset": [
        7926,
        7963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2499": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7926,
        7963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2500": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7919,
        7963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2501": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7919,
        7963
      ],
      "op": "POP",
      "path": "5"
    },
    "2502": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        7853,
        7970
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2503": {
      "fn": "HettiPool.getPoolBalance",
      "jump": "o",
      "offset": [
        7853,
        7970
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2504": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2505": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9364,
        9371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2507": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9364,
        9371
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2508": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9364,
        9371
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2509": {
      "offset": [
        1284,
        1286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2511": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9412,
        9445
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2512": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9412,
        9445
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2513": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9412,
        9445
      ],
      "op": "SHR",
      "path": "5"
    },
    "2514": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9485,
        9512
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 30,
      "value": "0x30"
    },
    "2516": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9485,
        9512
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2517": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9485,
        9512
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2518": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9485,
        9512
      ],
      "op": "SHR",
      "path": "5"
    },
    "2519": {
      "offset": [
        1406,
        1438
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E4"
    },
    "2522": {
      "offset": [
        1437,
        1438
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2524": {
      "offset": [
        1407,
        1434
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x10000"
    },
    "2528": {
      "offset": [
        1406,
        1438
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CF"
    },
    "2531": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        1406,
        1438
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2532": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        1406,
        1438
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2533": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9526,
        9551
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2534": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9526,
        9551
      ],
      "op": "AND",
      "path": "5"
    },
    "2535": {
      "offset": [
        1330,
        1359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F6"
    },
    "2538": {
      "offset": [
        1358,
        1359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2540": {
      "offset": [
        1331,
        1355
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "2546": {
      "offset": [
        1330,
        1359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CF"
    },
    "2549": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        1330,
        1359
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2550": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        1330,
        1359
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2551": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9565,
        9575
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2552": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9565,
        9596
      ],
      "op": "AND",
      "path": "5"
    },
    "2553": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2554": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "POP",
      "path": "5"
    },
    "2555": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2556": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "POP",
      "path": "5"
    },
    "2557": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2558": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "POP",
      "path": "5"
    },
    "2559": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9464,
        9606
      ],
      "op": "POP",
      "path": "5"
    },
    "2560": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2561": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2562": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2563": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2564": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        9299,
        9613
      ],
      "op": "POP",
      "path": "5"
    },
    "2565": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "o",
      "offset": [
        9299,
        9613
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2566": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2567": {
      "fn": "HettiPool.initialize",
      "offset": [
        2690,
        2691
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 31,
      "value": "0x0"
    },
    "2569": {
      "fn": "HettiPool.initialize",
      "offset": [
        2673,
        2678
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "op": "SUB"
    },
    "2578": {
      "fn": "HettiPool.initialize",
      "offset": [
        2673,
        2678
      ],
      "op": "AND",
      "path": "5"
    },
    "2579": {
      "branch": 58,
      "fn": "HettiPool.initialize",
      "offset": [
        2673,
        2692
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2580": {
      "fn": "HettiPool.initialize",
      "offset": [
        2669,
        2721
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA2F"
    },
    "2583": {
      "branch": 58,
      "fn": "HettiPool.initialize",
      "offset": [
        2669,
        2721
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2584": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2586": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2587": {
      "op": "PUSH3",
      "value": "0xDC149F"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2595": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2596": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2598": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "ADD",
      "path": "5"
    },
    "2599": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2601": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2602": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2603": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2604": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "SUB",
      "path": "5"
    },
    "2605": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2606": {
      "fn": "HettiPool.initialize",
      "offset": [
        2701,
        2721
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2607": {
      "fn": "HettiPool.initialize",
      "offset": [
        2669,
        2721
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2608": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2736
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 32,
      "value": "0x0"
    },
    "2610": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2611": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2618": {
      "op": "SHL"
    },
    "2619": {
      "op": "SUB"
    },
    "2620": {
      "op": "NOT"
    },
    "2621": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "AND",
      "path": "5"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2628": {
      "op": "SHL"
    },
    "2629": {
      "op": "SUB"
    },
    "2630": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2631": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "AND",
      "path": "5"
    },
    "2632": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2633": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2634": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "OR",
      "path": "5"
    },
    "2635": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2636": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2637": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2638": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 33,
      "value": "0x40"
    },
    "2640": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2641": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2642": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2651": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2652": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2653": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2654": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "2659": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2793
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2660": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2662": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2663": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2664": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2665": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2666": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2668": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2669": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2670": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2671": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2672": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2673": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2674": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SUB",
      "path": "5"
    },
    "2675": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2676": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2677": {
      "fn": "HettiPool.initialize",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2678": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "GAS",
      "path": "5"
    },
    "2679": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2680": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2681": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2682": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2683": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA88"
    },
    "2686": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2687": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2688": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2690": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2691": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2692": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2693": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2695": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2696": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2697": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "POP",
      "path": "5"
    },
    "2698": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "POP",
      "path": "5"
    },
    "2699": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "POP",
      "path": "5"
    },
    "2700": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "POP",
      "path": "5"
    },
    "2701": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2703": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2704": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2705": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2707": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "NOT",
      "path": "5"
    },
    "2708": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2710": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2711": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2712": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "AND",
      "path": "5"
    },
    "2713": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2714": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2715": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2716": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2718": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2719": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "POP",
      "path": "5"
    },
    "2720": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2721": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2722": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2723": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAC"
    },
    "2726": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2727": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2728": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1283"
    },
    "2731": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2771,
        2795
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2732": {
      "fn": "HettiPool.initialize",
      "offset": [
        2771,
        2795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2733": {
      "fn": "HettiPool.initialize",
      "offset": [
        2755,
        2795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2735": {
      "fn": "HettiPool.initialize",
      "offset": [
        2755,
        2795
      ],
      "op": "AND",
      "path": "5"
    },
    "2736": {
      "fn": "HettiPool.initialize",
      "offset": [
        2755,
        2768
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2738": {
      "fn": "HettiPool.initialize",
      "offset": [
        2755,
        2795
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2739": {
      "fn": "HettiPool.initialize",
      "offset": [
        2810,
        2819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2741": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2742": {
      "fn": "HettiPool.initialize",
      "offset": [
        2829,
        2850
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2744": {
      "fn": "HettiPool.initialize",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2745": {
      "fn": "HettiPool.initialize",
      "offset": [
        2825,
        2850
      ],
      "op": "LT",
      "path": "5"
    },
    "2746": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2747": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAFE"
    },
    "2750": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2751": {
      "fn": "HettiPool.initialize",
      "offset": [
        2906,
        2919
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x1"
    },
    "2753": {
      "fn": "HettiPool.initialize",
      "offset": [
        2906,
        2919
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2754": {
      "fn": "HettiPool.initialize",
      "offset": [
        2900,
        2919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xACC"
    },
    "2757": {
      "fn": "HettiPool.initialize",
      "offset": [
        2900,
        2919
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2758": {
      "fn": "HettiPool.initialize",
      "offset": [
        2900,
        2902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2760": {
      "fn": "HettiPool.initialize",
      "offset": [
        2900,
        2919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138A"
    },
    "2763": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2900,
        2919
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2764": {
      "fn": "HettiPool.initialize",
      "offset": [
        2900,
        2919
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2765": {
      "fn": "HettiPool.initialize",
      "offset": [
        2889,
        2895
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD7"
    },
    "2768": {
      "fn": "HettiPool.initialize",
      "offset": [
        2894,
        2895
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2769": {
      "fn": "HettiPool.initialize",
      "offset": [
        2889,
        2890
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2771": {
      "fn": "HettiPool.initialize",
      "offset": [
        2889,
        2895
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138A"
    },
    "2774": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2889,
        2895
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2775": {
      "fn": "HettiPool.initialize",
      "offset": [
        2889,
        2895
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2776": {
      "fn": "HettiPool.initialize",
      "offset": [
        2888,
        2920
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE1"
    },
    "2779": {
      "fn": "HettiPool.initialize",
      "offset": [
        2888,
        2920
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2780": {
      "fn": "HettiPool.initialize",
      "offset": [
        2888,
        2920
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2781": {
      "fn": "HettiPool.initialize",
      "offset": [
        2888,
        2920
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1396"
    },
    "2784": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2888,
        2920
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2785": {
      "fn": "HettiPool.initialize",
      "offset": [
        2888,
        2920
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2786": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2788": {
      "fn": "HettiPool.initialize",
      "offset": [
        2883,
        2884
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2789": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2791": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2792": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "LT",
      "path": "5"
    },
    "2793": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF4"
    },
    "2796": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2797": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF4"
    },
    "2800": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E6"
    },
    "2803": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        2868,
        2885
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2804": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2805": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2885
      ],
      "op": "ADD",
      "path": "5"
    },
    "2806": {
      "fn": "HettiPool.initialize",
      "offset": [
        2868,
        2920
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2807": {
      "fn": "HettiPool.initialize",
      "offset": [
        2963,
        2966
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x1"
    },
    "2809": {
      "fn": "HettiPool.initialize",
      "offset": [
        2963,
        2966
      ],
      "op": "ADD",
      "path": "5"
    },
    "2810": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB5"
    },
    "2813": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2814": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2815": {
      "fn": "HettiPool.initialize",
      "offset": [
        2806,
        2991
      ],
      "op": "POP",
      "path": "5"
    },
    "2816": {
      "fn": "HettiPool.initialize",
      "offset": [
        2616,
        2997
      ],
      "op": "POP",
      "path": "5"
    },
    "2817": {
      "fn": "HettiPool.initialize",
      "jump": "o",
      "offset": [
        2616,
        2997
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2818": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2819": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8881,
        8920
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB0A"
    },
    "2822": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8881,
        8920
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAC"
    },
    "2825": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        8881,
        8920
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2826": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8881,
        8920
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2827": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8936,
        8960
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0xB13"
    },
    "2830": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8948,
        8959
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2831": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8936,
        8947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC9"
    },
    "2834": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        8936,
        8960
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2835": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8936,
        8960
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2836": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8936,
        8960
      ],
      "op": "POP",
      "path": "5"
    },
    "2837": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8971,
        9021
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB1C"
    },
    "2840": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8971,
        9021
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAC"
    },
    "2843": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        8971,
        9021
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2844": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8971,
        9021
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2845": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9037,
        9043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2847": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2848": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2850": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9049,
        9050
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2851": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9049,
        9073
      ],
      "op": "LT",
      "path": "5"
    },
    "2852": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2853": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC1"
    },
    "2856": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2857": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 37,
      "value": "0x0"
    },
    "2859": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2860": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2861": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2862": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "2864": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2866": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2867": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2868": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2869": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2871": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2872": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2873": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9139
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2874": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2875": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2876": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2877": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2878": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2879": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2880": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2881": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9146
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2882": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2883": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2884": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2885": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2887": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9157
      ],
      "op": "ADD",
      "path": "5"
    },
    "2888": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2889": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2890": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2891": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2892": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2893": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9163
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2894": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9104
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2895": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9121,
        9160
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2896": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2898": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2899": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "LT",
      "path": "5"
    },
    "2900": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5F"
    },
    "2903": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2904": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5F"
    },
    "2907": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E6"
    },
    "2910": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        9094,
        9107
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2911": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2912": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2914": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2915": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2916": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "MUL",
      "path": "5"
    },
    "2917": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2918": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2919": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2920": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "ADD",
      "path": "5"
    },
    "2921": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9107
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2922": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9164
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2923": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9164
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2924": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9164
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2925": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9094,
        9164
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2926": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9108,
        9109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2928": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "DUP7",
      "path": "5",
      "statement": 38
    },
    "2929": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2930": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2931": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "2933": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2934": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2935": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2937": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2938": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2939": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9223
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2940": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2941": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2942": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2943": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2944": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2945": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2946": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2947": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9230
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2948": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2949": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2950": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2951": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2953": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9241
      ],
      "op": "ADD",
      "path": "5"
    },
    "2954": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2955": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2956": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2957": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2958": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9245,
        9246
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2960": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9247
      ],
      "op": "ADD",
      "path": "5"
    },
    "2961": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9247
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2962": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2963": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9205,
        9244
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2964": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2966": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2967": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "LT",
      "path": "5"
    },
    "2968": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA3"
    },
    "2971": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2972": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA3"
    },
    "2975": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E6"
    },
    "2978": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        9178,
        9191
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2979": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2980": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2982": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "MUL",
      "path": "5"
    },
    "2983": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "ADD",
      "path": "5"
    },
    "2984": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9191
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2985": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9192,
        9193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2987": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9194
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2989": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9194
      ],
      "op": "MUL",
      "path": "5"
    },
    "2990": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9194
      ],
      "op": "ADD",
      "path": "5"
    },
    "2991": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9178,
        9248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2992": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 39
    },
    "2993": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB9"
    },
    "2996": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2997": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13B5"
    },
    "3000": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        9075,
        9078
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3001": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3002": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3003": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "POP",
      "path": "5"
    },
    "3004": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9075,
        9078
      ],
      "op": "POP",
      "path": "5"
    },
    "3005": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB1F"
    },
    "3008": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3009": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9032,
        9259
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        9276,
        9286
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 40
    },
    "3012": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        8793,
        9293
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "op": "POP"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "o",
      "offset": [
        8793,
        9293
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3017": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8260,
        8787
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3018": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8329,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3020": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8329,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3021": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8329,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3022": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3023": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8407,
        8409
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3025": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8403,
        8404
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3026": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8403,
        8409
      ],
      "op": "LT",
      "path": "5"
    },
    "3027": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3028": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC04"
    },
    "3031": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3032": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8451,
        8458
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3033": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3035": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8445,
        8446
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3036": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3038": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3039": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "LT",
      "path": "5"
    },
    "3040": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEB"
    },
    "3043": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3044": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEB"
    },
    "3047": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E6"
    },
    "3050": {
      "fn": "HettiPool.amountCheck",
      "jump": "i",
      "offset": [
        8430,
        8447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3051": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3052": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "ADD",
      "path": "5"
    },
    "3053": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8447
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3054": {
      "branch": 59,
      "fn": "HettiPool.amountCheck",
      "offset": [
        8430,
        8458
      ],
      "op": "SUB",
      "path": "5"
    },
    "3055": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8426,
        8507
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF7"
    },
    "3058": {
      "branch": 59,
      "fn": "HettiPool.amountCheck",
      "offset": [
        8426,
        8507
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3059": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8488,
        8492
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 41,
      "value": "0x1"
    },
    "3061": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8478,
        8492
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3062": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8478,
        8492
      ],
      "op": "POP",
      "path": "5"
    },
    "3063": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8426,
        8507
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3064": {
      "branch": 60,
      "fn": "HettiPool.amountCheck",
      "offset": [
        8524,
        8531
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3065": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8551,
        8556
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 42,
      "value": "0xC04"
    },
    "3068": {
      "branch": 60,
      "fn": "HettiPool.amountCheck",
      "offset": [
        8520,
        8571
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3069": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8613,
        8616
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0x1"
    },
    "3071": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8613,
        8616
      ],
      "op": "ADD",
      "path": "5"
    },
    "3072": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBCE"
    },
    "3075": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3076": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3077": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8383,
        8641
      ],
      "op": "POP",
      "path": "5"
    },
    "3078": {
      "branch": 61,
      "fn": "HettiPool.amountCheck",
      "offset": [
        8726,
        8733
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 44
    },
    "3079": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC47"
    },
    "3082": {
      "branch": 61,
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3083": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3085": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3086": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3092": {
      "op": "SHL"
    },
    "3093": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3094": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3097": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3099": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3100": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "ADD",
      "path": "5"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3106": {
      "op": "DUP3"
    },
    "3107": {
      "op": "ADD"
    },
    "3108": {
      "op": "MSTORE"
    },
    "3109": {
      "op": "PUSH18",
      "value": "0x105353D5539517D393D517D0531313D5D151"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3133": {
      "op": "DUP3"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "op": "MSTORE"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3138": {
      "op": "ADD"
    },
    "3139": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x326"
    },
    "3142": {
      "op": "JUMP"
    },
    "3143": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8718,
        8756
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3144": {
      "op": "POP"
    },
    "3145": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8773,
        8780
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 45
    },
    "3146": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8773,
        8780
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3147": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        8260,
        8787
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3148": {
      "op": "POP"
    },
    "3149": {
      "fn": "HettiPool.amountCheck",
      "jump": "o",
      "offset": [
        8260,
        8787
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3150": {
      "fn": "HettiPool.hashRing",
      "offset": [
        6827,
        7612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3151": {
      "fn": "HettiPool.hashRing",
      "offset": [
        6918,
        6925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3153": {
      "fn": "HettiPool.hashRing",
      "offset": [
        6941,
        6991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC58"
    },
    "3156": {
      "fn": "HettiPool.hashRing",
      "offset": [
        6941,
        6991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD9"
    },
    "3159": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        6941,
        6991
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3160": {
      "fn": "HettiPool.hashRing",
      "offset": [
        6941,
        6991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3161": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7001,
        7022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3163": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7025,
        7050
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC63"
    },
    "3166": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7037,
        7049
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3167": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7025,
        7036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC9"
    },
    "3170": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        7025,
        7050
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3171": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7025,
        7050
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3172": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7061,
        7078
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3174": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3175": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3176": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3177": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "3179": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3181": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3182": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3183": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3184": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3186": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3187": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3188": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7101
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3189": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "DUP9",
      "path": "5"
    },
    "3190": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3191": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3192": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3193": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3194": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3195": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3196": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7081,
        7113
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3197": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7001,
        7050
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3198": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7001,
        7050
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3201": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3203": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7142,
        7143
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3204": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7142,
        7166
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3206": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7142,
        7166
      ],
      "op": "AND",
      "path": "5"
    },
    "3207": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7142,
        7166
      ],
      "op": "LT",
      "path": "5"
    },
    "3208": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3209": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCED"
    },
    "3212": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3213": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 46,
      "value": "0xFF"
    },
    "3215": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3216": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "AND",
      "path": "5"
    },
    "3217": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3219": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3220": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3221": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3222": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7214
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3224": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7214
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3225": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7214
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3226": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7214
      ],
      "op": "ADD",
      "path": "5"
    },
    "3227": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3229": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3230": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3232": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3233": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3234": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3235": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3236": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3237": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3238": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3239": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3240": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "ADD",
      "path": "5"
    },
    "3241": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3242": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3243": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3244": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3245": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3246": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3247": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3248": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7214
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3249": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7199,
        7217
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3250": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3251": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3252": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3253": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3254": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3255": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3256": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3258": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "ADD",
      "path": "5"
    },
    "3259": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3260": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3262": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "ADD",
      "path": "5"
    },
    "3263": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3264": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3265": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3266": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "GT",
      "path": "5"
    },
    "3267": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCB3"
    },
    "3270": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3271": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "POP",
      "path": "5"
    },
    "3272": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "POP",
      "path": "5"
    },
    "3273": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "POP",
      "path": "5"
    },
    "3274": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "POP",
      "path": "5"
    },
    "3275": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "POP",
      "path": "5"
    },
    "3276": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7193
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3277": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7194,
        7195
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3278": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3280": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "AND",
      "path": "5"
    },
    "3281": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3283": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3284": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "LT",
      "path": "5"
    },
    "3285": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE0"
    },
    "3288": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3289": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE0"
    },
    "3292": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E6"
    },
    "3295": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        7183,
        7196
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3296": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3297": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3299": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "MUL",
      "path": "5"
    },
    "3300": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7196
      ],
      "op": "ADD",
      "path": "5"
    },
    "3301": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7183,
        7217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3302": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7260,
        7263
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 47,
      "value": "0x1"
    },
    "3304": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7260,
        7263
      ],
      "op": "ADD",
      "path": "5"
    },
    "3305": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC80"
    },
    "3308": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3309": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3310": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7124,
        7288
      ],
      "op": "POP",
      "path": "5"
    },
    "3311": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7299,
        7316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3313": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7319,
        7332
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3314": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7336,
        7374
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCFE"
    },
    "3317": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7354,
        7358
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3318": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7354,
        7373
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3320": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7354,
        7373
      ],
      "op": "ADD",
      "path": "5"
    },
    "3321": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7354,
        7373
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3322": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7336,
        7353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "3325": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        7336,
        7374
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3326": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7336,
        7374
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3327": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7298,
        7374
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3328": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7298,
        7374
      ],
      "op": "POP",
      "path": "5"
    },
    "3329": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7298,
        7374
      ],
      "op": "POP",
      "path": "5"
    },
    "3330": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7298,
        7374
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3331": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7298,
        7374
      ],
      "op": "POP",
      "path": "5"
    },
    "3332": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7385,
        7399
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3334": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7457,
        7458
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3336": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7442,
        7454
      ],
      "op": "NUMBER",
      "path": "5"
    },
    "3337": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7442,
        7458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD12"
    },
    "3340": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7442,
        7458
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3341": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7442,
        7458
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3342": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7442,
        7458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CF"
    },
    "3345": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        7442,
        7458
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3346": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7442,
        7458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3347": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7495,
        7515
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3348": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7495,
        7515
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3349": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3351": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3352": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2B"
    },
    "3355": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3356": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7432,
        7459
      ],
      "op": "BLOCKHASH",
      "path": "5"
    },
    "3357": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7432,
        7459
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3358": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7473,
        7481
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3359": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7473,
        7481
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3360": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7529,
        7541
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3361": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7529,
        7541
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3362": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7555,
        7565
      ],
      "op": "DUP12",
      "path": "5"
    },
    "3363": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7555,
        7565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3364": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3366": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "ADD",
      "path": "5"
    },
    "3367": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13CE"
    },
    "3370": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        7402,
        7575
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3371": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3372": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3374": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3375": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3376": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3377": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3378": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "SUB",
      "path": "5"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3381": {
      "op": "NOT"
    },
    "3382": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "ADD",
      "path": "5"
    },
    "3383": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3384": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3385": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3386": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3387": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3388": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 48
    },
    "3389": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3390": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7402,
        7575
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3392": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3393": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3394": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "ADD",
      "path": "5"
    },
    "3395": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3396": {
      "fn": "HettiPool.hashRing",
      "offset": [
        7593,
        7605
      ],
      "op": "SWAP10",
      "path": "5"
    },
    "3397": {
      "fn": "HettiPool.hashRing",
      "offset": [
        6827,
        7612
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "3398": {
      "op": "POP"
    },
    "3399": {
      "op": "POP"
    },
    "3400": {
      "op": "POP"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "op": "POP"
    },
    "3403": {
      "op": "POP"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "op": "POP"
    },
    "3407": {
      "fn": "HettiPool.hashRing",
      "jump": "o",
      "offset": [
        6827,
        7612
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3408": {
      "op": "JUMPDEST"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3411": {
      "op": "MLOAD"
    },
    "3412": {
      "op": "DUP1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3418": {
      "op": "MSTORE"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3422": {
      "op": "SWAP1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3425": {
      "op": "DUP3"
    },
    "3426": {
      "op": "MUL"
    },
    "3427": {
      "op": "DUP1"
    },
    "3428": {
      "op": "CALLDATASIZE"
    },
    "3429": {
      "op": "DUP4"
    },
    "3430": {
      "op": "CALLDATACOPY"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "op": "SWAP2"
    },
    "3433": {
      "op": "SWAP3"
    },
    "3434": {
      "op": "SWAP2"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "jump": "o",
      "op": "JUMP"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3442": {
      "op": "DUP2"
    },
    "3443": {
      "op": "ADD"
    },
    "3444": {
      "op": "SWAP3"
    },
    "3445": {
      "op": "DUP3"
    },
    "3446": {
      "op": "ISZERO"
    },
    "3447": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3450": {
      "op": "JUMPI"
    },
    "3451": {
      "op": "SWAP2"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "op": "MUL"
    },
    "3455": {
      "op": "DUP3"
    },
    "3456": {
      "op": "ADD"
    },
    "3457": {
      "op": "JUMPDEST"
    },
    "3458": {
      "op": "DUP3"
    },
    "3459": {
      "op": "DUP2"
    },
    "3460": {
      "op": "GT"
    },
    "3461": {
      "op": "ISZERO"
    },
    "3462": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3465": {
      "op": "JUMPI"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "MLOAD"
    },
    "3468": {
      "op": "DUP3"
    },
    "3469": {
      "op": "SSTORE"
    },
    "3470": {
      "op": "SWAP2"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3473": {
      "op": "ADD"
    },
    "3474": {
      "op": "SWAP2"
    },
    "3475": {
      "op": "SWAP1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "SWAP1"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "3483": {
      "op": "JUMP"
    },
    "3484": {
      "op": "JUMPDEST"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "op": "PUSH2",
      "value": "0xDA8"
    },
    "3489": {
      "op": "SWAP3"
    },
    "3490": {
      "op": "SWAP2"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "PUSH2",
      "value": "0xE06"
    },
    "3495": {
      "jump": "i",
      "op": "JUMP"
    },
    "3496": {
      "op": "JUMPDEST"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "op": "SWAP1"
    },
    "3499": {
      "jump": "o",
      "op": "JUMP"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3503": {
      "op": "MLOAD"
    },
    "3504": {
      "op": "DUP1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3507": {
      "op": "ADD"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "DUP1"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3514": {
      "op": "SWAP1"
    },
    "3515": {
      "op": "JUMPDEST"
    },
    "3516": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3519": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3522": {
      "jump": "i",
      "op": "JUMP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "DUP2"
    },
    "3525": {
      "op": "MSTORE"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "SWAP1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "SWAP1"
    },
    "3533": {
      "op": "SUB"
    },
    "3534": {
      "op": "SWAP1"
    },
    "3535": {
      "op": "DUP2"
    },
    "3536": {
      "op": "PUSH2",
      "value": "0xDBB"
    },
    "3539": {
      "op": "JUMPI"
    },
    "3540": {
      "op": "SWAP1"
    },
    "3541": {
      "op": "POP"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "SWAP1"
    },
    "3544": {
      "jump": "o",
      "op": "JUMP"
    },
    "3545": {
      "op": "JUMPDEST"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3548": {
      "op": "MLOAD"
    },
    "3549": {
      "op": "DUP1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3555": {
      "op": "MSTORE"
    },
    "3556": {
      "op": "DUP1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3559": {
      "op": "SWAP1"
    },
    "3560": {
      "op": "JUMPDEST"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xDF0"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3567": {
      "jump": "i",
      "op": "JUMP"
    },
    "3568": {
      "op": "JUMPDEST"
    },
    "3569": {
      "op": "DUP2"
    },
    "3570": {
      "op": "MSTORE"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3573": {
      "op": "ADD"
    },
    "3574": {
      "op": "SWAP1"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3577": {
      "op": "SWAP1"
    },
    "3578": {
      "op": "SUB"
    },
    "3579": {
      "op": "SWAP1"
    },
    "3580": {
      "op": "DUP2"
    },
    "3581": {
      "op": "PUSH2",
      "value": "0xDE8"
    },
    "3584": {
      "op": "JUMPI"
    },
    "3585": {
      "op": "SWAP1"
    },
    "3586": {
      "op": "POP"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "op": "SWAP1"
    },
    "3589": {
      "jump": "o",
      "op": "JUMP"
    },
    "3590": {
      "op": "JUMPDEST"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "DUP1"
    },
    "3593": {
      "op": "DUP3"
    },
    "3594": {
      "op": "GT"
    },
    "3595": {
      "op": "ISZERO"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xDA8"
    },
    "3599": {
      "op": "JUMPI"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3602": {
      "op": "DUP2"
    },
    "3603": {
      "op": "SSTORE"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3606": {
      "op": "ADD"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3610": {
      "op": "JUMP"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3616": {
      "op": "DUP3"
    },
    "3617": {
      "op": "DUP5"
    },
    "3618": {
      "op": "SUB"
    },
    "3619": {
      "op": "SLT"
    },
    "3620": {
      "op": "ISZERO"
    },
    "3621": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3624": {
      "op": "JUMPI"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3627": {
      "op": "DUP1"
    },
    "3628": {
      "op": "REVERT"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "CALLDATALOAD"
    },
    "3632": {
      "op": "SWAP2"
    },
    "3633": {
      "op": "SWAP1"
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "jump": "o",
      "op": "JUMP"
    },
    "3636": {
      "op": "JUMPDEST"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3643": {
      "op": "SHL"
    },
    "3644": {
      "op": "SUB"
    },
    "3645": {
      "op": "DUP2"
    },
    "3646": {
      "op": "AND"
    },
    "3647": {
      "op": "DUP2"
    },
    "3648": {
      "op": "EQ"
    },
    "3649": {
      "op": "PUSH2",
      "value": "0xE49"
    },
    "3652": {
      "op": "JUMPI"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3655": {
      "op": "DUP1"
    },
    "3656": {
      "op": "REVERT"
    },
    "3657": {
      "op": "JUMPDEST"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "jump": "o",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3668": {
      "op": "SHL"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3671": {
      "op": "MSTORE"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3681": {
      "op": "REVERT"
    },
    "3682": {
      "op": "JUMPDEST"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3685": {
      "op": "MLOAD"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3688": {
      "op": "DUP3"
    },
    "3689": {
      "op": "ADD"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3692": {
      "op": "NOT"
    },
    "3693": {
      "op": "AND"
    },
    "3694": {
      "op": "DUP2"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3705": {
      "op": "DUP2"
    },
    "3706": {
      "op": "GT"
    },
    "3707": {
      "op": "DUP3"
    },
    "3708": {
      "op": "DUP3"
    },
    "3709": {
      "op": "LT"
    },
    "3710": {
      "op": "OR"
    },
    "3711": {
      "op": "ISZERO"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xE8B"
    },
    "3715": {
      "op": "JUMPI"
    },
    "3716": {
      "op": "PUSH2",
      "value": "0xE8B"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3722": {
      "jump": "i",
      "op": "JUMP"
    },
    "3723": {
      "op": "JUMPDEST"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "SWAP2"
    },
    "3728": {
      "op": "SWAP1"
    },
    "3729": {
      "op": "POP"
    },
    "3730": {
      "jump": "o",
      "op": "JUMP"
    },
    "3731": {
      "op": "JUMPDEST"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3734": {
      "op": "DUP3"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3737": {
      "op": "DUP4"
    },
    "3738": {
      "op": "ADD"
    },
    "3739": {
      "op": "SLT"
    },
    "3740": {
      "op": "PUSH2",
      "value": "0xEA4"
    },
    "3743": {
      "op": "JUMPI"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3746": {
      "op": "DUP1"
    },
    "3747": {
      "op": "REVERT"
    },
    "3748": {
      "op": "JUMPDEST"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3751": {
      "op": "MLOAD"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3754": {
      "op": "DUP2"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "DUP2"
    },
    "3757": {
      "op": "DUP2"
    },
    "3758": {
      "op": "LT"
    },
    "3759": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3768": {
      "op": "DUP3"
    },
    "3769": {
      "op": "GT"
    },
    "3770": {
      "op": "OR"
    },
    "3771": {
      "op": "ISZERO"
    },
    "3772": {
      "op": "PUSH2",
      "value": "0xEC7"
    },
    "3775": {
      "op": "JUMPI"
    },
    "3776": {
      "op": "PUSH2",
      "value": "0xEC7"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3782": {
      "jump": "i",
      "op": "JUMP"
    },
    "3783": {
      "op": "JUMPDEST"
    },
    "3784": {
      "op": "DUP1"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3787": {
      "op": "MSTORE"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3792": {
      "op": "DUP5"
    },
    "3793": {
      "op": "ADD"
    },
    "3794": {
      "op": "DUP6"
    },
    "3795": {
      "op": "DUP2"
    },
    "3796": {
      "op": "GT"
    },
    "3797": {
      "op": "ISZERO"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3801": {
      "op": "JUMPI"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3804": {
      "op": "DUP1"
    },
    "3805": {
      "op": "REVERT"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "DUP5"
    },
    "3808": {
      "op": "JUMPDEST"
    },
    "3809": {
      "op": "DUP2"
    },
    "3810": {
      "op": "DUP2"
    },
    "3811": {
      "op": "LT"
    },
    "3812": {
      "op": "ISZERO"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xEF8"
    },
    "3816": {
      "op": "JUMPI"
    },
    "3817": {
      "op": "DUP1"
    },
    "3818": {
      "op": "CALLDATALOAD"
    },
    "3819": {
      "op": "DUP4"
    },
    "3820": {
      "op": "MSTORE"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3823": {
      "op": "SWAP3"
    },
    "3824": {
      "op": "DUP4"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "SWAP3"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3831": {
      "op": "JUMP"
    },
    "3832": {
      "op": "JUMPDEST"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "op": "SWAP2"
    },
    "3835": {
      "op": "SWAP6"
    },
    "3836": {
      "op": "SWAP5"
    },
    "3837": {
      "op": "POP"
    },
    "3838": {
      "op": "POP"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "jump": "o",
      "op": "JUMP"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3846": {
      "op": "DUP1"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3849": {
      "op": "DUP1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3855": {
      "op": "DUP8"
    },
    "3856": {
      "op": "DUP10"
    },
    "3857": {
      "op": "SUB"
    },
    "3858": {
      "op": "SLT"
    },
    "3859": {
      "op": "ISZERO"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3863": {
      "op": "JUMPI"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3866": {
      "op": "DUP1"
    },
    "3867": {
      "op": "REVERT"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "DUP7"
    },
    "3870": {
      "op": "CALLDATALOAD"
    },
    "3871": {
      "op": "PUSH2",
      "value": "0xF27"
    },
    "3874": {
      "op": "DUP2"
    },
    "3875": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "3878": {
      "jump": "i",
      "op": "JUMP"
    },
    "3879": {
      "op": "JUMPDEST"
    },
    "3880": {
      "op": "SWAP6"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3884": {
      "op": "DUP8"
    },
    "3885": {
      "op": "DUP2"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "CALLDATALOAD"
    },
    "3888": {
      "op": "SWAP6"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3892": {
      "op": "DUP9"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "CALLDATALOAD"
    },
    "3895": {
      "op": "SWAP5"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3899": {
      "op": "DUP9"
    },
    "3900": {
      "op": "ADD"
    },
    "3901": {
      "op": "CALLDATALOAD"
    },
    "3902": {
      "op": "SWAP4"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xF4C"
    },
    "3907": {
      "op": "DUP10"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3910": {
      "op": "DUP11"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "3915": {
      "jump": "i",
      "op": "JUMP"
    },
    "3916": {
      "op": "JUMPDEST"
    },
    "3917": {
      "op": "SWAP3"
    },
    "3918": {
      "op": "POP"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3921": {
      "op": "DUP9"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "CALLDATALOAD"
    },
    "3924": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3933": {
      "op": "DUP1"
    },
    "3934": {
      "op": "DUP3"
    },
    "3935": {
      "op": "GT"
    },
    "3936": {
      "op": "ISZERO"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xF69"
    },
    "3940": {
      "op": "JUMPI"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3943": {
      "op": "DUP1"
    },
    "3944": {
      "op": "REVERT"
    },
    "3945": {
      "op": "JUMPDEST"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "DUP11"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "SWAP2"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "op": "DUP11"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3954": {
      "op": "DUP4"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "SLT"
    },
    "3957": {
      "op": "PUSH2",
      "value": "0xF7D"
    },
    "3960": {
      "op": "JUMPI"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3963": {
      "op": "DUP1"
    },
    "3964": {
      "op": "REVERT"
    },
    "3965": {
      "op": "JUMPDEST"
    },
    "3966": {
      "op": "DUP2"
    },
    "3967": {
      "op": "CALLDATALOAD"
    },
    "3968": {
      "op": "DUP2"
    },
    "3969": {
      "op": "DUP2"
    },
    "3970": {
      "op": "GT"
    },
    "3971": {
      "op": "ISZERO"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3982": {
      "jump": "i",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "DUP1"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "SWAP2"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xFA0"
    },
    "3993": {
      "op": "DUP5"
    },
    "3994": {
      "op": "DUP4"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "PUSH2",
      "value": "0xE62"
    },
    "3999": {
      "jump": "i",
      "op": "JUMP"
    },
    "4000": {
      "op": "JUMPDEST"
    },
    "4001": {
      "op": "DUP2"
    },
    "4002": {
      "op": "DUP2"
    },
    "4003": {
      "op": "MSTORE"
    },
    "4004": {
      "op": "SWAP2"
    },
    "4005": {
      "op": "DUP4"
    },
    "4006": {
      "op": "ADD"
    },
    "4007": {
      "op": "DUP5"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "op": "SWAP2"
    },
    "4010": {
      "op": "DUP5"
    },
    "4011": {
      "op": "DUP2"
    },
    "4012": {
      "op": "ADD"
    },
    "4013": {
      "op": "SWAP1"
    },
    "4014": {
      "op": "DUP14"
    },
    "4015": {
      "op": "DUP5"
    },
    "4016": {
      "op": "GT"
    },
    "4017": {
      "op": "ISZERO"
    },
    "4018": {
      "op": "PUSH2",
      "value": "0xFBA"
    },
    "4021": {
      "op": "JUMPI"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4024": {
      "op": "DUP1"
    },
    "4025": {
      "op": "REVERT"
    },
    "4026": {
      "op": "JUMPDEST"
    },
    "4027": {
      "op": "SWAP4"
    },
    "4028": {
      "op": "DUP6"
    },
    "4029": {
      "op": "ADD"
    },
    "4030": {
      "op": "SWAP4"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "op": "DUP4"
    },
    "4033": {
      "op": "DUP6"
    },
    "4034": {
      "op": "LT"
    },
    "4035": {
      "op": "ISZERO"
    },
    "4036": {
      "op": "PUSH2",
      "value": "0xFD8"
    },
    "4039": {
      "op": "JUMPI"
    },
    "4040": {
      "op": "DUP5"
    },
    "4041": {
      "op": "CALLDATALOAD"
    },
    "4042": {
      "op": "DUP3"
    },
    "4043": {
      "op": "MSTORE"
    },
    "4044": {
      "op": "SWAP4"
    },
    "4045": {
      "op": "DUP6"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "SWAP4"
    },
    "4048": {
      "op": "SWAP1"
    },
    "4049": {
      "op": "DUP6"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "SWAP1"
    },
    "4052": {
      "op": "PUSH2",
      "value": "0xFBF"
    },
    "4055": {
      "op": "JUMP"
    },
    "4056": {
      "op": "JUMPDEST"
    },
    "4057": {
      "op": "DUP1"
    },
    "4058": {
      "op": "SWAP7"
    },
    "4059": {
      "op": "POP"
    },
    "4060": {
      "op": "POP"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "op": "POP"
    },
    "4064": {
      "op": "POP"
    },
    "4065": {
      "op": "POP"
    },
    "4066": {
      "op": "SWAP3"
    },
    "4067": {
      "op": "SWAP6"
    },
    "4068": {
      "op": "POP"
    },
    "4069": {
      "op": "SWAP3"
    },
    "4070": {
      "op": "SWAP6"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "SWAP3"
    },
    "4073": {
      "op": "SWAP6"
    },
    "4074": {
      "jump": "o",
      "op": "JUMP"
    },
    "4075": {
      "op": "JUMPDEST"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4078": {
      "op": "DUP1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4081": {
      "op": "DUP4"
    },
    "4082": {
      "op": "DUP6"
    },
    "4083": {
      "op": "SUB"
    },
    "4084": {
      "op": "SLT"
    },
    "4085": {
      "op": "ISZERO"
    },
    "4086": {
      "op": "PUSH2",
      "value": "0xFFE"
    },
    "4089": {
      "op": "JUMPI"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4092": {
      "op": "DUP1"
    },
    "4093": {
      "op": "REVERT"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "POP"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "op": "DUP1"
    },
    "4098": {
      "op": "CALLDATALOAD"
    },
    "4099": {
      "op": "SWAP3"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4102": {
      "op": "SWAP1"
    },
    "4103": {
      "op": "SWAP2"
    },
    "4104": {
      "op": "ADD"
    },
    "4105": {
      "op": "CALLDATALOAD"
    },
    "4106": {
      "op": "SWAP2"
    },
    "4107": {
      "op": "POP"
    },
    "4108": {
      "jump": "o",
      "op": "JUMP"
    },
    "4109": {
      "op": "JUMPDEST"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "DUP1"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4115": {
      "op": "DUP4"
    },
    "4116": {
      "op": "DUP6"
    },
    "4117": {
      "op": "SUB"
    },
    "4118": {
      "op": "SLT"
    },
    "4119": {
      "op": "ISZERO"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4123": {
      "op": "JUMPI"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4126": {
      "op": "DUP1"
    },
    "4127": {
      "op": "REVERT"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "DUP3"
    },
    "4130": {
      "op": "CALLDATALOAD"
    },
    "4131": {
      "op": "SWAP2"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "4136": {
      "op": "DUP5"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4139": {
      "op": "DUP6"
    },
    "4140": {
      "op": "ADD"
    },
    "4141": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "4144": {
      "jump": "i",
      "op": "JUMP"
    },
    "4145": {
      "op": "JUMPDEST"
    },
    "4146": {
      "op": "SWAP1"
    },
    "4147": {
      "op": "POP"
    },
    "4148": {
      "op": "SWAP3"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "op": "SWAP3"
    },
    "4151": {
      "op": "SWAP1"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "jump": "o",
      "op": "JUMP"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "DUP5"
    },
    "4161": {
      "op": "SUB"
    },
    "4162": {
      "op": "SLT"
    },
    "4163": {
      "op": "ISZERO"
    },
    "4164": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "4167": {
      "op": "JUMPI"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4170": {
      "op": "DUP1"
    },
    "4171": {
      "op": "REVERT"
    },
    "4172": {
      "op": "JUMPDEST"
    },
    "4173": {
      "op": "DUP2"
    },
    "4174": {
      "op": "CALLDATALOAD"
    },
    "4175": {
      "op": "PUSH2",
      "value": "0x1057"
    },
    "4178": {
      "op": "DUP2"
    },
    "4179": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "4182": {
      "jump": "i",
      "op": "JUMP"
    },
    "4183": {
      "op": "JUMPDEST"
    },
    "4184": {
      "op": "SWAP4"
    },
    "4185": {
      "op": "SWAP3"
    },
    "4186": {
      "op": "POP"
    },
    "4187": {
      "op": "POP"
    },
    "4188": {
      "op": "POP"
    },
    "4189": {
      "jump": "o",
      "op": "JUMP"
    },
    "4190": {
      "op": "JUMPDEST"
    },
    "4191": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4194": {
      "op": "DUP2"
    },
    "4195": {
      "op": "ADD"
    },
    "4196": {
      "op": "DUP2"
    },
    "4197": {
      "op": "DUP4"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4200": {
      "op": "DUP1"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4204": {
      "op": "DUP2"
    },
    "4205": {
      "op": "LT"
    },
    "4206": {
      "op": "ISZERO"
    },
    "4207": {
      "op": "PUSH2",
      "value": "0x10AF"
    },
    "4210": {
      "op": "JUMPI"
    },
    "4211": {
      "op": "DUP3"
    },
    "4212": {
      "op": "MLOAD"
    },
    "4213": {
      "op": "DUP5"
    },
    "4214": {
      "op": "DUP4"
    },
    "4215": {
      "op": "JUMPDEST"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4218": {
      "op": "DUP2"
    },
    "4219": {
      "op": "LT"
    },
    "4220": {
      "op": "ISZERO"
    },
    "4221": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4224": {
      "op": "JUMPI"
    },
    "4225": {
      "op": "DUP3"
    },
    "4226": {
      "op": "MLOAD"
    },
    "4227": {
      "op": "DUP3"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4231": {
      "op": "SWAP3"
    },
    "4232": {
      "op": "DUP4"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "op": "SWAP3"
    },
    "4235": {
      "op": "SWAP1"
    },
    "4236": {
      "op": "SWAP2"
    },
    "4237": {
      "op": "ADD"
    },
    "4238": {
      "op": "SWAP1"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "ADD"
    },
    "4242": {
      "op": "PUSH2",
      "value": "0x1077"
    },
    "4245": {
      "op": "JUMP"
    },
    "4246": {
      "op": "JUMPDEST"
    },
    "4247": {
      "op": "POP"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "op": "POP"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4252": {
      "op": "SWAP4"
    },
    "4253": {
      "op": "SWAP1"
    },
    "4254": {
      "op": "SWAP4"
    },
    "4255": {
      "op": "ADD"
    },
    "4256": {
      "op": "SWAP3"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4259": {
      "op": "SWAP3"
    },
    "4260": {
      "op": "SWAP1"
    },
    "4261": {
      "op": "SWAP3"
    },
    "4262": {
      "op": "ADD"
    },
    "4263": {
      "op": "SWAP2"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "PUSH2",
      "value": "0x1069"
    },
    "4270": {
      "op": "JUMP"
    },
    "4271": {
      "op": "JUMPDEST"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "op": "POP"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "op": "SWAP3"
    },
    "4277": {
      "op": "SWAP2"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "jump": "o",
      "op": "JUMP"
    },
    "4281": {
      "op": "JUMPDEST"
    },
    "4282": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4297": {
      "op": "MSTORE"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4302": {
      "op": "REVERT"
    },
    "4303": {
      "op": "JUMPDEST"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "DUP3"
    },
    "4308": {
      "op": "LT"
    },
    "4309": {
      "op": "ISZERO"
    },
    "4310": {
      "op": "PUSH2",
      "value": "0x10E1"
    },
    "4313": {
      "op": "JUMPI"
    },
    "4314": {
      "op": "PUSH2",
      "value": "0x10E1"
    },
    "4317": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4320": {
      "jump": "i",
      "op": "JUMP"
    },
    "4321": {
      "op": "JUMPDEST"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "op": "SUB"
    },
    "4324": {
      "op": "SWAP1"
    },
    "4325": {
      "jump": "o",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4337": {
      "op": "MSTORE"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4347": {
      "op": "REVERT"
    },
    "4348": {
      "op": "JUMPDEST"
    },
    "4349": {
      "op": "DUP1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4352": {
      "op": "JUMPDEST"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4355": {
      "op": "DUP2"
    },
    "4356": {
      "op": "LT"
    },
    "4357": {
      "op": "ISZERO"
    },
    "4358": {
      "op": "PUSH2",
      "value": "0x111F"
    },
    "4361": {
      "op": "JUMPI"
    },
    "4362": {
      "op": "DUP2"
    },
    "4363": {
      "op": "MLOAD"
    },
    "4364": {
      "op": "DUP5"
    },
    "4365": {
      "op": "MSTORE"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4368": {
      "op": "SWAP4"
    },
    "4369": {
      "op": "DUP5"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "SWAP4"
    },
    "4372": {
      "op": "SWAP1"
    },
    "4373": {
      "op": "SWAP2"
    },
    "4374": {
      "op": "ADD"
    },
    "4375": {
      "op": "SWAP1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "ADD"
    },
    "4379": {
      "op": "PUSH2",
      "value": "0x1100"
    },
    "4382": {
      "op": "JUMP"
    },
    "4383": {
      "op": "JUMPDEST"
    },
    "4384": {
      "op": "POP"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "op": "POP"
    },
    "4387": {
      "op": "POP"
    },
    "4388": {
      "jump": "o",
      "op": "JUMP"
    },
    "4389": {
      "op": "JUMPDEST"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4392": {
      "op": "DUP2"
    },
    "4393": {
      "op": "MLOAD"
    },
    "4394": {
      "op": "DUP1"
    },
    "4395": {
      "op": "DUP5"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4399": {
      "op": "DUP1"
    },
    "4400": {
      "op": "DUP6"
    },
    "4401": {
      "op": "ADD"
    },
    "4402": {
      "op": "SWAP5"
    },
    "4403": {
      "op": "POP"
    },
    "4404": {
      "op": "DUP1"
    },
    "4405": {
      "op": "DUP5"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4409": {
      "op": "JUMPDEST"
    },
    "4410": {
      "op": "DUP4"
    },
    "4411": {
      "op": "DUP2"
    },
    "4412": {
      "op": "LT"
    },
    "4413": {
      "op": "ISZERO"
    },
    "4414": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4417": {
      "op": "JUMPI"
    },
    "4418": {
      "op": "DUP2"
    },
    "4419": {
      "op": "MLOAD"
    },
    "4420": {
      "op": "DUP8"
    },
    "4421": {
      "op": "MSTORE"
    },
    "4422": {
      "op": "SWAP6"
    },
    "4423": {
      "op": "DUP3"
    },
    "4424": {
      "op": "ADD"
    },
    "4425": {
      "op": "SWAP6"
    },
    "4426": {
      "op": "SWAP1"
    },
    "4427": {
      "op": "DUP3"
    },
    "4428": {
      "op": "ADD"
    },
    "4429": {
      "op": "SWAP1"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x1139"
    },
    "4436": {
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "POP"
    },
    "4439": {
      "op": "SWAP5"
    },
    "4440": {
      "op": "SWAP6"
    },
    "4441": {
      "op": "SWAP5"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "POP"
    },
    "4444": {
      "op": "POP"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "jump": "o",
      "op": "JUMP"
    },
    "4448": {
      "op": "JUMPDEST"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4451": {
      "op": "DUP2"
    },
    "4452": {
      "op": "MLOAD"
    },
    "4453": {
      "op": "DUP1"
    },
    "4454": {
      "op": "DUP5"
    },
    "4455": {
      "op": "MSTORE"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4458": {
      "op": "DUP1"
    },
    "4459": {
      "op": "DUP6"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "SWAP5"
    },
    "4462": {
      "op": "POP"
    },
    "4463": {
      "op": "DUP1"
    },
    "4464": {
      "op": "DUP5"
    },
    "4465": {
      "op": "ADD"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "JUMPDEST"
    },
    "4469": {
      "op": "DUP4"
    },
    "4470": {
      "op": "DUP2"
    },
    "4471": {
      "op": "LT"
    },
    "4472": {
      "op": "ISZERO"
    },
    "4473": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4476": {
      "op": "JUMPI"
    },
    "4477": {
      "op": "PUSH2",
      "value": "0x1187"
    },
    "4480": {
      "op": "DUP8"
    },
    "4481": {
      "op": "DUP4"
    },
    "4482": {
      "op": "MLOAD"
    },
    "4483": {
      "op": "PUSH2",
      "value": "0x10FC"
    },
    "4486": {
      "jump": "i",
      "op": "JUMP"
    },
    "4487": {
      "op": "JUMPDEST"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4490": {
      "op": "SWAP7"
    },
    "4491": {
      "op": "SWAP1"
    },
    "4492": {
      "op": "SWAP7"
    },
    "4493": {
      "op": "ADD"
    },
    "4494": {
      "op": "SWAP6"
    },
    "4495": {
      "op": "SWAP1"
    },
    "4496": {
      "op": "DUP3"
    },
    "4497": {
      "op": "ADD"
    },
    "4498": {
      "op": "SWAP1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "ADD"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x1174"
    },
    "4505": {
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4509": {
      "op": "DUP2"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4513": {
      "op": "DUP7"
    },
    "4514": {
      "op": "MLOAD"
    },
    "4515": {
      "op": "DUP1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4518": {
      "op": "DUP5"
    },
    "4519": {
      "op": "ADD"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4523": {
      "op": "JUMPDEST"
    },
    "4524": {
      "op": "DUP2"
    },
    "4525": {
      "op": "DUP2"
    },
    "4526": {
      "op": "LT"
    },
    "4527": {
      "op": "ISZERO"
    },
    "4528": {
      "op": "PUSH2",
      "value": "0x11C8"
    },
    "4531": {
      "op": "JUMPI"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4534": {
      "op": "DUP2"
    },
    "4535": {
      "op": "DUP11"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "DUP2"
    },
    "4538": {
      "op": "ADD"
    },
    "4539": {
      "op": "MLOAD"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4542": {
      "op": "DUP7"
    },
    "4543": {
      "op": "DUP5"
    },
    "4544": {
      "op": "ADD"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "op": "PUSH2",
      "value": "0x11AB"
    },
    "4551": {
      "op": "JUMP"
    },
    "4552": {
      "op": "JUMPDEST"
    },
    "4553": {
      "op": "DUP2"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "GT"
    },
    "4556": {
      "op": "ISZERO"
    },
    "4557": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4560": {
      "op": "JUMPI"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4565": {
      "op": "DUP4"
    },
    "4566": {
      "op": "DUP7"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "ADD"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "JUMPDEST"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4574": {
      "op": "DUP4"
    },
    "4575": {
      "op": "ADD"
    },
    "4576": {
      "op": "DUP8"
    },
    "4577": {
      "op": "SWAP1"
    },
    "4578": {
      "op": "MSTORE"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4581": {
      "op": "ADD"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4584": {
      "op": "NOT"
    },
    "4585": {
      "op": "AND"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "op": "PUSH2",
      "value": "0x11F8"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4593": {
      "op": "DUP5"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "op": "DUP8"
    },
    "4596": {
      "op": "PUSH2",
      "value": "0x10FC"
    },
    "4599": {
      "jump": "i",
      "op": "JUMP"
    },
    "4600": {
      "op": "JUMPDEST"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4603": {
      "op": "DUP4"
    },
    "4604": {
      "op": "DUP3"
    },
    "4605": {
      "op": "SUB"
    },
    "4606": {
      "op": "ADD"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4609": {
      "op": "DUP5"
    },
    "4610": {
      "op": "ADD"
    },
    "4611": {
      "op": "MSTORE"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4617": {
      "op": "DUP3"
    },
    "4618": {
      "op": "ADD"
    },
    "4619": {
      "op": "DUP7"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0x1125"
    },
    "4623": {
      "jump": "i",
      "op": "JUMP"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "SWAP1"
    },
    "4626": {
      "op": "POP"
    },
    "4627": {
      "op": "DUP3"
    },
    "4628": {
      "op": "DUP2"
    },
    "4629": {
      "op": "SUB"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4632": {
      "op": "DUP5"
    },
    "4633": {
      "op": "ADD"
    },
    "4634": {
      "op": "MSTORE"
    },
    "4635": {
      "op": "PUSH2",
      "value": "0x1224"
    },
    "4638": {
      "op": "DUP2"
    },
    "4639": {
      "op": "DUP6"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x1160"
    },
    "4643": {
      "jump": "i",
      "op": "JUMP"
    },
    "4644": {
      "op": "JUMPDEST"
    },
    "4645": {
      "op": "SWAP9"
    },
    "4646": {
      "op": "SWAP8"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "jump": "o",
      "op": "JUMP"
    },
    "4656": {
      "op": "JUMPDEST"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4661": {
      "op": "DUP3"
    },
    "4662": {
      "op": "DUP5"
    },
    "4663": {
      "op": "SUB"
    },
    "4664": {
      "op": "SLT"
    },
    "4665": {
      "op": "ISZERO"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1242"
    },
    "4669": {
      "op": "JUMPI"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4672": {
      "op": "DUP1"
    },
    "4673": {
      "op": "REVERT"
    },
    "4674": {
      "op": "JUMPDEST"
    },
    "4675": {
      "op": "DUP2"
    },
    "4676": {
      "op": "MLOAD"
    },
    "4677": {
      "op": "DUP1"
    },
    "4678": {
      "op": "ISZERO"
    },
    "4679": {
      "op": "ISZERO"
    },
    "4680": {
      "op": "DUP2"
    },
    "4681": {
      "op": "EQ"
    },
    "4682": {
      "op": "PUSH2",
      "value": "0x1057"
    },
    "4685": {
      "op": "JUMPI"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4688": {
      "op": "DUP1"
    },
    "4689": {
      "op": "REVERT"
    },
    "4690": {
      "op": "JUMPDEST"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4693": {
      "op": "DUP3"
    },
    "4694": {
      "op": "NOT"
    },
    "4695": {
      "op": "DUP3"
    },
    "4696": {
      "op": "GT"
    },
    "4697": {
      "op": "ISZERO"
    },
    "4698": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4701": {
      "op": "JUMPI"
    },
    "4702": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4708": {
      "jump": "i",
      "op": "JUMP"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "POP"
    },
    "4711": {
      "op": "ADD"
    },
    "4712": {
      "op": "SWAP1"
    },
    "4713": {
      "jump": "o",
      "op": "JUMP"
    },
    "4714": {
      "op": "JUMPDEST"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4719": {
      "op": "DUP3"
    },
    "4720": {
      "op": "DUP5"
    },
    "4721": {
      "op": "SUB"
    },
    "4722": {
      "op": "SLT"
    },
    "4723": {
      "op": "ISZERO"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4727": {
      "op": "JUMPI"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4730": {
      "op": "DUP1"
    },
    "4731": {
      "op": "REVERT"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "MLOAD"
    },
    "4735": {
      "op": "SWAP2"
    },
    "4736": {
      "op": "SWAP1"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "jump": "o",
      "op": "JUMP"
    },
    "4739": {
      "op": "JUMPDEST"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4744": {
      "op": "DUP3"
    },
    "4745": {
      "op": "DUP5"
    },
    "4746": {
      "op": "SUB"
    },
    "4747": {
      "op": "SLT"
    },
    "4748": {
      "op": "ISZERO"
    },
    "4749": {
      "op": "PUSH2",
      "value": "0x1295"
    },
    "4752": {
      "op": "JUMPI"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4755": {
      "op": "DUP1"
    },
    "4756": {
      "op": "REVERT"
    },
    "4757": {
      "op": "JUMPDEST"
    },
    "4758": {
      "op": "DUP2"
    },
    "4759": {
      "op": "MLOAD"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4762": {
      "op": "DUP2"
    },
    "4763": {
      "op": "AND"
    },
    "4764": {
      "op": "DUP2"
    },
    "4765": {
      "op": "EQ"
    },
    "4766": {
      "op": "PUSH2",
      "value": "0x1057"
    },
    "4769": {
      "op": "JUMPI"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4772": {
      "op": "DUP1"
    },
    "4773": {
      "op": "REVERT"
    },
    "4774": {
      "op": "JUMPDEST"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4777": {
      "op": "DUP2"
    },
    "4778": {
      "op": "DUP2"
    },
    "4779": {
      "op": "JUMPDEST"
    },
    "4780": {
      "op": "DUP1"
    },
    "4781": {
      "op": "DUP6"
    },
    "4782": {
      "op": "GT"
    },
    "4783": {
      "op": "ISZERO"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "4787": {
      "op": "JUMPI"
    },
    "4788": {
      "op": "DUP2"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "NOT"
    },
    "4792": {
      "op": "DIV"
    },
    "4793": {
      "op": "DUP3"
    },
    "4794": {
      "op": "GT"
    },
    "4795": {
      "op": "ISZERO"
    },
    "4796": {
      "op": "PUSH2",
      "value": "0x12C7"
    },
    "4799": {
      "op": "JUMPI"
    },
    "4800": {
      "op": "PUSH2",
      "value": "0x12C7"
    },
    "4803": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4806": {
      "jump": "i",
      "op": "JUMP"
    },
    "4807": {
      "op": "JUMPDEST"
    },
    "4808": {
      "op": "DUP1"
    },
    "4809": {
      "op": "DUP6"
    },
    "4810": {
      "op": "AND"
    },
    "4811": {
      "op": "ISZERO"
    },
    "4812": {
      "op": "PUSH2",
      "value": "0x12D4"
    },
    "4815": {
      "op": "JUMPI"
    },
    "4816": {
      "op": "SWAP2"
    },
    "4817": {
      "op": "DUP2"
    },
    "4818": {
      "op": "MUL"
    },
    "4819": {
      "op": "SWAP2"
    },
    "4820": {
      "op": "JUMPDEST"
    },
    "4821": {
      "op": "SWAP4"
    },
    "4822": {
      "op": "DUP5"
    },
    "4823": {
      "op": "SHR"
    },
    "4824": {
      "op": "SWAP4"
    },
    "4825": {
      "op": "SWAP1"
    },
    "4826": {
      "op": "DUP1"
    },
    "4827": {
      "op": "MUL"
    },
    "4828": {
      "op": "SWAP1"
    },
    "4829": {
      "op": "PUSH2",
      "value": "0x12AB"
    },
    "4832": {
      "op": "JUMP"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "op": "SWAP3"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "op": "SWAP3"
    },
    "4838": {
      "op": "SWAP1"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "jump": "o",
      "op": "JUMP"
    },
    "4841": {
      "op": "JUMPDEST"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4844": {
      "op": "DUP3"
    },
    "4845": {
      "op": "PUSH2",
      "value": "0x12F8"
    },
    "4848": {
      "op": "JUMPI"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "4855": {
      "op": "JUMP"
    },
    "4856": {
      "op": "JUMPDEST"
    },
    "4857": {
      "op": "DUP2"
    },
    "4858": {
      "op": "PUSH2",
      "value": "0x1305"
    },
    "4861": {
      "op": "JUMPI"
    },
    "4862": {
      "op": "POP"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4865": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "4868": {
      "op": "JUMP"
    },
    "4869": {
      "op": "JUMPDEST"
    },
    "4870": {
      "op": "DUP2"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "DUP2"
    },
    "4874": {
      "op": "EQ"
    },
    "4875": {
      "op": "PUSH2",
      "value": "0x131B"
    },
    "4878": {
      "op": "JUMPI"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4881": {
      "op": "DUP2"
    },
    "4882": {
      "op": "EQ"
    },
    "4883": {
      "op": "PUSH2",
      "value": "0x1325"
    },
    "4886": {
      "op": "JUMPI"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x1341"
    },
    "4890": {
      "op": "JUMP"
    },
    "4891": {
      "op": "JUMPDEST"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "SWAP2"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "4900": {
      "op": "JUMP"
    },
    "4901": {
      "op": "JUMPDEST"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4904": {
      "op": "DUP5"
    },
    "4905": {
      "op": "GT"
    },
    "4906": {
      "op": "ISZERO"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x1336"
    },
    "4910": {
      "op": "JUMPI"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0x1336"
    },
    "4914": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4917": {
      "jump": "i",
      "op": "JUMP"
    },
    "4918": {
      "op": "JUMPDEST"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "POP"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4923": {
      "op": "DUP3"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "4928": {
      "op": "JUMP"
    },
    "4929": {
      "op": "JUMPDEST"
    },
    "4930": {
      "op": "POP"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4933": {
      "op": "DUP4"
    },
    "4934": {
      "op": "LT"
    },
    "4935": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "4938": {
      "op": "DUP4"
    },
    "4939": {
      "op": "LT"
    },
    "4940": {
      "op": "AND"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "4943": {
      "op": "DUP5"
    },
    "4944": {
      "op": "LT"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4947": {
      "op": "DUP5"
    },
    "4948": {
      "op": "LT"
    },
    "4949": {
      "op": "AND"
    },
    "4950": {
      "op": "OR"
    },
    "4951": {
      "op": "ISZERO"
    },
    "4952": {
      "op": "PUSH2",
      "value": "0x1364"
    },
    "4955": {
      "op": "JUMPI"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "op": "DUP2"
    },
    "4958": {
      "op": "DUP2"
    },
    "4959": {
      "op": "EXP"
    },
    "4960": {
      "op": "PUSH2",
      "value": "0x950"
    },
    "4963": {
      "op": "JUMP"
    },
    "4964": {
      "op": "JUMPDEST"
    },
    "4965": {
      "op": "PUSH2",
      "value": "0x136E"
    },
    "4968": {
      "op": "DUP4"
    },
    "4969": {
      "op": "DUP4"
    },
    "4970": {
      "op": "PUSH2",
      "value": "0x12A6"
    },
    "4973": {
      "jump": "i",
      "op": "JUMP"
    },
    "4974": {
      "op": "JUMPDEST"
    },
    "4975": {
      "op": "DUP1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4978": {
      "op": "NOT"
    },
    "4979": {
      "op": "DIV"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "GT"
    },
    "4982": {
      "op": "ISZERO"
    },
    "4983": {
      "op": "PUSH2",
      "value": "0x1382"
    },
    "4986": {
      "op": "JUMPI"
    },
    "4987": {
      "op": "PUSH2",
      "value": "0x1382"
    },
    "4990": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4993": {
      "jump": "i",
      "op": "JUMP"
    },
    "4994": {
      "op": "JUMPDEST"
    },
    "4995": {
      "op": "MUL"
    },
    "4996": {
      "op": "SWAP4"
    },
    "4997": {
      "op": "SWAP3"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "POP"
    },
    "5000": {
      "op": "POP"
    },
    "5001": {
      "jump": "o",
      "op": "JUMP"
    },
    "5002": {
      "op": "JUMPDEST"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5005": {
      "op": "PUSH2",
      "value": "0x1057"
    },
    "5008": {
      "op": "DUP4"
    },
    "5009": {
      "op": "DUP4"
    },
    "5010": {
      "op": "PUSH2",
      "value": "0x12E9"
    },
    "5013": {
      "jump": "i",
      "op": "JUMP"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5017": {
      "op": "DUP2"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5020": {
      "op": "NOT"
    },
    "5021": {
      "op": "DIV"
    },
    "5022": {
      "op": "DUP4"
    },
    "5023": {
      "op": "GT"
    },
    "5024": {
      "op": "DUP3"
    },
    "5025": {
      "op": "ISZERO"
    },
    "5026": {
      "op": "ISZERO"
    },
    "5027": {
      "op": "AND"
    },
    "5028": {
      "op": "ISZERO"
    },
    "5029": {
      "op": "PUSH2",
      "value": "0x13B0"
    },
    "5032": {
      "op": "JUMPI"
    },
    "5033": {
      "op": "PUSH2",
      "value": "0x13B0"
    },
    "5036": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "5039": {
      "jump": "i",
      "op": "JUMP"
    },
    "5040": {
      "op": "JUMPDEST"
    },
    "5041": {
      "op": "POP"
    },
    "5042": {
      "op": "MUL"
    },
    "5043": {
      "op": "SWAP1"
    },
    "5044": {
      "jump": "o",
      "op": "JUMP"
    },
    "5045": {
      "op": "JUMPDEST"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5050": {
      "op": "DUP3"
    },
    "5051": {
      "op": "ADD"
    },
    "5052": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "5055": {
      "op": "JUMPI"
    },
    "5056": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "5059": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "5062": {
      "jump": "i",
      "op": "JUMP"
    },
    "5063": {
      "op": "JUMPDEST"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5067": {
      "op": "ADD"
    },
    "5068": {
      "op": "SWAP1"
    },
    "5069": {
      "jump": "o",
      "op": "JUMP"
    },
    "5070": {
      "op": "JUMPDEST"
    },
    "5071": {
      "op": "DUP6"
    },
    "5072": {
      "op": "DUP2"
    },
    "5073": {
      "op": "MSTORE"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5078": {
      "op": "DUP7"
    },
    "5079": {
      "op": "DUP2"
    },
    "5080": {
      "op": "DUP5"
    },
    "5081": {
      "op": "ADD"
    },
    "5082": {
      "op": "MSTORE"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5085": {
      "op": "DUP7"
    },
    "5086": {
      "op": "DUP2"
    },
    "5087": {
      "op": "DUP6"
    },
    "5088": {
      "op": "ADD"
    },
    "5089": {
      "op": "MSTORE"
    },
    "5090": {
      "op": "DUP6"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5093": {
      "op": "DUP6"
    },
    "5094": {
      "op": "ADD"
    },
    "5095": {
      "op": "MSTORE"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5098": {
      "op": "DUP5"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "DUP6"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5103": {
      "op": "DUP1"
    },
    "5104": {
      "op": "JUMPDEST"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5107": {
      "op": "DUP2"
    },
    "5108": {
      "op": "LT"
    },
    "5109": {
      "op": "ISZERO"
    },
    "5110": {
      "op": "PUSH2",
      "value": "0x142E"
    },
    "5113": {
      "op": "JUMPI"
    },
    "5114": {
      "op": "DUP3"
    },
    "5115": {
      "op": "MLOAD"
    },
    "5116": {
      "op": "DUP5"
    },
    "5117": {
      "op": "DUP4"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5121": {
      "op": "DUP2"
    },
    "5122": {
      "op": "LT"
    },
    "5123": {
      "op": "ISZERO"
    },
    "5124": {
      "op": "PUSH2",
      "value": "0x141B"
    },
    "5127": {
      "op": "JUMPI"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "MLOAD"
    },
    "5130": {
      "op": "DUP3"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "SWAP2"
    },
    "5133": {
      "op": "DUP9"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "SWAP2"
    },
    "5136": {
      "op": "SWAP1"
    },
    "5137": {
      "op": "DUP9"
    },
    "5138": {
      "op": "ADD"
    },
    "5139": {
      "op": "SWAP1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "PUSH2",
      "value": "0x13FE"
    },
    "5146": {
      "op": "JUMP"
    },
    "5147": {
      "op": "JUMPDEST"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "op": "POP"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "op": "SWAP3"
    },
    "5152": {
      "op": "DUP5"
    },
    "5153": {
      "op": "ADD"
    },
    "5154": {
      "op": "SWAP3"
    },
    "5155": {
      "op": "SWAP2"
    },
    "5156": {
      "op": "DUP6"
    },
    "5157": {
      "op": "ADD"
    },
    "5158": {
      "op": "SWAP2"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5165": {
      "op": "JUMP"
    },
    "5166": {
      "op": "JUMPDEST"
    },
    "5167": {
      "op": "POP"
    },
    "5168": {
      "op": "POP"
    },
    "5169": {
      "op": "POP"
    },
    "5170": {
      "op": "POP"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "op": "POP"
    },
    "5173": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "5176": {
      "op": "DUP3"
    },
    "5177": {
      "op": "ADD"
    },
    "5178": {
      "op": "SWAP1"
    },
    "5179": {
      "op": "POP"
    },
    "5180": {
      "op": "SWAP7"
    },
    "5181": {
      "op": "SWAP6"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "op": "POP"
    },
    "5184": {
      "op": "POP"
    },
    "5185": {
      "op": "POP"
    },
    "5186": {
      "op": "POP"
    },
    "5187": {
      "op": "POP"
    },
    "5188": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1236cf0f12dce7c96881a92a7768b8974e8b2aed",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\n\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./lib/AltBn128.sol\";\nimport \"./lib/LSAG.sol\";\n\n\ncontract HettiPool {\n\n    // =============================================================\n    //                           Errors\n    // =============================================================\n    \n    error AlreadyInitialized();\n    error NotInitialized();\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Maximum number of participants in a ring\n    uint256 constant MAX_RING_PARTICIPANT = 5;\n\n    // Minimum number of blocks that needs to be mined\n    // before user can forcefully close the ring\n    // NOTE: This is only for testing purposes, in production\n    // this should be set to a higher value\n    uint256 constant CLOSE_RING_BLOCK_THRESHOLD = 10;\n\n    // The number of participants in the ring\n    uint256 constant _BITPOS_NUMBER_PARTICIPANTS = 32;\n\n    // The number of withdrawals in the ring\n    uint256 constant _BITPOS_NUMBER_WITHDRAWALS = 48;\n\n    uint256 constant _BITWIDTH_PARTICIPANTS = 16;\n    uint256 constant _BITWIDTH_BLOCK_NUM = 32;\n    uint256 constant _BITMASK_BLOCK_NUM = (1 << _BITWIDTH_BLOCK_NUM) -1;\n    uint256 constant _BITMASK_PARTICIPANTS = (1 << _BITWIDTH_PARTICIPANTS) -1;\n\n    // =============================================================\n    //                           STORAGE\n    // =============================================================\n\n    struct Ring {\n        // The total amount deposited in the ring\n        uint256 amountDeposited;\n\n        // Bits Layout:\n        // - [0..32]    `initiatedBlockNumber` \n        // - [32..48]   `numberOfParticipants`\n        // - [48..64]   `numberOfWithdrawnParticipants`\n        uint256 packedRingData; \n\n        // The public keys of the participants\n        mapping (uint256 => uint256[2]) publicKeys;\n\n        // The key images from successfully withdrawn participants\n        mapping (uint256 => uint256[2]) keyImages;\n        bytes32 ringHash;\n    }\n\n    address public token;\n    uint256 public tokenDecimals;\n    uint256 public balance;\n\n    uint256[10] allowedAmounts;\n\n    // tokenAmount => ringIndex\n    mapping(uint256 => uint256) public ringsNumber;\n\n    // tokenAmount => ringIndex => Ring\n    mapping (uint256 => mapping(uint256 => Ring)) public rings;\n\n    /// @notice Initialize the vault to use and accept `token`\n    /// @param _token The address of the token to use\n    function initialize(address _token) public {\n        if (token != address(0)) revert AlreadyInitialized();\n        token = _token;\n        tokenDecimals = ERC20(_token).decimals();\n\n        for(uint256 i = 0; i < allowedAmounts.length; ) {\n            allowedAmounts[i] = (2 ** i) * (10 ** tokenDecimals);\n\n            unchecked {\n                i++;\n            }\n        }\n    }\n\n    /// @notice Deposit `amount` of `token` into the vault\n    /// @param _amount The amount of `token` to deposit\n    /// @param _publicKey The public key of the participant\n    function deposit(uint _amount, uint256[2] memory _publicKey) public {\n        \n        // Confirm amount sent is allowed\n        uint256 amountTokenRecieved = amountCheck(_amount);\n\n        ERC20(token).transferFrom(msg.sender, address(this), _amount);\n\n        if (!AltBn128.onCurve(uint256(_publicKey[0]), uint256(_publicKey[1]))) {\n            revert(\"PK_NOT_ON_CURVE\");\n        }\n\n        // Gets the current ring for the amounts\n        uint256 ringIndex = ringsNumber[amountTokenRecieved];\n        Ring storage ring = rings[amountTokenRecieved][ringIndex];\n\n        (uint wParticipants,\n        uint participants, uint blockNum) = getRingPackedData(ring.packedRingData);\n\n        // Making sure no duplicate public keys are added\n        for (uint256 i = 0; i < participants;) {\n            if (ring.publicKeys[i][0] == _publicKey[0] &&\n                ring.publicKeys[i][1] == _publicKey[1]) {\n                revert(\"PK_ALREADY_IN_RING\");\n            }\n\n            unchecked {\n                i++;\n            }\n        }\n\n        if (participants == 0) {\n            blockNum = block.number - 1;\n        }\n\n        ring.publicKeys[participants] = _publicKey;\n        ring.amountDeposited += amountTokenRecieved;\n        unchecked {\n            participants++;\n        }\n\n        uint packedData = (wParticipants << _BITWIDTH_PARTICIPANTS) | participants;\n        packedData = (packedData << _BITWIDTH_BLOCK_NUM) | blockNum;\n        ring.packedRingData = packedData;\n\n        // If the ring is full, start a new ring\n        if (participants >= MAX_RING_PARTICIPANT) {\n            ring.ringHash = hashRing(amountTokenRecieved, ringIndex);\n            \n            // Add new Ring pool\n            ringsNumber[amountTokenRecieved] += 1;\n        }\n    }\n\n    function withdraw(\n        address payable recipient, uint256 amountToken, uint256 ringIndex,\n        uint256 c0, uint256[2] memory keyImage, uint256[] memory s\n    ) public\n    {\n        Ring storage ring = rings[amountToken][ringIndex];\n\n        (uint wParticipants,\n        uint participants, uint blockNum) = getRingPackedData(ring.packedRingData);\n\n        \n        if (wParticipants >= MAX_RING_PARTICIPANT) {\n            revert(\"ALL_FUNDS_WITHDRAWN\");\n        }\n\n        if (ring.ringHash == bytes32(0x00)) {\n            revert(\"RING_NOT_CLOSED\");\n        }\n\n        uint256[2][] memory publicKeys = new uint256[2][](MAX_RING_PARTICIPANT);\n\n        for (uint256 i = 0; i < MAX_RING_PARTICIPANT;) {\n            publicKeys[i] = ring.publicKeys[i];\n            unchecked {\n                i++;\n            }\n        }\n\n        // Attempts to verify ring signature\n        bool signatureVerified = LSAG.verify(\n            abi.encodePacked(ring.ringHash), // Convert to bytes\n            c0,\n            keyImage,\n            s,\n            publicKeys\n        );\n\n        if (!signatureVerified) {\n            revert(\"INVALID_SIGNATURE\");\n        }\n\n        // Confirm key image is not already used (no double spends)\n        for (uint i = 0; i < wParticipants;) {\n            if (ring.keyImages[i][0] == keyImage[0] &&\n                ring.keyImages[i][1] == keyImage[1]) {\n                revert(\"USED_SIGNATURE\");\n            }\n\n            unchecked {\n                i++;\n            }\n        }    \n\n        ring.keyImages[wParticipants] = keyImage;\n        unchecked {\n            wParticipants++;\n        }\n\n        uint packedData = (wParticipants << _BITWIDTH_PARTICIPANTS) | participants;\n        packedData = (packedData << _BITWIDTH_BLOCK_NUM) | blockNum;\n        ring.packedRingData = packedData;  \n\n        ERC20(token).transfer(recipient, amountToken);\n    }\n\n    function hashRing(uint256 _amountToken, uint256 _ringIndex) internal view\n        returns (bytes32)\n    {\n        uint256[2][MAX_RING_PARTICIPANT] memory publicKeys;\n        uint256 receivedToken = amountCheck(_amountToken);\n\n        Ring storage ring = rings[receivedToken][_ringIndex];\n\n        for (uint8 i = 0; i < MAX_RING_PARTICIPANT;) {\n            publicKeys[i] = ring.publicKeys[i];\n\n            unchecked {\n                i++;\n            }\n        }\n\n        (uint participants,, uint blockNum) = getRingPackedData(ring.packedRingData);\n\n        bytes memory b = abi.encodePacked(\n            blockhash(block.number - 1),\n            blockNum,\n            ring.amountDeposited,\n            participants,\n            publicKeys\n        );\n\n        return keccak256(b);\n    }\n\n    function getRingHash(uint256 _amountToken, uint256 _ringIndex) public view\n        returns (bytes32)\n    {\n        uint256 receivedToken = amountCheck(_amountToken);\n        return rings[receivedToken][_ringIndex].ringHash;\n    }\n\n    function getPoolBalance() public view returns (uint256) {\n        return ERC20(token).balanceOf(address(this));\n    }\n\n    // =============================================================\n    //                           UTILITIES\n    // =============================================================\n\n    // @notice Checks if the amount sent is allowed\n    // @param amount The amount of token to check\n    function amountCheck(uint256 _amount) internal view\n        returns (uint256)\n    {\n        bool allowed = false;\n\n        for (uint256 i = 0; i < 10;) {\n            if (allowedAmounts[i] == _amount) {\n                allowed = true;\n            }\n            if (allowed) {\n                break;\n            }\n\n            unchecked {\n                i++;\n            }\n        }\n\n        // Revert if token sent isn't in the allowed fixed amounts\n        require(allowed, \"AMOUNT_NOT_ALLOWED\");\n        return _amount;\n    }\n\n    function getPublicKeys(uint256 amountToken, uint256 index) public view\n        returns (bytes32[2][MAX_RING_PARTICIPANT] memory)\n    {\n        amountCheck(amountToken);\n\n        bytes32[2][MAX_RING_PARTICIPANT] memory publicKeys;\n\n        for (uint i = 0; i < MAX_RING_PARTICIPANT; i++) {\n            publicKeys[i][0] = bytes32(rings[amountToken][index].publicKeys[i][0]);\n            publicKeys[i][1] = bytes32(rings[amountToken][index].publicKeys[i][1]);\n        }\n\n        return publicKeys;\n    }\n\n    function getRingPackedData(uint packedData) public view returns (uint256, uint256, uint256){\n        uint256 p = packedData >> _BITWIDTH_BLOCK_NUM;\n        \n        return (\n            p >> _BITWIDTH_PARTICIPANTS,\n            p & _BITMASK_PARTICIPANTS,\n            packedData & _BITMASK_BLOCK_NUM\n        );\n    }\n\n    function getWParticipant(uint256 packedData) public view returns (uint256){\n        return (packedData >> _BITWIDTH_BLOCK_NUM) >> _BITWIDTH_PARTICIPANTS;\n    }\n\n    function getParticipant(uint256 packedData) public view returns (uint256){\n        uint256 p = packedData >> _BITWIDTH_BLOCK_NUM;\n        \n        return p & _BITMASK_PARTICIPANTS;\n    }\n\n    function getRingMaxParticipants() public pure\n        returns (uint256)\n    {\n        return MAX_RING_PARTICIPANT;\n    }\n\n    function getCurrentRingIndex(uint256 amountToken) public view\n        returns (uint256)\n    {\n        amountCheck(amountToken);\n        return ringsNumber[amountToken];\n    }\n}",
  "sourceMap": "180:10098:5:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/HettiPool.sol",
  "type": "contract"
}