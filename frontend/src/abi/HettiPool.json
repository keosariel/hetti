{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitialized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ringIndex",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract FlashBorrower",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Flashloan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ringIndex",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "_publicKey",
          "type": "uint256[2]"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract FlashBorrower",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "getCurrentRingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getLoanFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packedData",
          "type": "uint256"
        }
      ],
      "name": "getParticipant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ringIndex",
          "type": "uint256"
        }
      ],
      "name": "getPublicKeys",
      "outputs": [
        {
          "internalType": "bytes32[2][3]",
          "name": "",
          "type": "bytes32[2][3]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ringIndex",
          "type": "uint256"
        }
      ],
      "name": "getRingHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRingMaxParticipants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packedData",
          "type": "uint256"
        }
      ],
      "name": "getRingPackedData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packedData",
          "type": "uint256"
        }
      ],
      "name": "getWParticipant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loanFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "packedRingData",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ringHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ringsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ringIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "c0",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "keyImage",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[]",
          "name": "s",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "1": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "5": "contracts/HettiPool.sol",
    "6": "contracts/interfaces/IFlashBorrower.sol",
    "8": "contracts/lib/AltBn128.sol",
    "9": "contracts/lib/LSAG.sol"
  },
  "ast": {
    "absolutePath": "contracts/HettiPool.sol",
    "exportedSymbols": {
      "AltBn128": [
        2128
      ],
      "Context": [
        2579
      ],
      "ERC20": [
        1863
      ],
      "FlashBorrower": [
        1876
      ],
      "HettiPool": [
        1181
      ],
      "IERC20": [
        2532
      ],
      "IERC20Metadata": [
        2557
      ],
      "LSAG": [
        2454
      ]
    },
    "id": 1182,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "43:23:5"
      },
      {
        "absolutePath": "/Users/mac/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1182,
        "sourceUnit": 1864,
        "src": "68:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/AltBn128.sol",
        "file": "./lib/AltBn128.sol",
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1182,
        "sourceUnit": 2129,
        "src": "124:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/LSAG.sol",
        "file": "./lib/LSAG.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1182,
        "sourceUnit": 2455,
        "src": "153:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IFlashBorrower.sol",
        "file": "./interfaces/IFlashBorrower.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1182,
        "sourceUnit": 1877,
        "src": "178:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HettiPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1181,
        "linearizedBaseContracts": [
          1181
        ],
        "name": "HettiPool",
        "nameLocation": "231:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "0dc149f0",
            "id": 141,
            "name": "AlreadyInitialized",
            "nameLocation": "437:18:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:2:5"
            },
            "src": "431:27:5"
          },
          {
            "errorSelector": "87138d5c",
            "id": 143,
            "name": "NotInitialized",
            "nameLocation": "469:14:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:5"
            },
            "src": "463:23:5"
          },
          {
            "anonymous": false,
            "eventSelector": "73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca",
            "id": 151,
            "name": "Deposited",
            "nameLocation": "681:9:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "691:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "708:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "700:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ringIndex",
                  "nameLocation": "729:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "721:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:49:5"
            },
            "src": "675:65:5"
          },
          {
            "anonymous": false,
            "eventSelector": "8852f4cb22828da9ddc44460130398d816e46fd1f370d80d82a4de81fcd5aeee",
            "id": 158,
            "name": "Flashloan",
            "nameLocation": "751:9:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "783:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "761:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                    "typeString": "contract FlashBorrower"
                  },
                  "typeName": {
                    "id": 153,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 152,
                      "name": "FlashBorrower",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1876,
                      "src": "761:13:5"
                    },
                    "referencedDeclaration": 1876,
                    "src": "761:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                      "typeString": "contract FlashBorrower"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "801:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "793:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:48:5"
            },
            "src": "745:64:5"
          },
          {
            "anonymous": false,
            "eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
            "id": 166,
            "name": "Withdrawn",
            "nameLocation": "820:9:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "830:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "847:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "839:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ringIndex",
                  "nameLocation": "868:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "860:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "829:49:5"
            },
            "src": "814:65:5"
          },
          {
            "constant": true,
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "1067:185:5",
              "text": "@notice Maximum number of participants in a ring It can be changed to a higher value, \n but it will increase the gas cost.\n Note: was reduced to 3 for testing purposes"
            },
            "id": 170,
            "mutability": "constant",
            "name": "MAX_RING_PARTICIPANT",
            "nameLocation": "1274:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "1257:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 168,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1257:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 169,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1297:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "1305:209:5",
              "text": "@notice Minimum number of blocks that needs to be mined before user can forcefully close the ring\n NOTE: This is only for testing purposes, in production\n this should be set to a higher value"
            },
            "id": 174,
            "mutability": "constant",
            "name": "CLOSE_RING_BLOCK_THRESHOLD",
            "nameLocation": "1536:26:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "1519:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 172,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1519:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 173,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1565:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 175,
              "nodeType": "StructuredDocumentation",
              "src": "1574:42:5",
              "text": "The number of participants in the ring"
            },
            "id": 178,
            "mutability": "constant",
            "name": "_BITPOS_NUMBER_PARTICIPANTS",
            "nameLocation": "1638:27:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "1621:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 176,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1621:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3332",
              "id": 177,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1668:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32_by_1",
                "typeString": "int_const 32"
              },
              "value": "32"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "1677:41:5",
              "text": "The number of withdrawals in the ring"
            },
            "id": 182,
            "mutability": "constant",
            "name": "_BITPOS_NUMBER_WITHDRAWALS",
            "nameLocation": "1740:26:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "1723:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1723:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3438",
              "id": 181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1769:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_48_by_1",
                "typeString": "int_const 48"
              },
              "value": "48"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 183,
              "nodeType": "StructuredDocumentation",
              "src": "1778:43:5",
              "text": "The participant value would use 16 bits"
            },
            "id": 186,
            "mutability": "constant",
            "name": "_BITWIDTH_PARTICIPANTS",
            "nameLocation": "1843:22:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "1826:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1826:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3136",
              "id": 185,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1868:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16_by_1",
                "typeString": "int_const 16"
              },
              "value": "16"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 187,
              "nodeType": "StructuredDocumentation",
              "src": "1877:37:5",
              "text": "The Block value would use 16 bits"
            },
            "id": 190,
            "mutability": "constant",
            "name": "_BITWIDTH_BLOCK_NUM",
            "nameLocation": "1936:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "1919:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 188,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1919:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3332",
              "id": 189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1958:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32_by_1",
                "typeString": "int_const 32"
              },
              "value": "32"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 191,
              "nodeType": "StructuredDocumentation",
              "src": "1967:38:5",
              "text": "Bitmask for `numberOfParticipants`"
            },
            "id": 199,
            "mutability": "constant",
            "name": "_BITMASK_PARTICIPANTS",
            "nameLocation": "2027:21:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "2010:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 192,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2010:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2052:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 194,
                      "name": "_BITWIDTH_PARTICIPANTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "2057:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2052:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 196,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2051:29:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 197,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2082:1:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "2051:32:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "2090:29:5",
              "text": "Bitmask for `blockNumber`"
            },
            "id": 208,
            "mutability": "constant",
            "name": "_BITMASK_BLOCK_NUM",
            "nameLocation": "2141:18:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "2124:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 201,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2124:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 207,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2163:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 203,
                      "name": "_BITWIDTH_BLOCK_NUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "2168:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2163:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 205,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2162:26:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 206,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2190:1:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "2162:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "HettiPool.Ring",
            "id": 231,
            "members": [
              {
                "constant": false,
                "id": 211,
                "mutability": "mutable",
                "name": "amountDeposited",
                "nameLocation": "2460:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "2452:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 210,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2452:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 214,
                "mutability": "mutable",
                "name": "packedRingData",
                "nameLocation": "2673:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "2665:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 213,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2665:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 221,
                "mutability": "mutable",
                "name": "publicKeys",
                "nameLocation": "2779:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "2747:42:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                  "typeString": "mapping(uint256 => uint256[2])"
                },
                "typeName": {
                  "id": 220,
                  "keyType": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2747:31:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                    "typeString": "mapping(uint256 => uint256[2])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 217,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2767:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 219,
                    "length": {
                      "hexValue": "32",
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2775:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2767:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 228,
                "mutability": "mutable",
                "name": "keyImages",
                "nameLocation": "2958:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "2926:41:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                  "typeString": "mapping(uint256 => uint256[2])"
                },
                "typeName": {
                  "id": 227,
                  "keyType": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2935:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2926:31:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                    "typeString": "mapping(uint256 => uint256[2])"
                  },
                  "valueType": {
                    "baseType": {
                      "id": 224,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2946:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 226,
                    "length": {
                      "hexValue": "32",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2954:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2946:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 230,
                "mutability": "mutable",
                "name": "ringHash",
                "nameLocation": "2985:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "2977:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 229,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2977:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ring",
            "nameLocation": "2386:4:5",
            "nodeType": "StructDefinition",
            "scope": 1181,
            "src": "2379:621:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 233,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "3021:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "3006:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 232,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3006:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b97e856",
            "id": 235,
            "mutability": "mutable",
            "name": "tokenDecimals",
            "nameLocation": "3047:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "3032:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3032:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 236,
              "nodeType": "StructuredDocumentation",
              "src": "3067:28:5",
              "text": "0.09% fee for flashloans"
            },
            "functionSelector": "9bcb5572",
            "id": 239,
            "mutability": "mutable",
            "name": "loanFee",
            "nameLocation": "3115:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "3100:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 237,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3100:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "39",
              "id": 238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3125:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9_by_1",
                "typeString": "int_const 9"
              },
              "value": "9"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 243,
            "mutability": "mutable",
            "name": "allowedAmounts",
            "nameLocation": "3145:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "3133:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$10_storage",
              "typeString": "uint256[10]"
            },
            "typeName": {
              "baseType": {
                "id": 240,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3133:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 242,
              "length": {
                "hexValue": "3130",
                "id": 241,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3141:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "3133:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$10_storage_ptr",
                "typeString": "uint256[10]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "3166:28:5",
              "text": "tokenAmount => ringIndex"
            },
            "functionSelector": "9325019d",
            "id": 248,
            "mutability": "mutable",
            "name": "ringsNumber",
            "nameLocation": "3234:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "3199:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 247,
              "keyType": {
                "id": 245,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3207:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3199:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 246,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3218:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 249,
              "nodeType": "StructuredDocumentation",
              "src": "3252:36:5",
              "text": "tokenAmount => ringIndex => Ring"
            },
            "functionSelector": "6381d19e",
            "id": 256,
            "mutability": "mutable",
            "name": "rings",
            "nameLocation": "3346:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1181,
            "src": "3293:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring))"
            },
            "typeName": {
              "id": 255,
              "keyType": {
                "id": 250,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3302:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3293:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring))"
              },
              "valueType": {
                "id": 254,
                "keyType": {
                  "id": 251,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3321:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3313:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                  "typeString": "mapping(uint256 => struct HettiPool.Ring)"
                },
                "valueType": {
                  "id": 253,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 252,
                    "name": "Ring",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 231,
                    "src": "3332:4:5"
                  },
                  "referencedDeclaration": 231,
                  "src": "3332:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                    "typeString": "struct HettiPool.Ring"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "3518:338:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 262,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3532:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3549:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3541:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3541:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3541:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3532:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "IfStatement",
                  "src": "3528:52:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 268,
                        "name": "AlreadyInitialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "3560:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3560:20:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 270,
                    "nodeType": "RevertStatement",
                    "src": "3553:27:5"
                  }
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3590:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 273,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "3598:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3590:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:14:5"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 276,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "3614:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 278,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "3636:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 277,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1863,
                            "src": "3630:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1863_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3630:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1863",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1351,
                        "src": "3630:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3630:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3614:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:40:5"
                },
                {
                  "body": {
                    "id": 310,
                    "nodeType": "Block",
                    "src": "3713:137:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 292,
                              "name": "allowedAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "3727:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$10_storage",
                                "typeString": "uint256[10] storage ref"
                              }
                            },
                            "id": 294,
                            "indexExpression": {
                              "id": 293,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "3742:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3727:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 295,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3748:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "id": 296,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 285,
                                    "src": "3753:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3748:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 298,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3747:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3759:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "id": 300,
                                    "name": "tokenDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 235,
                                    "src": "3765:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3759:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 302,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3758:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3747:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3727:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "3727:52:5"
                      },
                      {
                        "id": 309,
                        "nodeType": "UncheckedBlock",
                        "src": "3794:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "3822:3:5",
                              "subExpression": {
                                "id": 306,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 285,
                                "src": "3822:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 308,
                            "nodeType": "ExpressionStatement",
                            "src": "3822:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 288,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "3684:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 289,
                        "name": "allowedAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "3688:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$10_storage",
                          "typeString": "uint256[10] storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3688:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3684:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 311,
                  "initializationExpression": {
                    "assignments": [
                      285
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3677:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "3669:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3669:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 287,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3681:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3669:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3665:185:5"
                }
              ]
            },
            "documentation": {
              "id": 257,
              "nodeType": "StructuredDocumentation",
              "src": "3358:112:5",
              "text": "@notice Initialize the vault to use and accept `token`\n @param _token The address of the token to use"
            },
            "functionSelector": "c4d66de8",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "3484:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3503:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "3495:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3494:16:5"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:0:5"
            },
            "scope": 1181,
            "src": "3475:381:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "4105:1766:5",
              "statements": [
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "amountTokenRecieved",
                      "nameLocation": "4175:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "4167:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4167:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Confirm amount sent is allowed",
                  "id": 329,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 327,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "4209:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 326,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "4197:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4167:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4254:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4254:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 338,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4274:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HettiPool_$1181",
                              "typeString": "contract HettiPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HettiPool_$1181",
                              "typeString": "contract HettiPool"
                            }
                          ],
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4266:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4266:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4266:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 340,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "4281:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 331,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "4234:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 330,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1863,
                          "src": "4228:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1863_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4228:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1863",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1476,
                      "src": "4228:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:61:5"
                },
                {
                  "condition": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4304:65:5",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 347,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4330:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 349,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4341:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4330:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4322:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 345,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4322:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4322:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 353,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4354:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 355,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4365:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4354:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4346:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 351,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4346:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4346:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 343,
                          "name": "AltBn128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "4305:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AltBn128_$2128_$",
                            "typeString": "type(library AltBn128)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "onCurve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2063,
                        "src": "4305:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256,uint256) pure returns (bool)"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4305:64:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 364,
                  "nodeType": "IfStatement",
                  "src": "4300:121:5",
                  "trueBody": {
                    "id": 363,
                    "nodeType": "Block",
                    "src": "4371:50:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "504b5f4e4f545f4f4e5f4355525645",
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4392:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd9320bac24e24791fbeb7f06292de9b0eb5c79f0fbea9354c619a9899b5676e",
                                "typeString": "literal_string \"PK_NOT_ON_CURVE\""
                              },
                              "value": "PK_NOT_ON_CURVE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dd9320bac24e24791fbeb7f06292de9b0eb5c79f0fbea9354c619a9899b5676e",
                                "typeString": "literal_string \"PK_NOT_ON_CURVE\""
                              }
                            ],
                            "id": 359,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "4385:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4385:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 362,
                        "nodeType": "ExpressionStatement",
                        "src": "4385:25:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 367,
                      "mutability": "mutable",
                      "name": "ringIndex",
                      "nameLocation": "4489:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "4481:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 366,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4481:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Gets the current ring for the amounts",
                  "id": 371,
                  "initialValue": {
                    "baseExpression": {
                      "id": 368,
                      "name": "ringsNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "4501:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 370,
                    "indexExpression": {
                      "id": 369,
                      "name": "amountTokenRecieved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "4513:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4501:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4481:52:5"
                },
                {
                  "assignments": [
                    374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "4556:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "4543:17:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                        "typeString": "struct HettiPool.Ring"
                      },
                      "typeName": {
                        "id": 373,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 372,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 231,
                          "src": "4543:4:5"
                        },
                        "referencedDeclaration": 231,
                        "src": "4543:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 380,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 375,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "4563:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "id": 376,
                        "name": "amountTokenRecieved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "4569:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4563:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                        "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                      }
                    },
                    "id": 379,
                    "indexExpression": {
                      "id": 378,
                      "name": "ringIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "4590:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4563:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$231_storage",
                      "typeString": "struct HettiPool.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4543:57:5"
                },
                {
                  "assignments": [
                    382,
                    384,
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "wParticipants",
                      "nameLocation": "4617:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "4612:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4612:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "4645:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "4640:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4640:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "blockNum",
                      "nameLocation": "4664:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "4659:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4659:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 388,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "4694:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "packedRingData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 214,
                        "src": "4694:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 387,
                      "name": "getRingPackedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "4676:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4611:103:5"
                },
                {
                  "body": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "4823:247:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 399,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "4841:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 400,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "publicKeys",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 221,
                                  "src": "4841:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 402,
                                "indexExpression": {
                                  "id": 401,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 393,
                                  "src": "4857:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4841:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 404,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4860:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4841:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 405,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4866:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 407,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4877:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4866:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4841:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 409,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "4899:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 410,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "publicKeys",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 221,
                                  "src": "4899:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 412,
                                "indexExpression": {
                                  "id": 411,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 393,
                                  "src": "4915:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4899:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 414,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4918:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4899:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 415,
                                "name": "_publicKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4924:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 417,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4935:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4924:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4899:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4841:96:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 425,
                        "nodeType": "IfStatement",
                        "src": "4837:163:5",
                        "trueBody": {
                          "id": 424,
                          "nodeType": "Block",
                          "src": "4939:61:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "504b5f414c52454144595f494e5f52494e47",
                                    "id": 421,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4964:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f66bce24130503187d7a08e9b03744ff74c670deb76f3c98ebe84cfb9aa8174c",
                                      "typeString": "literal_string \"PK_ALREADY_IN_RING\""
                                    },
                                    "value": "PK_ALREADY_IN_RING"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_f66bce24130503187d7a08e9b03744ff74c670deb76f3c98ebe84cfb9aa8174c",
                                      "typeString": "literal_string \"PK_ALREADY_IN_RING\""
                                    }
                                  ],
                                  "id": 420,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "4957:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4957:28:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 423,
                              "nodeType": "ExpressionStatement",
                              "src": "4957:28:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 429,
                        "nodeType": "UncheckedBlock",
                        "src": "5014:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "5042:3:5",
                              "subExpression": {
                                "id": 426,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 393,
                                "src": "5042:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 428,
                            "nodeType": "ExpressionStatement",
                            "src": "5042:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 396,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "4804:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 397,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "4808:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4804:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Making sure no duplicate public keys are added",
                  "id": 431,
                  "initializationExpression": {
                    "assignments": [
                      393
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4797:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "4789:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4789:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 395,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4801:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4789:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4784:286:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 432,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "5084:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5100:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5084:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 443,
                  "nodeType": "IfStatement",
                  "src": "5080:75:5",
                  "trueBody": {
                    "id": 442,
                    "nodeType": "Block",
                    "src": "5103:52:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 435,
                            "name": "blockNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "5117:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 436,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5128:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "5128:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5143:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5128:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5117:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 441,
                        "nodeType": "ExpressionStatement",
                        "src": "5117:27:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 444,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "5165:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publicKeys",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 221,
                        "src": "5165:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                        }
                      },
                      "id": 448,
                      "indexExpression": {
                        "id": 446,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "5181:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5165:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                        "typeString": "uint256[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 449,
                      "name": "_publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "5197:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "5165:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage",
                      "typeString": "uint256[2] storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "5165:42:5"
                },
                {
                  "expression": {
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 452,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5217:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "5217:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 455,
                      "name": "amountTokenRecieved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "5241:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5217:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:43:5"
                },
                {
                  "id": 461,
                  "nodeType": "UncheckedBlock",
                  "src": "5270:49:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "5294:14:5",
                        "subExpression": {
                          "id": 458,
                          "name": "participants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "5294:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 460,
                      "nodeType": "ExpressionStatement",
                      "src": "5294:14:5"
                    }
                  ]
                },
                {
                  "assignments": [
                    463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 463,
                      "mutability": "mutable",
                      "name": "packedData",
                      "nameLocation": "5334:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "5329:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 462,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5329:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 464,
                            "name": "wParticipants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "5348:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "id": 465,
                            "name": "_BITWIDTH_PARTICIPANTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "5365:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5348:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 467,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5347:41:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "id": 468,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "5391:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5347:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5329:74:5"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 471,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "5413:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 472,
                              "name": "packedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "5427:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "id": 473,
                              "name": "_BITWIDTH_BLOCK_NUM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "5441:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5427:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 475,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5426:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "id": 476,
                        "name": "blockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "5464:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5426:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5413:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "5413:59:5"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 480,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5482:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "packedRingData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "5482:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 483,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "5504:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5482:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:32:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 486,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "5579:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 487,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "5595:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5579:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "If the ring is full, start a new ring",
                  "id": 505,
                  "nodeType": "IfStatement",
                  "src": "5575:221:5",
                  "trueBody": {
                    "id": 504,
                    "nodeType": "Block",
                    "src": "5617:179:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 489,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "5631:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                "typeString": "struct HettiPool.Ring storage pointer"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ringHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 230,
                            "src": "5631:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 493,
                                "name": "amountTokenRecieved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "5656:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 494,
                                "name": "ringIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 367,
                                "src": "5677:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 492,
                              "name": "hashRing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 827,
                              "src": "5647:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,uint256) view returns (bytes32)"
                              }
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5647:40:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5631:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "5631:56:5"
                      },
                      {
                        "documentation": "Add new Ring pool",
                        "expression": {
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 498,
                              "name": "ringsNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "5748:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 500,
                            "indexExpression": {
                              "id": 499,
                              "name": "amountTokenRecieved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "5760:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5748:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5784:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5748:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "5748:37:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 507,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5821:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5821:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 509,
                        "name": "amountTokenRecieved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "5833:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 510,
                        "name": "ringIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "5854:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 506,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "5811:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5811:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "EmitStatement",
                  "src": "5806:58:5"
                }
              ]
            },
            "documentation": {
              "id": 314,
              "nodeType": "StructuredDocumentation",
              "src": "3862:170:5",
              "text": "@notice Deposit `amount` of `token` into the vault\n @param _amount The amount of `token` to deposit\n @param _publicKey The public key of the participant"
            },
            "functionSelector": "71d8ded9",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "4046:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4059:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "4054:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "_publicKey",
                  "nameLocation": "4086:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "4068:28:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 317,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4068:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 319,
                    "length": {
                      "hexValue": "32",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4076:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4068:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4053:44:5"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4105:0:5"
            },
            "scope": 1181,
            "src": "4037:1834:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "6422:1857:5",
              "statements": [
                {
                  "assignments": [
                    535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 535,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "6445:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "6432:17:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                        "typeString": "struct HettiPool.Ring"
                      },
                      "typeName": {
                        "id": 534,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 533,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 231,
                          "src": "6432:4:5"
                        },
                        "referencedDeclaration": 231,
                        "src": "6432:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 541,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 536,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "6452:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                        }
                      },
                      "id": 538,
                      "indexExpression": {
                        "id": 537,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "6458:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6452:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                        "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                      }
                    },
                    "id": 540,
                    "indexExpression": {
                      "id": 539,
                      "name": "ringIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "6471:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6452:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$231_storage",
                      "typeString": "struct HettiPool.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6432:49:5"
                },
                {
                  "assignments": [
                    543,
                    545,
                    547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 543,
                      "mutability": "mutable",
                      "name": "wParticipants",
                      "nameLocation": "6498:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "6493:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 542,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6493:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "6526:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "6521:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6521:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 547,
                      "mutability": "mutable",
                      "name": "blockNum",
                      "nameLocation": "6545:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "6540:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 546,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6540:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 552,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 549,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "6575:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "packedRingData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 214,
                        "src": "6575:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 548,
                      "name": "getRingPackedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "6557:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6557:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6492:103:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 553,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "6610:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6631:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6623:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6623:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6623:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6610:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 564,
                  "nodeType": "IfStatement",
                  "src": "6606:76:5",
                  "trueBody": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "6635:47:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5a45524f5f41444452455353",
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6656:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                                "typeString": "literal_string \"ZERO_ADDRESS\""
                              },
                              "value": "ZERO_ADDRESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                                "typeString": "literal_string \"ZERO_ADDRESS\""
                              }
                            ],
                            "id": 559,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6649:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6649:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "6649:22:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 565,
                      "name": "wParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "6704:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 566,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "6721:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6704:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 573,
                  "nodeType": "IfStatement",
                  "src": "6700:97:5",
                  "trueBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "6743:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "414c4c5f46554e44535f57495448445241574e",
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6764:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c634b3b1716440aaa88dc45b014b8f309105c452b71701861a713535bb28a2c",
                                "typeString": "literal_string \"ALL_FUNDS_WITHDRAWN\""
                              },
                              "value": "ALL_FUNDS_WITHDRAWN"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7c634b3b1716440aaa88dc45b014b8f309105c452b71701861a713535bb28a2c",
                                "typeString": "literal_string \"ALL_FUNDS_WITHDRAWN\""
                              }
                            ],
                            "id": 568,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6757:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6757:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "6757:29:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 574,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "6811:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ringHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 230,
                      "src": "6811:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6836:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6828:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6828:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6828:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6811:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 586,
                  "nodeType": "IfStatement",
                  "src": "6807:86:5",
                  "trueBody": {
                    "id": 585,
                    "nodeType": "Block",
                    "src": "6843:50:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "52494e475f4e4f545f434c4f534544",
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6864:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ae11486da3a827106adc7d5d70961a9463b6590ca346e868e8ec9875c0c9b66b",
                                "typeString": "literal_string \"RING_NOT_CLOSED\""
                              },
                              "value": "RING_NOT_CLOSED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ae11486da3a827106adc7d5d70961a9463b6590ca346e868e8ec9875c0c9b66b",
                                "typeString": "literal_string \"RING_NOT_CLOSED\""
                              }
                            ],
                            "id": 581,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6857:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6857:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 584,
                        "nodeType": "ExpressionStatement",
                        "src": "6857:25:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 593,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "6923:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "6903:30:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[2][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 590,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6903:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 591,
                          "length": {
                            "hexValue": "32",
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6911:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "6903:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 592,
                        "nodeType": "ArrayTypeName",
                        "src": "6903:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                          "typeString": "uint256[2][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 601,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 599,
                        "name": "MAX_RING_PARTICIPANT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "6953:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6936:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[2] memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 594,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6940:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 596,
                          "length": {
                            "hexValue": "32",
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6948:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "6940:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 597,
                        "nodeType": "ArrayTypeName",
                        "src": "6940:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                          "typeString": "uint256[2][]"
                        }
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6936:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[2] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6903:71:5"
                },
                {
                  "body": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "7032:118:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 609,
                              "name": "publicKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 593,
                              "src": "7046:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[2] memory[] memory"
                              }
                            },
                            "id": 611,
                            "indexExpression": {
                              "id": 610,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "7057:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7046:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 612,
                                "name": "ring",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 535,
                                "src": "7062:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                  "typeString": "struct HettiPool.Ring storage pointer"
                                }
                              },
                              "id": 613,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "publicKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 221,
                              "src": "7062:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 615,
                            "indexExpression": {
                              "id": 614,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "7078:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7062:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "src": "7046:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "7046:34:5"
                      },
                      {
                        "id": 621,
                        "nodeType": "UncheckedBlock",
                        "src": "7094:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "7122:3:5",
                              "subExpression": {
                                "id": 618,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 603,
                                "src": "7122:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 620,
                            "nodeType": "ExpressionStatement",
                            "src": "7122:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 606,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "7005:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 607,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "7009:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7005:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 623,
                  "initializationExpression": {
                    "assignments": [
                      603
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6998:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 623,
                        "src": "6990:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6990:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 605,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7002:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6990:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6985:165:5"
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "signatureVerified",
                      "nameLocation": "7211:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "7206:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7206:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Attempts to verify ring signature",
                  "id": 640,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 631,
                              "name": "ring",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "7273:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                "typeString": "struct HettiPool.Ring storage pointer"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ringHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 230,
                            "src": "7273:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 633,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "7288:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 629,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7256:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7256:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7256:42:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 635,
                        "name": "c0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 523,
                        "src": "7332:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 636,
                        "name": "keyImage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "7348:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "id": 637,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "7370:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 638,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "7385:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 627,
                        "name": "LSAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2454,
                        "src": "7231:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSAG_$2454_$",
                          "typeString": "type(library LSAG)"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2453,
                      "src": "7231:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,uint256,uint256[2] memory,uint256[] memory,uint256[2] memory[] memory) view returns (bool)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7231:174:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7206:199:5"
                },
                {
                  "condition": {
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7420:18:5",
                    "subExpression": {
                      "id": 641,
                      "name": "signatureVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "7421:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 648,
                  "nodeType": "IfStatement",
                  "src": "7416:76:5",
                  "trueBody": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "7440:52:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "494e56414c49445f5349474e4154555245",
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7461:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
                                "typeString": "literal_string \"INVALID_SIGNATURE\""
                              },
                              "value": "INVALID_SIGNATURE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
                                "typeString": "literal_string \"INVALID_SIGNATURE\""
                              }
                            ],
                            "id": 643,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "7454:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7454:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "7454:27:5"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 687,
                    "nodeType": "Block",
                    "src": "7608:237:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 656,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 535,
                                    "src": "7626:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 657,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyImages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 228,
                                  "src": "7626:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 659,
                                "indexExpression": {
                                  "id": 658,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 650,
                                  "src": "7641:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7626:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 661,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7644:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7626:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 662,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "7650:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 664,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7659:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7650:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7626:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 666,
                                    "name": "ring",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 535,
                                    "src": "7681:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                      "typeString": "struct HettiPool.Ring storage pointer"
                                    }
                                  },
                                  "id": 667,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyImages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 228,
                                  "src": "7681:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                    "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                  }
                                },
                                "id": 669,
                                "indexExpression": {
                                  "id": 668,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 650,
                                  "src": "7696:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7681:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                  "typeString": "uint256[2] storage ref"
                                }
                              },
                              "id": 671,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7699:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7681:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 672,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "7705:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 674,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7714:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7705:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7681:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7626:90:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 682,
                        "nodeType": "IfStatement",
                        "src": "7622:153:5",
                        "trueBody": {
                          "id": 681,
                          "nodeType": "Block",
                          "src": "7718:57:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "555345445f5349474e4154555245",
                                    "id": 678,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7743:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bde00ef8e8c7cefc3cfc63c51af4c60401c4f294a165c6b4598c8cd1d57de8a6",
                                      "typeString": "literal_string \"USED_SIGNATURE\""
                                    },
                                    "value": "USED_SIGNATURE"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_bde00ef8e8c7cefc3cfc63c51af4c60401c4f294a165c6b4598c8cd1d57de8a6",
                                      "typeString": "literal_string \"USED_SIGNATURE\""
                                    }
                                  ],
                                  "id": 677,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "7736:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7736:24:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 680,
                              "nodeType": "ExpressionStatement",
                              "src": "7736:24:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 686,
                        "nodeType": "UncheckedBlock",
                        "src": "7789:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "7817:3:5",
                              "subExpression": {
                                "id": 683,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "7817:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 685,
                            "nodeType": "ExpressionStatement",
                            "src": "7817:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 653,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "7588:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 654,
                      "name": "wParticipants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "7592:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7588:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Confirm key image is not already used (no double spends)",
                  "id": 688,
                  "initializationExpression": {
                    "assignments": [
                      650
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7581:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "7576:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7576:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 652,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7585:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7576:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "7571:274:5"
                },
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 689,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "7859:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyImages",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 228,
                        "src": "7859:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                          "typeString": "mapping(uint256 => uint256[2] storage ref)"
                        }
                      },
                      "id": 693,
                      "indexExpression": {
                        "id": 691,
                        "name": "wParticipants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "7874:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7859:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage",
                        "typeString": "uint256[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 694,
                      "name": "keyImage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "7891:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2] memory"
                      }
                    },
                    "src": "7859:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage",
                      "typeString": "uint256[2] storage ref"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "7859:40:5"
                },
                {
                  "id": 700,
                  "nodeType": "UncheckedBlock",
                  "src": "7909:50:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "7933:15:5",
                        "subExpression": {
                          "id": 697,
                          "name": "wParticipants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "7933:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 699,
                      "nodeType": "ExpressionStatement",
                      "src": "7933:15:5"
                    }
                  ]
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "packedData",
                      "nameLocation": "7974:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "7969:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7969:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 709,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 703,
                            "name": "wParticipants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 543,
                            "src": "7988:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "id": 704,
                            "name": "_BITWIDTH_PARTICIPANTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "8005:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7988:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 706,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7987:41:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "id": 707,
                      "name": "participants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "8031:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7987:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7969:74:5"
                },
                {
                  "expression": {
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 710,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "8053:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 711,
                              "name": "packedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "8067:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "id": 712,
                              "name": "_BITWIDTH_BLOCK_NUM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "8081:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8067:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 714,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8066:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "id": 715,
                        "name": "blockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 547,
                        "src": "8104:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8066:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8053:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "8053:59:5"
                },
                {
                  "expression": {
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 719,
                        "name": "ring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "8122:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring storage pointer"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "packedRingData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "8122:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 722,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "8144:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8122:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "8122:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 729,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "8189:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 730,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "8200:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 726,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "8173:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 725,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1863,
                          "src": "8167:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1863_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8167:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1863",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1400,
                      "src": "8167:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8167:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "8167:45:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 734,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "8238:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 735,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "8249:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 736,
                        "name": "ringIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "8262:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 733,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "8228:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8228:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "EmitStatement",
                  "src": "8223:49:5"
                }
              ]
            },
            "documentation": {
              "id": 515,
              "nodeType": "StructuredDocumentation",
              "src": "5878:361:5",
              "text": "@notice Withdraw `amount` of `token` from the vault\n @param recipient The address to send the withdrawn tokens to\n @param amountToken The amount of `token` to withdraw\n @param ringIndex The index of the ring to withdraw from\n @param keyImage The key image of the participant\n @param c0 signature\n @param s signature"
            },
            "functionSelector": "62230498",
            "id": 740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "6253:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6287:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "6271:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6271:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "6306:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "6298:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6298:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "ringIndex",
                  "nameLocation": "6327:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "6319:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6319:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "c0",
                  "nameLocation": "6354:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "6346:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6346:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "keyImage",
                  "nameLocation": "6376:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "6358:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 524,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6358:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 526,
                    "length": {
                      "hexValue": "32",
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6366:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6358:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "6403:1:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "6386:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 528,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6386:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 529,
                    "nodeType": "ArrayTypeName",
                    "src": "6386:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6261:149:5"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6422:0:5"
            },
            "scope": 1181,
            "src": "6244:2035:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "8544:681:5",
              "statements": [
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "8594:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8554:50:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                        "typeString": "uint256[2][3]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 754,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8554:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 755,
                          "length": {
                            "hexValue": "32",
                            "id": 752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8562:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "8554:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                            "typeString": "uint256[2]"
                          }
                        },
                        "id": 756,
                        "length": {
                          "id": 753,
                          "name": "MAX_RING_PARTICIPANT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "8565:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "8554:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$3_storage_ptr",
                          "typeString": "uint256[2][3]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8554:50:5"
                },
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "receivedToken",
                      "nameLocation": "8622:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8614:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8614:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 764,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 762,
                        "name": "_amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "8650:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 761,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "8638:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8638:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8614:49:5"
                },
                {
                  "assignments": [
                    767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "ring",
                      "nameLocation": "8687:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8674:17:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                        "typeString": "struct HettiPool.Ring"
                      },
                      "typeName": {
                        "id": 766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 765,
                          "name": "Ring",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 231,
                          "src": "8674:4:5"
                        },
                        "referencedDeclaration": 231,
                        "src": "8674:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                          "typeString": "struct HettiPool.Ring"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 773,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 768,
                        "name": "rings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "8694:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                        }
                      },
                      "id": 770,
                      "indexExpression": {
                        "id": 769,
                        "name": "receivedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "8700:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8694:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                        "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                      }
                    },
                    "id": 772,
                    "indexExpression": {
                      "id": 771,
                      "name": "_ringIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "8715:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8694:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ring_$231_storage",
                      "typeString": "struct HettiPool.Ring storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8674:52:5"
                },
                {
                  "body": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "8782:119:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 781,
                              "name": "publicKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "8796:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                                "typeString": "uint256[2] memory[3] memory"
                              }
                            },
                            "id": 783,
                            "indexExpression": {
                              "id": 782,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "8807:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8796:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 784,
                                "name": "ring",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 767,
                                "src": "8812:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                                  "typeString": "struct HettiPool.Ring storage pointer"
                                }
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "publicKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 221,
                              "src": "8812:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                "typeString": "mapping(uint256 => uint256[2] storage ref)"
                              }
                            },
                            "id": 787,
                            "indexExpression": {
                              "id": 786,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "8828:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8812:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage",
                              "typeString": "uint256[2] storage ref"
                            }
                          },
                          "src": "8796:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 789,
                        "nodeType": "ExpressionStatement",
                        "src": "8796:34:5"
                      },
                      {
                        "id": 793,
                        "nodeType": "UncheckedBlock",
                        "src": "8845:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "8873:3:5",
                              "subExpression": {
                                "id": 790,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 775,
                                "src": "8873:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 792,
                            "nodeType": "ExpressionStatement",
                            "src": "8873:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 778,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "8755:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 779,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "8759:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8755:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 795,
                  "initializationExpression": {
                    "assignments": [
                      775
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 775,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8748:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "8742:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "8742:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 777,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8752:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8742:11:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "8737:164:5"
                },
                {
                  "assignments": [
                    797,
                    null,
                    799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "8917:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8912:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8912:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 799,
                      "mutability": "mutable",
                      "name": "blockNum",
                      "nameLocation": "8937:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8932:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 798,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8932:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 804,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 801,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "8967:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "packedRingData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 214,
                        "src": "8967:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 800,
                      "name": "getRingPackedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "8949:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8949:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8911:76:5"
                },
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "9011:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8998:14:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8998:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 821,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 810,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9055:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "9055:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9070:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9055:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 809,
                          "name": "blockhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -5,
                          "src": "9045:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) view returns (bytes32)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9045:27:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 815,
                        "name": "blockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "9086:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 816,
                          "name": "ring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "9108:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ring_$231_storage_ptr",
                            "typeString": "struct HettiPool.Ring storage pointer"
                          }
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountDeposited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 211,
                        "src": "9108:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 818,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9142:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 819,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "9168:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                          "typeString": "uint256[2] memory[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$3_memory_ptr",
                          "typeString": "uint256[2] memory[3] memory"
                        }
                      ],
                      "expression": {
                        "id": 807,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9015:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "9015:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9015:173:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8998:190:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 823,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "9216:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 822,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9206:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9206:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 749,
                  "id": 825,
                  "nodeType": "Return",
                  "src": "9199:19:5"
                }
              ]
            },
            "documentation": {
              "id": 741,
              "nodeType": "StructuredDocumentation",
              "src": "8285:150:5",
              "text": "@notice Generates a hash of the ring\n @param _amountToken The amount of `token` in the ring\n @param _ringIndex The index of the ring"
            },
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashRing",
            "nameLocation": "8449:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "_amountToken",
                  "nameLocation": "8466:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "8458:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8458:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "_ringIndex",
                  "nameLocation": "8488:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "8480:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8480:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8457:42:5"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "8531:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8531:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8530:9:5"
            },
            "scope": 1181,
            "src": "8440:785:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 850,
              "nodeType": "Block",
              "src": "9488:124:5",
              "statements": [
                {
                  "assignments": [
                    838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 838,
                      "mutability": "mutable",
                      "name": "receivedToken",
                      "nameLocation": "9506:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 850,
                      "src": "9498:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 837,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9498:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 840,
                        "name": "_amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "9534:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 839,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "9522:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9522:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9498:49:5"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 843,
                          "name": "rings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "9564:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                          }
                        },
                        "id": 845,
                        "indexExpression": {
                          "id": 844,
                          "name": "receivedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "9570:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9564:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                          "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                        }
                      },
                      "id": 847,
                      "indexExpression": {
                        "id": 846,
                        "name": "_ringIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "9585:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9564:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ring_$231_storage",
                        "typeString": "struct HettiPool.Ring storage ref"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ringHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 230,
                    "src": "9564:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 836,
                  "id": 849,
                  "nodeType": "Return",
                  "src": "9557:48:5"
                }
              ]
            },
            "documentation": {
              "id": 828,
              "nodeType": "StructuredDocumentation",
              "src": "9231:147:5",
              "text": "@notice Gets the hash of the ring\n @param _amountToken The amount of `token` in the ring\n @param _ringIndex The index of the ring"
            },
            "functionSelector": "9f1961e6",
            "id": 851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingHash",
            "nameLocation": "9392:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "_amountToken",
                  "nameLocation": "9412:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "9404:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9404:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "_ringIndex",
                  "nameLocation": "9434:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "9426:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9426:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9403:42:5"
            },
            "returnParameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "9475:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9475:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9474:9:5"
            },
            "scope": 1181,
            "src": "9383:229:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "9735:61:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9783:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HettiPool_$1181",
                              "typeString": "contract HettiPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HettiPool_$1181",
                              "typeString": "contract HettiPool"
                            }
                          ],
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9775:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9775:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9775:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 858,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "9758:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 857,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1863,
                          "src": "9752:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1863_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9752:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1863",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "9752:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9752:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 856,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "9745:44:5"
                }
              ]
            },
            "documentation": {
              "id": 852,
              "nodeType": "StructuredDocumentation",
              "src": "9618:56:5",
              "text": "@notice Gets the total amount of `token` in the ring"
            },
            "functionSelector": "abd70aa2",
            "id": 868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nameLocation": "9688:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9702:2:5"
            },
            "returnParameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "9726:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9726:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9725:9:5"
            },
            "scope": 1181,
            "src": "9679:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "10406:442:5",
              "statements": [
                {
                  "assignments": [
                    880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 880,
                      "mutability": "mutable",
                      "name": "poolBalance",
                      "nameLocation": "10424:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 942,
                      "src": "10416:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 879,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10416:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 881,
                      "name": "getPoolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "10438:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10438:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10416:38:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 884,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 880,
                      "src": "10468:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 885,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "10482:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10468:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 892,
                  "nodeType": "IfStatement",
                  "src": "10465:78:5",
                  "trueBody": {
                    "id": 891,
                    "nodeType": "Block",
                    "src": "10490:53:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "494e53554646494349454e545f46554e4453",
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10511:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_292ddc23e79f5a4f6e48dc7ac9f5dc6912d137767d4f92ed78c3842d7550ed2d",
                                "typeString": "literal_string \"INSUFFICIENT_FUNDS\""
                              },
                              "value": "INSUFFICIENT_FUNDS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_292ddc23e79f5a4f6e48dc7ac9f5dc6912d137767d4f92ed78c3842d7550ed2d",
                                "typeString": "literal_string \"INSUFFICIENT_FUNDS\""
                              }
                            ],
                            "id": 887,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "10504:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10504:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "10504:28:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 894,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "10561:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 942,
                      "src": "10553:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 893,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10553:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 898,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 896,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "10578:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 895,
                      "name": "getLoanFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "10567:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10567:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10553:32:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 900,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "10611:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      {
                        "id": 901,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "10621:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                          "typeString": "contract FlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 899,
                      "name": "Flashloan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "10601:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_FlashBorrower_$1876_$_t_uint256_$returns$__$",
                        "typeString": "function (contract FlashBorrower,uint256)"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10601:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "EmitStatement",
                  "src": "10596:32:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 910,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "10663:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10655:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 908,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10655:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10655:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "10674:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 905,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "10639:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 904,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1863,
                          "src": "10633:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1863_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10633:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1863",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1400,
                      "src": "10633:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10633:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "10633:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 918,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "10706:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 919,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "10714:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 920,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "10719:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 915,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "10685:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1875,
                      "src": "10685:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10685:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "10685:39:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 923,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "10733:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 924,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "10747:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10733:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 932,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10784:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HettiPool_$1181",
                                "typeString": "contract HettiPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HettiPool_$1181",
                                "typeString": "contract HettiPool"
                              }
                            ],
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10776:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 930,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10776:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10776:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 927,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "10759:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 926,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1863,
                            "src": "10753:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1863_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10753:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1863",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1375,
                        "src": "10753:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10753:37:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10733:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 941,
                  "nodeType": "IfStatement",
                  "src": "10729:116:5",
                  "trueBody": {
                    "id": 940,
                    "nodeType": "Block",
                    "src": "10791:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "544f4b454e535f4e4f545f52455455524e4544",
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10812:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2e1be1a93ef41bac891640c990d824282bd006cb7dbec46ea5cd489363008e34",
                                "typeString": "literal_string \"TOKENS_NOT_RETURNED\""
                              },
                              "value": "TOKENS_NOT_RETURNED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2e1be1a93ef41bac891640c990d824282bd006cb7dbec46ea5cd489363008e34",
                                "typeString": "literal_string \"TOKENS_NOT_RETURNED\""
                              }
                            ],
                            "id": 936,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "10805:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10805:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 939,
                        "nodeType": "ExpressionStatement",
                        "src": "10805:29:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 869,
              "nodeType": "StructuredDocumentation",
              "src": "9985:317:5",
              "text": "@notice Request a flash loan\n @param receiver The contract that will receive the flash loan\n @param amount The amount of tokens you want to borrow\n @param data Data to forward to the receiver contract along with your flash loan\n @dev Make sure your contract implements the FlashBorrower interface!"
            },
            "functionSelector": "b61d27f6",
            "id": 943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "10313:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "10338:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "10324:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                    "typeString": "contract FlashBorrower"
                  },
                  "typeName": {
                    "id": 871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 870,
                      "name": "FlashBorrower",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1876,
                      "src": "10324:13:5"
                    },
                    "referencedDeclaration": 1876,
                    "src": "10324:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlashBorrower_$1876",
                      "typeString": "contract FlashBorrower"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10358:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "10350:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10350:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10383:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "10368:19:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10368:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10320:70:5"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10406:0:5"
            },
            "scope": 1181,
            "src": "10304:544:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "11034:51:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 951,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "11052:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 952,
                            "name": "loanFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "11062:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11052:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 954,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11051:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11073:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "11051:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 950,
                  "id": 957,
                  "nodeType": "Return",
                  "src": "11044:34:5"
                }
              ]
            },
            "documentation": {
              "id": 944,
              "nodeType": "StructuredDocumentation",
              "src": "10854:119:5",
              "text": "@notice Gets the pool percentage from the flash loan\n @param _amount The amount of tokens you want to borrow"
            },
            "functionSelector": "8ae0edba",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLoanFee",
            "nameLocation": "10987:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11003:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "10998:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10998:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10997:14:5"
            },
            "returnParameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "11028:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11028:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11027:6:5"
            },
            "scope": 1181,
            "src": "10978:107:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1006,
              "nodeType": "Block",
              "src": "11460:445:5",
              "statements": [
                {
                  "assignments": [
                    968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 968,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "11475:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "11470:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 967,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11470:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 970,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11485:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11470:20:5"
                },
                {
                  "body": {
                    "id": 997,
                    "nodeType": "Block",
                    "src": "11530:229:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 978,
                              "name": "allowedAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "11548:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$10_storage",
                                "typeString": "uint256[10] storage ref"
                              }
                            },
                            "id": 980,
                            "indexExpression": {
                              "id": 979,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "11563:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11548:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 981,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 962,
                            "src": "11569:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11548:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 988,
                        "nodeType": "IfStatement",
                        "src": "11544:81:5",
                        "trueBody": {
                          "id": 987,
                          "nodeType": "Block",
                          "src": "11578:47:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 983,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 968,
                                  "src": "11596:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 984,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11606:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "11596:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 986,
                              "nodeType": "ExpressionStatement",
                              "src": "11596:14:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 989,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "11642:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 992,
                        "nodeType": "IfStatement",
                        "src": "11638:51:5",
                        "trueBody": {
                          "id": 991,
                          "nodeType": "Block",
                          "src": "11651:38:5",
                          "statements": [
                            {
                              "id": 990,
                              "nodeType": "Break",
                              "src": "11669:5:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 996,
                        "nodeType": "UncheckedBlock",
                        "src": "11703:46:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "11731:3:5",
                              "subExpression": {
                                "id": 993,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "11731:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 995,
                            "nodeType": "ExpressionStatement",
                            "src": "11731:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 975,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "11521:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11525:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "11521:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 998,
                  "initializationExpression": {
                    "assignments": [
                      972
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 972,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11514:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "11506:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 971,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11506:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 974,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11518:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11506:13:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "11501:258:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1000,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "11844:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414d4f554e545f4e4f545f414c4c4f574544",
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11853:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44fe74eae53febc46c69a4a9edd92da99421b5498bcdab254e852200e5f674d9",
                          "typeString": "literal_string \"AMOUNT_NOT_ALLOWED\""
                        },
                        "value": "AMOUNT_NOT_ALLOWED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44fe74eae53febc46c69a4a9edd92da99421b5498bcdab254e852200e5f674d9",
                          "typeString": "literal_string \"AMOUNT_NOT_ALLOWED\""
                        }
                      ],
                      "id": 999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11836:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11836:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "11836:38:5"
                },
                {
                  "expression": {
                    "id": 1004,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 962,
                    "src": "11891:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 966,
                  "id": 1005,
                  "nodeType": "Return",
                  "src": "11884:14:5"
                }
              ]
            },
            "documentation": {
              "id": 960,
              "nodeType": "StructuredDocumentation",
              "src": "11273:100:5",
              "text": "@notice Checks if the amount sent is allowed\n @param _amount The amount of token to check"
            },
            "id": 1007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amountCheck",
            "nameLocation": "11387:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11407:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "11399:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11399:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11398:17:5"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "11447:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11447:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11446:9:5"
            },
            "scope": 1181,
            "src": "11378:527:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1088,
              "nodeType": "Block",
              "src": "12205:375:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1022,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "12227:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1021,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "12215:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12215:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "12215:24:5"
                },
                {
                  "assignments": [
                    1032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1032,
                      "mutability": "mutable",
                      "name": "publicKeys",
                      "nameLocation": "12290:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1088,
                      "src": "12250:50:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$3_memory_ptr",
                        "typeString": "bytes32[2][3]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 1029,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12250:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1030,
                          "length": {
                            "hexValue": "32",
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12258:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "12250:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                            "typeString": "bytes32[2]"
                          }
                        },
                        "id": 1031,
                        "length": {
                          "id": 1028,
                          "name": "MAX_RING_PARTICIPANT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "12261:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "12250:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$3_storage_ptr",
                          "typeString": "bytes32[2][3]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1033,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12250:50:5"
                },
                {
                  "body": {
                    "id": 1084,
                    "nodeType": "Block",
                    "src": "12359:187:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1044,
                                "name": "publicKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1032,
                                "src": "12373:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$3_memory_ptr",
                                  "typeString": "bytes32[2] memory[3] memory"
                                }
                              },
                              "id": 1047,
                              "indexExpression": {
                                "id": 1045,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1035,
                                "src": "12384:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12373:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                                "typeString": "bytes32[2] memory"
                              }
                            },
                            "id": 1048,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12387:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12373:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1051,
                                          "name": "rings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 256,
                                          "src": "12400:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                                          }
                                        },
                                        "id": 1053,
                                        "indexExpression": {
                                          "id": 1052,
                                          "name": "amountToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1010,
                                          "src": "12406:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12400:18:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                                          "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                                        }
                                      },
                                      "id": 1055,
                                      "indexExpression": {
                                        "id": 1054,
                                        "name": "ringIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1012,
                                        "src": "12419:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12400:29:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Ring_$231_storage",
                                        "typeString": "struct HettiPool.Ring storage ref"
                                      }
                                    },
                                    "id": 1056,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "publicKeys",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 221,
                                    "src": "12400:40:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                      "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                    }
                                  },
                                  "id": 1058,
                                  "indexExpression": {
                                    "id": 1057,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1035,
                                    "src": "12441:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12400:43:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                    "typeString": "uint256[2] storage ref"
                                  }
                                },
                                "id": 1060,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12444:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12400:46:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12392:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 1049,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12392:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12392:55:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "12373:74:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1063,
                        "nodeType": "ExpressionStatement",
                        "src": "12373:74:5"
                      },
                      {
                        "expression": {
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1064,
                                "name": "publicKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1032,
                                "src": "12461:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$3_memory_ptr",
                                  "typeString": "bytes32[2] memory[3] memory"
                                }
                              },
                              "id": 1067,
                              "indexExpression": {
                                "id": 1065,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1035,
                                "src": "12472:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12461:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                                "typeString": "bytes32[2] memory"
                              }
                            },
                            "id": 1068,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 1066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12475:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12461:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1071,
                                          "name": "rings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 256,
                                          "src": "12488:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(uint256 => struct HettiPool.Ring storage ref))"
                                          }
                                        },
                                        "id": 1073,
                                        "indexExpression": {
                                          "id": 1072,
                                          "name": "amountToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1010,
                                          "src": "12494:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12488:18:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ring_$231_storage_$",
                                          "typeString": "mapping(uint256 => struct HettiPool.Ring storage ref)"
                                        }
                                      },
                                      "id": 1075,
                                      "indexExpression": {
                                        "id": 1074,
                                        "name": "ringIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1012,
                                        "src": "12507:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12488:29:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Ring_$231_storage",
                                        "typeString": "struct HettiPool.Ring storage ref"
                                      }
                                    },
                                    "id": 1076,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "publicKeys",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 221,
                                    "src": "12488:40:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$2_storage_$",
                                      "typeString": "mapping(uint256 => uint256[2] storage ref)"
                                    }
                                  },
                                  "id": 1078,
                                  "indexExpression": {
                                    "id": 1077,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1035,
                                    "src": "12529:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12488:43:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                    "typeString": "uint256[2] storage ref"
                                  }
                                },
                                "id": 1080,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 1079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12532:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12488:46:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12480:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 1069,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12480:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12480:55:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "12461:74:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1083,
                        "nodeType": "ExpressionStatement",
                        "src": "12461:74:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1038,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1035,
                      "src": "12328:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1039,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "12332:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12328:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1085,
                  "initializationExpression": {
                    "assignments": [
                      1035
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1035,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12321:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "12316:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12316:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1037,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12325:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12316:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12354:3:5",
                      "subExpression": {
                        "id": 1041,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "12354:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1043,
                    "nodeType": "ExpressionStatement",
                    "src": "12354:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "12311:235:5"
                },
                {
                  "expression": {
                    "id": 1086,
                    "name": "publicKeys",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1032,
                    "src": "12563:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$3_memory_ptr",
                      "typeString": "bytes32[2] memory[3] memory"
                    }
                  },
                  "functionReturnParameters": 1020,
                  "id": 1087,
                  "nodeType": "Return",
                  "src": "12556:17:5"
                }
              ]
            },
            "documentation": {
              "id": 1008,
              "nodeType": "StructuredDocumentation",
              "src": "11911:152:5",
              "text": "@notice Gets the public keys of the ring\n @param amountToken The amount of `token` in the ring\n @param ringIndex The index of the ring"
            },
            "functionSelector": "d5fce735",
            "id": 1089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublicKeys",
            "nameLocation": "12077:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "12099:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "12091:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12091:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "ringIndex",
                  "nameLocation": "12120:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "12112:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12112:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12090:40:5"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "12160:39:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_memory_ptr_$3_memory_ptr",
                    "typeString": "bytes32[2][3]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1014,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12160:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1016,
                      "length": {
                        "hexValue": "32",
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12168:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "12160:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 1018,
                    "length": {
                      "id": 1017,
                      "name": "MAX_RING_PARTICIPANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "12171:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "12160:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$3_storage_ptr",
                      "typeString": "bytes32[2][3]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12159:41:5"
            },
            "scope": 1181,
            "src": "12068:512:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "12776:223:5",
              "statements": [
                {
                  "assignments": [
                    1102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1102,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "12794:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "12786:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12786:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1106,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1103,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1092,
                      "src": "12798:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 1104,
                      "name": "_BITWIDTH_BLOCK_NUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "12812:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12798:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12786:45:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1107,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "12871:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">>",
                        "rightExpression": {
                          "id": 1108,
                          "name": "_BITWIDTH_PARTICIPANTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "12876:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12871:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1110,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "12912:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "id": 1111,
                          "name": "_BITMASK_PARTICIPANTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "12916:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12912:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1113,
                          "name": "packedData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1092,
                          "src": "12951:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&",
                        "rightExpression": {
                          "id": 1114,
                          "name": "_BITMASK_BLOCK_NUM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "12964:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12951:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1116,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12857:135:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1100,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "12850:142:5"
                }
              ]
            },
            "documentation": {
              "id": 1090,
              "nodeType": "StructuredDocumentation",
              "src": "12586:94:5",
              "text": "@notice Gets the unpacked, packed ring data\n @param packedData The packed ring data"
            },
            "functionSelector": "bf12505b",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingPackedData",
            "nameLocation": "12694:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "packedData",
                  "nameLocation": "12717:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "12712:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12712:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12711:17:5"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "12750:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12750:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "12759:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12759:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "12768:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12768:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12749:27:5"
            },
            "scope": 1181,
            "src": "12685:314:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1134,
              "nodeType": "Block",
              "src": "13208:85:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1127,
                            "name": "packedData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "13226:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">>",
                          "rightExpression": {
                            "id": 1128,
                            "name": "_BITWIDTH_BLOCK_NUM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "13240:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13226:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1130,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13225:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 1131,
                      "name": "_BITWIDTH_PARTICIPANTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "13264:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13225:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1126,
                  "id": 1133,
                  "nodeType": "Return",
                  "src": "13218:68:5"
                }
              ]
            },
            "documentation": {
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "13005:124:5",
              "text": "@notice Gets the number of participants that have withdrawn from the ring\n @param packedData The packed ring data"
            },
            "functionSelector": "9edb6cbd",
            "id": 1135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWParticipant",
            "nameLocation": "13143:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "packedData",
                  "nameLocation": "13167:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "13159:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13159:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13158:20:5"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "13200:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13200:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13199:9:5"
            },
            "scope": 1181,
            "src": "13134:159:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "13479:113:5",
              "statements": [
                {
                  "assignments": [
                    1144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1144,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "13497:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1153,
                      "src": "13489:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1143,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13489:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1145,
                      "name": "packedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "13501:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 1146,
                      "name": "_BITWIDTH_BLOCK_NUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "13515:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13501:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13489:45:5"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1149,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "13560:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&",
                    "rightExpression": {
                      "id": 1150,
                      "name": "_BITMASK_PARTICIPANTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "13564:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13560:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1152,
                  "nodeType": "Return",
                  "src": "13553:32:5"
                }
              ]
            },
            "documentation": {
              "id": 1136,
              "nodeType": "StructuredDocumentation",
              "src": "13299:102:5",
              "text": "@notice Gets the number of participants in the ring\n @param packedData The packed ring data"
            },
            "functionSelector": "1b9db2ef",
            "id": 1154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getParticipant",
            "nameLocation": "13415:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "packedData",
                  "nameLocation": "13438:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "13430:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13430:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13429:20:5"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "13471:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13471:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13470:9:5"
            },
            "scope": 1181,
            "src": "13406:186:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1162,
              "nodeType": "Block",
              "src": "13742:44:5",
              "statements": [
                {
                  "expression": {
                    "id": 1160,
                    "name": "MAX_RING_PARTICIPANT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 170,
                    "src": "13759:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1159,
                  "id": 1161,
                  "nodeType": "Return",
                  "src": "13752:27:5"
                }
              ]
            },
            "documentation": {
              "id": 1155,
              "nodeType": "StructuredDocumentation",
              "src": "13598:63:5",
              "text": "@notice Gets the maximum number of participants in any ring"
            },
            "functionSelector": "7c0ffaa2",
            "id": 1163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRingMaxParticipants",
            "nameLocation": "13675:22:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13697:2:5"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "13729:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13729:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13728:9:5"
            },
            "scope": 1181,
            "src": "13666:120:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1179,
              "nodeType": "Block",
              "src": "14005:82:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1172,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "14027:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1171,
                      "name": "amountCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "14015:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14015:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "14015:24:5"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1175,
                      "name": "ringsNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "14056:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1177,
                    "indexExpression": {
                      "id": 1176,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1166,
                      "src": "14068:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14056:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1170,
                  "id": 1178,
                  "nodeType": "Return",
                  "src": "14049:31:5"
                }
              ]
            },
            "documentation": {
              "id": 1164,
              "nodeType": "StructuredDocumentation",
              "src": "13792:116:5",
              "text": "@notice Gets the lates ring index for `amountToken`\n @param amountToken The amount of `token` in the ring"
            },
            "functionSelector": "7f5bf51c",
            "id": 1180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRingIndex",
            "nameLocation": "13922:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "13950:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "13942:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13942:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13941:21:5"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "13992:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13992:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13991:9:5"
            },
            "scope": 1181,
            "src": "13913:174:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1182,
        "src": "222:13867:5",
        "usedErrors": [
          141,
          143
        ]
      }
    ],
    "src": "43:14046:5"
  },
  "bytecode": "6080604052600960025534801561001557600080fd5b506119bb806100256000396000f3fe6080604052600436106101095760003560e01c80639bcb557211610095578063b61d27f611610064578063b61d27f6146102e8578063bf12505b146102fb578063c4d66de81461031b578063d5fce7351461033b578063fc0c546a1461036857600080fd5b80639bcb55721461027c5780639edb6cbd146102925780639f1961e6146102b3578063abd70aa2146102d357600080fd5b806371d8ded9116100dc57806371d8ded9146101db5780637c0ffaa2146101fb5780637f5bf51c1461020f5780638ae0edba1461022f5780639325019d1461024f57600080fd5b80631b9db2ef1461010e5780633b97e8561461014157806362230498146101575780636381d19e14610179575b600080fd5b34801561011a57600080fd5b5061012e610129366004611274565b6103a0565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061012e60015481565b34801561016357600080fd5b5061017761017236600461135c565b6103bc565b005b34801561018557600080fd5b506101c0610194366004611444565b600e60209081526000928352604080842090915290825290208054600182015460049092015490919083565b60408051938452602084019290925290820152606001610138565b3480156101e757600080fd5b506101776101f6366004611466565b6107fd565b34801561020757600080fd5b50600361012e565b34801561021b57600080fd5b5061012e61022a366004611274565b610afc565b34801561023b57600080fd5b5061012e61024a366004611274565b610b1b565b34801561025b57600080fd5b5061012e61026a366004611274565b600d6020526000908152604090205481565b34801561028857600080fd5b5061012e60025481565b34801561029e57600080fd5b5061012e6102ad366004611274565b60301c90565b3480156102bf57600080fd5b5061012e6102ce366004611444565b610b3e565b3480156102df57600080fd5b5061012e610b70565b6101776102f6366004611493565b610be2565b34801561030757600080fd5b506101c0610316366004611274565b610e21565b34801561032757600080fd5b5061017761033636600461151c565b610e5f565b34801561034757600080fd5b5061035b610356366004611444565b610f5b565b6040516101389190611540565b34801561037457600080fd5b50600054610388906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b6000602082901c6103b56001620100006115b0565b1692915050565b6000858152600e6020908152604080832087845290915281206001810154909190819081906103ea90610e21565b919450925090506001600160a01b038a1661043b5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064015b60405180910390fd5b600383106104815760405162461bcd60e51b815260206004820152601360248201527220a6262fa32aa72229afaba4aa24222920aba760691b6044820152606401610432565b60048401546104c45760405162461bcd60e51b815260206004820152600f60248201526e14925391d7d393d517d0d313d4d151608a1b6044820152606401610432565b60408051600380825260808201909252600091816020015b6104e46111a9565b8152602001906001900390816104dc57905050905060005b600381101561056557600081815260028781016020526040918290208251808401938490529290919082845b815481526020019060010190808311610528575050505050828281518110610552576105526115c7565b60209081029190910101526001016104fc565b50600073__LSAG__________________________________63fe46a2b287600401548e6040516020016105b492919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528b8b8b876040518663ffffffff1660e01b81526004016105e795949392919061167b565b602060405180830381865af4158015610604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106289190611711565b90508061066b5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b6044820152606401610432565b60005b858110156106f457885160008281526003890160205260409020541480156106ae57506020808a0151600083815260038a01909252604090912060010154145b156106ec5760405162461bcd60e51b815260206004820152600e60248201526d555345445f5349474e415455524560901b6044820152606401610432565b60010161066e565b5060008581526003870160205260409020610711908960026111c7565b506001948501601081901b851760201b841795870186905560005460405163a9059cbb60e01b81526001600160a01b038f81166004830152602482018f90529297929091169063a9059cbb906044016020604051808303816000875af115801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190611711565b50604080516001600160a01b038f168152602081018e90529081018c90527f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69060600160405180910390a150505050505050505050505050565b600061080883611022565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190611711565b5081516020830151604051630cd3b28960e31b81526004810192909252602482015273__AltBn128______________________________9063669d944890604401602060405180830381865af41580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190611711565b6109445760405162461bcd60e51b815260206004820152600f60248201526e504b5f4e4f545f4f4e5f435552564560881b6044820152606401610432565b6000818152600d6020908152604080832054600e835281842081855290925282206001810154919290918190819061097b90610e21565b92509250925060005b82811015610a0e57875160008281526002870160205260409020541480156109c45750602080890151600083815260028801909252604090912060010154145b15610a065760405162461bcd60e51b8152602060048201526012602482015271504b5f414c52454144595f494e5f52494e4760701b6044820152606401610432565b600101610984565b5081600003610a2557610a226001436115b0565b90505b600082815260028086016020526040909120610a429189906111c7565b5085846000016000828254610a579190611733565b90915550506001918201601084901b811760201b82179285018390559160038310610ab057610a8687876110a7565b60048601556000878152600d60205260408120805460019290610aaa908490611733565b90915550505b60408051338152602081018990529081018790527f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca9060600160405180910390a1505050505050505050565b6000610b0782611022565b50506000908152600d602052604090205490565b600061271060025483610b2e919061174b565b610b38919061176a565b92915050565b600080610b4a84611022565b6000908152600e6020908152604080832086845290915290206004015491505092915050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdd919061178c565b905090565b6000610bec610b70565b905083811015610c335760405162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f46554e445360701b6044820152606401610432565b6000610c3e85610b1b565b9050856001600160a01b03167f8852f4cb22828da9ddc44460130398d816e46fd1f370d80d82a4de81fcd5aeee86604051610c7b91815260200190565b60405180910390a260005460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa9190611711565b50604051637924fd7d60e01b81526001600160a01b03871690637924fd7d90610d2d9088908590899089906004016117a5565b600060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b50506000546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb919061178c565b610dd58284611733565b1115610e195760405162461bcd60e51b81526020600482015260136024820152721513d2d15394d7d393d517d491551554939151606a1b6044820152606401610432565b505050505050565b60008080602084901c603085901c610e3d6001620100006115b0565b8216610e4f60016401000000006115b0565b8716935093509350509193909250565b6000546001600160a01b031615610e885760405162dc149f60e41b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0591906117e2565b60ff1660015560005b600a811015610f5757600154610f2590600a6118e9565b610f308260026118e9565b610f3a919061174b565b600382600a8110610f4d57610f4d6115c7565b0155600101610f0e565b5050565b610f63611205565b610f6c83611022565b50610f75611205565b60005b600381101561101a576000858152600e602090815260408083208784528252808320848452600201909152902054828260038110610fb857610fb86115c7565b60209081029190910151919091526000868152600e8252604080822087835283528082208483526002019092522060010154828260038110610ffc57610ffc6115c7565b60200201516001602002015280611012816118f5565b915050610f78565b509392505050565b600080805b600a81101561105d5783600382600a8110611044576110446115c7565b01540361105057600191505b8161105d57600101611027565b50806110a05760405162461bcd60e51b8152602060048201526012602482015271105353d5539517d393d517d0531313d5d15160721b6044820152606401610432565b5090919050565b60006110b1611232565b60006110bc85611022565b6000818152600e6020908152604080832088845290915281209192505b60038160ff1610156111465760ff8116600090815260028381016020526040918290208251808401938490529290919082845b81548152602001906001019080831161110c575050505050848260ff1660038110611139576111396115c7565b60200201526001016110d9565b506000806111578360010154610e21565b9250509150600060014361116b91906115b0565b8454604051611184924091859187908b9060200161190e565b60408051808303601f1901815291905280516020909101209998505050505050505050565b60405180604001604052806002906020820280368337509192915050565b82600281019282156111f5579160200282015b828111156111f55782518255916020019190600101906111da565b5061120192915061125f565b5090565b60405180606001604052806003905b61121c6111a9565b8152602001906001900390816112145790505090565b60405180606001604052806003905b6112496111a9565b8152602001906001900390816112415790505090565b5b808211156112015760008155600101611260565b60006020828403121561128657600080fd5b5035919050565b6001600160a01b03811681146112a257600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112e4576112e46112a5565b604052919050565b600082601f8301126112fd57600080fd5b6040516040810181811067ffffffffffffffff82111715611320576113206112a5565b806040525080604084018581111561133757600080fd5b845b81811015611351578035835260209283019201611339565b509195945050505050565b60008060008060008060e0878903121561137557600080fd5b86356113808161128d565b9550602087810135955060408801359450606088013593506113a58960808a016112ec565b925060c088013567ffffffffffffffff808211156113c257600080fd5b818a0191508a601f8301126113d657600080fd5b8135818111156113e8576113e86112a5565b8060051b91506113f98483016112bb565b818152918301840191848101908d84111561141357600080fd5b938501935b8385101561143157843582529385019390850190611418565b8096505050505050509295509295509295565b6000806040838503121561145757600080fd5b50508035926020909101359150565b6000806060838503121561147957600080fd5b8235915061148a84602085016112ec565b90509250929050565b600080600080606085870312156114a957600080fd5b84356114b48161128d565b935060208501359250604085013567ffffffffffffffff808211156114d857600080fd5b818701915087601f8301126114ec57600080fd5b8135818111156114fb57600080fd5b88602082850101111561150d57600080fd5b95989497505060200194505050565b60006020828403121561152e57600080fd5b81356115398161128d565b9392505050565b60c0810181836000805b600381101561159057825184835b6002811015611577578251825260209283019290910190600101611558565b505050604093909301926020929092019160010161154a565b5050505092915050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115c2576115c261159a565b500390565b634e487b7160e01b600052603260045260246000fd5b8060005b60028110156116005781518452602093840193909101906001016115e1565b50505050565b600081518084526020808501945080840160005b838110156116365781518752958201959082019060010161161a565b509495945050505050565b600081518084526020808501945080840160005b83811015611636576116688783516115dd565b6040969096019590820190600101611655565b60c08152600086518060c084015260005b818110156116a9576020818a0181015160e086840101520161168c565b818111156116bb57600060e083860101525b5060208301879052601f01601f191682016116d960408401876115dd565b60e08382030160808401526116f160e0820186611606565b905082810360a08401526117058185611641565b98975050505050505050565b60006020828403121561172357600080fd5b8151801515811461153957600080fd5b600082198211156117465761174661159a565b500190565b60008160001904831182151516156117655761176561159a565b500290565b60008261178757634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561179e57600080fd5b5051919050565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f909201601f191601019392505050565b6000602082840312156117f457600080fd5b815160ff8116811461153957600080fd5b600181815b808511156118405781600019048211156118265761182661159a565b8085161561183357918102915b93841c939080029061180a565b509250929050565b60008261185757506001610b38565b8161186457506000610b38565b816001811461187a5760028114611884576118a0565b6001915050610b38565b60ff8411156118955761189561159a565b50506001821b610b38565b5060208310610133831016604e8410600b84101617156118c3575081810a610b38565b6118cd8383611805565b80600019048211156118e1576118e161159a565b029392505050565b60006115398383611848565b6000600182016119075761190761159a565b5060010190565b8581526000602086818401526040868185015285606085015260808401856000805b600381101561196e57825184835b600281101561195b5782518252918801919088019060010161193e565b5050509284019291850191600101611930565b50505050505061014082019050969550505050505056fea26469706673582212209805cd7124e09ee7001f46131ebffbc4dbfe7e2e49511e0d5e5fad39d79dc4a864736f6c634300080d0033",
  "bytecodeSha1": "8d1a858af5dbf348fc617d6b2e12dfd99e40a4a5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "HettiPool",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "5": {
        "HettiPool.amountCheck": {
          "71": [
            11548,
            11576,
            false
          ],
          "72": [
            11642,
            11649,
            false
          ],
          "73": [
            11844,
            11851,
            true
          ]
        },
        "HettiPool.deposit": {
          "63": [
            4305,
            4369,
            false
          ],
          "64": [
            4841,
            4879,
            false
          ],
          "65": [
            4899,
            4937,
            false
          ],
          "66": [
            5084,
            5101,
            false
          ],
          "67": [
            5579,
            5615,
            false
          ]
        },
        "HettiPool.execute": {
          "68": [
            10468,
            10488,
            false
          ],
          "69": [
            10733,
            10790,
            false
          ]
        },
        "HettiPool.initialize": {
          "70": [
            3532,
            3551,
            false
          ]
        },
        "HettiPool.withdraw": {
          "58": [
            6610,
            6633,
            false
          ],
          "59": [
            6704,
            6741,
            false
          ],
          "60": [
            7421,
            7438,
            false
          ],
          "61": [
            7626,
            7661,
            false
          ],
          "62": [
            7681,
            7716,
            false
          ]
        }
      },
      "6": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "5": {
        "HettiPool.amountCheck": {
          "50": [
            11596,
            11610
          ],
          "51": [
            11669,
            11674
          ],
          "52": [
            11731,
            11734
          ],
          "53": [
            11836,
            11874
          ],
          "54": [
            11884,
            11898
          ]
        },
        "HettiPool.deposit": {
          "16": [
            4228,
            4289
          ],
          "17": [
            4385,
            4410
          ],
          "18": [
            4957,
            4985
          ],
          "19": [
            5042,
            5045
          ],
          "20": [
            5117,
            5144
          ],
          "21": [
            5165,
            5207
          ],
          "22": [
            5217,
            5260
          ],
          "23": [
            5294,
            5308
          ],
          "24": [
            5413,
            5472
          ],
          "25": [
            5482,
            5514
          ],
          "26": [
            5631,
            5687
          ],
          "27": [
            5748,
            5785
          ],
          "28": [
            5806,
            5864
          ]
        },
        "HettiPool.execute": {
          "34": [
            10504,
            10532
          ],
          "35": [
            10596,
            10628
          ],
          "36": [
            10633,
            10681
          ],
          "37": [
            10685,
            10724
          ],
          "38": [
            10805,
            10834
          ]
        },
        "HettiPool.getCurrentRingIndex": {
          "29": [
            14015,
            14039
          ],
          "30": [
            14049,
            14080
          ]
        },
        "HettiPool.getLoanFee": {
          "31": [
            11044,
            11078
          ]
        },
        "HettiPool.getParticipant": {
          "1": [
            13553,
            13585
          ]
        },
        "HettiPool.getPoolBalance": {
          "33": [
            9745,
            9789
          ]
        },
        "HettiPool.getPublicKeys": {
          "45": [
            12215,
            12239
          ],
          "46": [
            12373,
            12447
          ],
          "47": [
            12461,
            12535
          ],
          "48": [
            12354,
            12357
          ],
          "49": [
            12556,
            12573
          ]
        },
        "HettiPool.getRingHash": {
          "32": [
            9557,
            9605
          ]
        },
        "HettiPool.getRingPackedData": {
          "39": [
            12850,
            12992
          ]
        },
        "HettiPool.getWParticipant": {
          "0": [
            13218,
            13286
          ]
        },
        "HettiPool.hashRing": {
          "55": [
            8796,
            8830
          ],
          "56": [
            8873,
            8876
          ],
          "57": [
            9199,
            9218
          ]
        },
        "HettiPool.initialize": {
          "40": [
            3528,
            3580
          ],
          "41": [
            3590,
            3604
          ],
          "42": [
            3614,
            3654
          ],
          "43": [
            3727,
            3779
          ],
          "44": [
            3822,
            3825
          ]
        },
        "HettiPool.withdraw": {
          "2": [
            6649,
            6671
          ],
          "3": [
            6757,
            6786
          ],
          "4": [
            6857,
            6882
          ],
          "5": [
            7046,
            7080
          ],
          "6": [
            7122,
            7125
          ],
          "7": [
            7454,
            7481
          ],
          "8": [
            7736,
            7760
          ],
          "9": [
            7817,
            7820
          ],
          "10": [
            7859,
            7899
          ],
          "11": [
            7933,
            7948
          ],
          "12": [
            8053,
            8112
          ],
          "13": [
            8122,
            8154
          ],
          "14": [
            8167,
            8212
          ],
          "15": [
            8223,
            8272
          ]
        }
      },
      "6": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "AltBn128",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "FlashBorrower",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "LSAG"
  ],
  "deployedBytecode": "6080604052600436106101095760003560e01c80639bcb557211610095578063b61d27f611610064578063b61d27f6146102e8578063bf12505b146102fb578063c4d66de81461031b578063d5fce7351461033b578063fc0c546a1461036857600080fd5b80639bcb55721461027c5780639edb6cbd146102925780639f1961e6146102b3578063abd70aa2146102d357600080fd5b806371d8ded9116100dc57806371d8ded9146101db5780637c0ffaa2146101fb5780637f5bf51c1461020f5780638ae0edba1461022f5780639325019d1461024f57600080fd5b80631b9db2ef1461010e5780633b97e8561461014157806362230498146101575780636381d19e14610179575b600080fd5b34801561011a57600080fd5b5061012e610129366004611274565b6103a0565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061012e60015481565b34801561016357600080fd5b5061017761017236600461135c565b6103bc565b005b34801561018557600080fd5b506101c0610194366004611444565b600e60209081526000928352604080842090915290825290208054600182015460049092015490919083565b60408051938452602084019290925290820152606001610138565b3480156101e757600080fd5b506101776101f6366004611466565b6107fd565b34801561020757600080fd5b50600361012e565b34801561021b57600080fd5b5061012e61022a366004611274565b610afc565b34801561023b57600080fd5b5061012e61024a366004611274565b610b1b565b34801561025b57600080fd5b5061012e61026a366004611274565b600d6020526000908152604090205481565b34801561028857600080fd5b5061012e60025481565b34801561029e57600080fd5b5061012e6102ad366004611274565b60301c90565b3480156102bf57600080fd5b5061012e6102ce366004611444565b610b3e565b3480156102df57600080fd5b5061012e610b70565b6101776102f6366004611493565b610be2565b34801561030757600080fd5b506101c0610316366004611274565b610e21565b34801561032757600080fd5b5061017761033636600461151c565b610e5f565b34801561034757600080fd5b5061035b610356366004611444565b610f5b565b6040516101389190611540565b34801561037457600080fd5b50600054610388906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b6000602082901c6103b56001620100006115b0565b1692915050565b6000858152600e6020908152604080832087845290915281206001810154909190819081906103ea90610e21565b919450925090506001600160a01b038a1661043b5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064015b60405180910390fd5b600383106104815760405162461bcd60e51b815260206004820152601360248201527220a6262fa32aa72229afaba4aa24222920aba760691b6044820152606401610432565b60048401546104c45760405162461bcd60e51b815260206004820152600f60248201526e14925391d7d393d517d0d313d4d151608a1b6044820152606401610432565b60408051600380825260808201909252600091816020015b6104e46111a9565b8152602001906001900390816104dc57905050905060005b600381101561056557600081815260028781016020526040918290208251808401938490529290919082845b815481526020019060010190808311610528575050505050828281518110610552576105526115c7565b60209081029190910101526001016104fc565b50600073__$59a6a99b146727e155adc36af30d91d8cc$__63fe46a2b287600401548e6040516020016105b492919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528b8b8b876040518663ffffffff1660e01b81526004016105e795949392919061167b565b602060405180830381865af4158015610604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106289190611711565b90508061066b5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b6044820152606401610432565b60005b858110156106f457885160008281526003890160205260409020541480156106ae57506020808a0151600083815260038a01909252604090912060010154145b156106ec5760405162461bcd60e51b815260206004820152600e60248201526d555345445f5349474e415455524560901b6044820152606401610432565b60010161066e565b5060008581526003870160205260409020610711908960026111c7565b506001948501601081901b851760201b841795870186905560005460405163a9059cbb60e01b81526001600160a01b038f81166004830152602482018f90529297929091169063a9059cbb906044016020604051808303816000875af115801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190611711565b50604080516001600160a01b038f168152602081018e90529081018c90527f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69060600160405180910390a150505050505050505050505050565b600061080883611022565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190611711565b5081516020830151604051630cd3b28960e31b81526004810192909252602482015273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063669d944890604401602060405180830381865af41580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190611711565b6109445760405162461bcd60e51b815260206004820152600f60248201526e504b5f4e4f545f4f4e5f435552564560881b6044820152606401610432565b6000818152600d6020908152604080832054600e835281842081855290925282206001810154919290918190819061097b90610e21565b92509250925060005b82811015610a0e57875160008281526002870160205260409020541480156109c45750602080890151600083815260028801909252604090912060010154145b15610a065760405162461bcd60e51b8152602060048201526012602482015271504b5f414c52454144595f494e5f52494e4760701b6044820152606401610432565b600101610984565b5081600003610a2557610a226001436115b0565b90505b600082815260028086016020526040909120610a429189906111c7565b5085846000016000828254610a579190611733565b90915550506001918201601084901b811760201b82179285018390559160038310610ab057610a8687876110a7565b60048601556000878152600d60205260408120805460019290610aaa908490611733565b90915550505b60408051338152602081018990529081018790527f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca9060600160405180910390a1505050505050505050565b6000610b0782611022565b50506000908152600d602052604090205490565b600061271060025483610b2e919061174b565b610b38919061176a565b92915050565b600080610b4a84611022565b6000908152600e6020908152604080832086845290915290206004015491505092915050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdd919061178c565b905090565b6000610bec610b70565b905083811015610c335760405162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f46554e445360701b6044820152606401610432565b6000610c3e85610b1b565b9050856001600160a01b03167f8852f4cb22828da9ddc44460130398d816e46fd1f370d80d82a4de81fcd5aeee86604051610c7b91815260200190565b60405180910390a260005460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa9190611711565b50604051637924fd7d60e01b81526001600160a01b03871690637924fd7d90610d2d9088908590899089906004016117a5565b600060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b50506000546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb919061178c565b610dd58284611733565b1115610e195760405162461bcd60e51b81526020600482015260136024820152721513d2d15394d7d393d517d491551554939151606a1b6044820152606401610432565b505050505050565b60008080602084901c603085901c610e3d6001620100006115b0565b8216610e4f60016401000000006115b0565b8716935093509350509193909250565b6000546001600160a01b031615610e885760405162dc149f60e41b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0591906117e2565b60ff1660015560005b600a811015610f5757600154610f2590600a6118e9565b610f308260026118e9565b610f3a919061174b565b600382600a8110610f4d57610f4d6115c7565b0155600101610f0e565b5050565b610f63611205565b610f6c83611022565b50610f75611205565b60005b600381101561101a576000858152600e602090815260408083208784528252808320848452600201909152902054828260038110610fb857610fb86115c7565b60209081029190910151919091526000868152600e8252604080822087835283528082208483526002019092522060010154828260038110610ffc57610ffc6115c7565b60200201516001602002015280611012816118f5565b915050610f78565b509392505050565b600080805b600a81101561105d5783600382600a8110611044576110446115c7565b01540361105057600191505b8161105d57600101611027565b50806110a05760405162461bcd60e51b8152602060048201526012602482015271105353d5539517d393d517d0531313d5d15160721b6044820152606401610432565b5090919050565b60006110b1611232565b60006110bc85611022565b6000818152600e6020908152604080832088845290915281209192505b60038160ff1610156111465760ff8116600090815260028381016020526040918290208251808401938490529290919082845b81548152602001906001019080831161110c575050505050848260ff1660038110611139576111396115c7565b60200201526001016110d9565b506000806111578360010154610e21565b9250509150600060014361116b91906115b0565b8454604051611184924091859187908b9060200161190e565b60408051808303601f1901815291905280516020909101209998505050505050505050565b60405180604001604052806002906020820280368337509192915050565b82600281019282156111f5579160200282015b828111156111f55782518255916020019190600101906111da565b5061120192915061125f565b5090565b60405180606001604052806003905b61121c6111a9565b8152602001906001900390816112145790505090565b60405180606001604052806003905b6112496111a9565b8152602001906001900390816112415790505090565b5b808211156112015760008155600101611260565b60006020828403121561128657600080fd5b5035919050565b6001600160a01b03811681146112a257600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112e4576112e46112a5565b604052919050565b600082601f8301126112fd57600080fd5b6040516040810181811067ffffffffffffffff82111715611320576113206112a5565b806040525080604084018581111561133757600080fd5b845b81811015611351578035835260209283019201611339565b509195945050505050565b60008060008060008060e0878903121561137557600080fd5b86356113808161128d565b9550602087810135955060408801359450606088013593506113a58960808a016112ec565b925060c088013567ffffffffffffffff808211156113c257600080fd5b818a0191508a601f8301126113d657600080fd5b8135818111156113e8576113e86112a5565b8060051b91506113f98483016112bb565b818152918301840191848101908d84111561141357600080fd5b938501935b8385101561143157843582529385019390850190611418565b8096505050505050509295509295509295565b6000806040838503121561145757600080fd5b50508035926020909101359150565b6000806060838503121561147957600080fd5b8235915061148a84602085016112ec565b90509250929050565b600080600080606085870312156114a957600080fd5b84356114b48161128d565b935060208501359250604085013567ffffffffffffffff808211156114d857600080fd5b818701915087601f8301126114ec57600080fd5b8135818111156114fb57600080fd5b88602082850101111561150d57600080fd5b95989497505060200194505050565b60006020828403121561152e57600080fd5b81356115398161128d565b9392505050565b60c0810181836000805b600381101561159057825184835b6002811015611577578251825260209283019290910190600101611558565b505050604093909301926020929092019160010161154a565b5050505092915050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115c2576115c261159a565b500390565b634e487b7160e01b600052603260045260246000fd5b8060005b60028110156116005781518452602093840193909101906001016115e1565b50505050565b600081518084526020808501945080840160005b838110156116365781518752958201959082019060010161161a565b509495945050505050565b600081518084526020808501945080840160005b83811015611636576116688783516115dd565b6040969096019590820190600101611655565b60c08152600086518060c084015260005b818110156116a9576020818a0181015160e086840101520161168c565b818111156116bb57600060e083860101525b5060208301879052601f01601f191682016116d960408401876115dd565b60e08382030160808401526116f160e0820186611606565b905082810360a08401526117058185611641565b98975050505050505050565b60006020828403121561172357600080fd5b8151801515811461153957600080fd5b600082198211156117465761174661159a565b500190565b60008160001904831182151516156117655761176561159a565b500290565b60008261178757634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561179e57600080fd5b5051919050565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f909201601f191601019392505050565b6000602082840312156117f457600080fd5b815160ff8116811461153957600080fd5b600181815b808511156118405781600019048211156118265761182661159a565b8085161561183357918102915b93841c939080029061180a565b509250929050565b60008261185757506001610b38565b8161186457506000610b38565b816001811461187a5760028114611884576118a0565b6001915050610b38565b60ff8411156118955761189561159a565b50506001821b610b38565b5060208310610133831016604e8410600b84101617156118c3575081810a610b38565b6118cd8383611805565b80600019048211156118e1576118e161159a565b029392505050565b60006115398383611848565b6000600182016119075761190761159a565b5060010190565b8581526000602086818401526040868185015285606085015260808401856000805b600381101561196e57825184835b600281101561195b5782518252918801919088019060010161193e565b5050509284019291850191600101611930565b50505050505061014082019050969550505050505056fea26469706673582212209805cd7124e09ee7001f46131ebffbc4dbfe7e2e49511e0d5e5fad39d79dc4a864736f6c634300080d0033",
  "deployedSourceMap": "222:13867:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13406:186;;;;;;;;;;-1:-1:-1;13406:186:5;;;;;:::i;:::-;;:::i;:::-;;;345:25:10;;;333:2;318:18;13406:186:5;;;;;;;;3032:28;;;;;;;;;;;;;;;;6244:2035;;;;;;;;;;-1:-1:-1;6244:2035:5;;;;;:::i;:::-;;:::i;:::-;;3293:58;;;;;;;;;;-1:-1:-1;3293:58:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3464:25:10;;;3520:2;3505:18;;3498:34;;;;3548:18;;;3541:34;3452:2;3437:18;3293:58:5;3262:319:10;4037:1834:5;;;;;;;;;;-1:-1:-1;4037:1834:5;;;;;:::i;:::-;;:::i;13666:120::-;;;;;;;;;;-1:-1:-1;1297:1:5;13666:120;;13913:174;;;;;;;;;;-1:-1:-1;13913:174:5;;;;;:::i;:::-;;:::i;10978:107::-;;;;;;;;;;-1:-1:-1;10978:107:5;;;;;:::i;:::-;;:::i;3199:46::-;;;;;;;;;;-1:-1:-1;3199:46:5;;;;;:::i;:::-;;;;;;;;;;;;;;3100:26;;;;;;;;;;;;;;;;13134:159;;;;;;;;;;-1:-1:-1;13134:159:5;;;;;:::i;:::-;13225:61;;;13134:159;9383:229;;;;;;;;;;-1:-1:-1;9383:229:5;;;;;:::i;:::-;;:::i;9679:117::-;;;;;;;;;;;;;:::i;10304:544::-;;;;;;:::i;:::-;;:::i;12685:314::-;;;;;;;;;;-1:-1:-1;12685:314:5;;;;;:::i;:::-;;:::i;3475:381::-;;;;;;;;;;-1:-1:-1;3475:381:5;;;;;:::i;:::-;;:::i;12068:512::-;;;;;;;;;;-1:-1:-1;12068:512:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3006:20::-;;;;;;;;;;-1:-1:-1;3006:20:5;;;;-1:-1:-1;;;;;3006:20:5;;;;;;-1:-1:-1;;;;;6548:32:10;;;6530:51;;6518:2;6503:18;3006:20:5;6384:203:10;13406:186:5;13471:7;1958:2;13501:33;;;2051:32;2082:1;2052:27;2051:32;:::i;:::-;13560:25;;13406:186;-1:-1:-1;;13406:186:5:o;6244:2035::-;6432:17;6452:18;;;:5;:18;;;;;;;;:29;;;;;;;;6575:19;;;;6452:29;;6432:17;;;;;6557:38;;:17;:38::i;:::-;6492:103;;-1:-1:-1;6492:103:5;-1:-1:-1;6492:103:5;-1:-1:-1;;;;;;6610:23:5;;6606:76;;6649:22;;-1:-1:-1;;;6649:22:5;;7056:2:10;6649:22:5;;;7038:21:10;7095:2;7075:18;;;7068:30;-1:-1:-1;;;7114:18:10;;;7107:42;7166:18;;6649:22:5;;;;;;;;6606:76;1297:1;6704:13;:37;6700:97;;6757:29;;-1:-1:-1;;;6757:29:5;;7397:2:10;6757:29:5;;;7379:21:10;7436:2;7416:18;;;7409:30;-1:-1:-1;;;7455:18:10;;;7448:49;7514:18;;6757:29:5;7195:343:10;6700:97:5;6811:13;;;;6807:86;;6857:25;;-1:-1:-1;;;6857:25:5;;7745:2:10;6857:25:5;;;7727:21:10;7784:2;7764:18;;;7757:30;-1:-1:-1;;;7803:18:10;;;7796:45;7858:18;;6857:25:5;7543:339:10;6807:86:5;6936:38;;;1297:1;6936:38;;;;;;;;;6903:30;;6936:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6903:71;;6990:9;6985:165;1297:1;7005;:24;6985:165;;;7062:18;;;;:15;;;;:18;;;;;;;7046:34;;;;;;;;;;7062:18;;:15;:18;7046:34;;;;;;;;;;;;;;;;;;;;;;:10;7057:1;7046:13;;;;;;;;:::i;:::-;;;;;;;;;;:34;7122:3;;6985:165;;;;7206:22;7231:4;:11;7273:4;:13;;;7288:9;7256:42;;;;;;;;8192:19:10;;;8249:2;8245:15;-1:-1:-1;;8241:53:10;8236:2;8227:12;;8220:75;8320:2;8311:12;;8019:310;7256:42:5;;;;;;;;;;;;;7332:2;7348:8;7370:1;7385:10;7231:174;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7206:199;;7421:17;7416:76;;7454:27;;-1:-1:-1;;;7454:27:5;;11319:2:10;7454:27:5;;;11301:21:10;11358:2;11338:18;;;11331:30;-1:-1:-1;;;11377:18:10;;;11370:47;11434:18;;7454:27:5;11117:341:10;7416:76:5;7576:6;7571:274;7592:13;7588:1;:17;7571:274;;;7650:11;;7659:1;7626:17;;;:14;;;7650:11;7626:17;;;;:20;:35;:90;;;;-1:-1:-1;7705:11:5;;;;;7681:17;;;;:14;;;:17;;;;;;;7714:1;7681:20;;:35;7626:90;7622:153;;;7736:24;;-1:-1:-1;;;7736:24:5;;11665:2:10;7736:24:5;;;11647:21:10;11704:2;11684:18;;;11677:30;-1:-1:-1;;;11723:18:10;;;11716:44;11777:18;;7736:24:5;11463:338:10;7622:153:5;7817:3;;7571:274;;;-1:-1:-1;7859:29:5;;;;:14;;;:29;;;;;:40;;7891:8;7859:40;;:::i;:::-;-1:-1:-1;7933:15:5;;;;1868:2;7988:39;;;7987:56;;1958:2;8067:33;8066:46;;8122:19;;;:32;;;7969:15;8173:5;8167:45;;-1:-1:-1;;;8167:45:5;;-1:-1:-1;;;;;12006:32:10;;;8167:45:5;;;11988:51:10;12055:18;;;12048:34;;;7933:15:5;;8066:46;8173:5;;;;8167:21;;11961:18:10;;8167:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8228:44:5;;;-1:-1:-1;;;;;12321:32:10;;12303:51;;12385:2;12370:18;;12363:34;;;12413:18;;;12406:34;;;8228:44:5;;12291:2:10;12276:18;8228:44:5;;;;;;;6422:1857;;;;;;;6244:2035;;;;;;:::o;4037:1834::-;4167:27;4197:20;4209:7;4197:11;:20::i;:::-;4234:5;;4228:61;;-1:-1:-1;;;4228:61:5;;4254:10;4228:61;;;12691:34:10;4274:4:5;12741:18:10;;;12734:43;12793:18;;;12786:34;;;4167:50:5;;-1:-1:-1;;;;;;4234:5:5;;4228:25;;12626:18:10;;4228:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4330:13:5;;;4354;;;4305:64;;-1:-1:-1;;;4305:64:5;;;;;13013:25:10;;;;13054:18;;;13047:34;4305:8:5;;:16;;12986:18:10;;4305:64:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4300:121;;4385:25;;-1:-1:-1;;;4385:25:5;;13294:2:10;4385:25:5;;;13276:21:10;13333:2;13313:18;;;13306:30;-1:-1:-1;;;13352:18:10;;;13345:45;13407:18;;4385:25:5;13092:339:10;4300:121:5;4481:17;4501:32;;;:11;:32;;;;;;;;;4563:5;:26;;;;;:37;;;;;;;;4694:19;;;;4501:32;;4563:37;;4481:17;;;;4676:38;;:17;:38::i;:::-;4611:103;;;;;;4789:9;4784:286;4808:12;4804:1;:16;4784:286;;;4866:13;;4877:1;4841:18;;;:15;;;4866:13;4841:18;;;;:21;:38;:96;;;;-1:-1:-1;4924:13:5;;;;;4899:18;;;;:15;;;:18;;;;;;;4935:1;4899:21;;:38;4841:96;4837:163;;;4957:28;;-1:-1:-1;;;4957:28:5;;13638:2:10;4957:28:5;;;13620:21:10;13677:2;13657:18;;;13650:30;-1:-1:-1;;;13696:18:10;;;13689:48;13754:18;;4957:28:5;13436:342:10;4837:163:5;5042:3;;4784:286;;;;5084:12;5100:1;5084:17;5080:75;;5128:16;5143:1;5128:12;:16;:::i;:::-;5117:27;;5080:75;5165:29;;;;:15;;;;:29;;;;;;:42;;5197:10;;5165:42;:::i;:::-;;5241:19;5217:4;:20;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;5294:14:5;;;;1868:2;5348:39;;;5347:56;;1958:2;5427:33;5426:46;;5482:19;;;:32;;;5294:14;1297:1;5579:36;;5575:221;;5647:40;5656:19;5677:9;5647:8;:40::i;:::-;5631:13;;;:56;5748:32;;;;:11;:32;;;;;:37;;5784:1;;5748:32;:37;;5784:1;;5748:37;:::i;:::-;;;;-1:-1:-1;;5575:221:5;5811:53;;;5821:10;12303:51:10;;12385:2;12370:18;;12363:34;;;12413:18;;;12406:34;;;5811:53:5;;12291:2:10;12276:18;5811:53:5;;;;;;;4105:1766;;;;;;;4037:1834;;:::o;13913:174::-;13992:7;14015:24;14027:11;14015;:24::i;:::-;-1:-1:-1;;14056:24:5;;;;:11;:24;;;;;;;13913:174::o;10978:107::-;11028:4;11073:5;11062:7;;11052;:17;;;;:::i;:::-;11051:27;;;;:::i;:::-;11044:34;10978:107;-1:-1:-1;;10978:107:5:o;9383:229::-;9475:7;9498:21;9522:25;9534:12;9522:11;:25::i;:::-;9564:20;;;;:5;:20;;;;;;;;:32;;;;;;;;:41;;;;-1:-1:-1;;9383:229:5;;;;:::o;9679:117::-;9726:7;9758:5;;9752:37;;-1:-1:-1;;;9752:37:5;;9783:4;9752:37;;;6530:51:10;-1:-1:-1;;;;;9758:5:5;;;;9752:22;;6503:18:10;;9752:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9745:44;;9679:117;:::o;10304:544::-;10416:19;10438:16;:14;:16::i;:::-;10416:38;;10482:6;10468:11;:20;10465:78;;;10504:28;;-1:-1:-1;;;10504:28:5;;15052:2:10;10504:28:5;;;15034:21:10;15091:2;15071:18;;;15064:30;-1:-1:-1;;;15110:18:10;;;15103:48;15168:18;;10504:28:5;14850:342:10;10465:78:5;10553:11;10567:18;10578:6;10567:10;:18::i;:::-;10553:32;;10611:8;-1:-1:-1;;;;;10601:27:5;;10621:6;10601:27;;;;345:25:10;;333:2;318:18;;199:177;10601:27:5;;;;;;;;10639:5;;10633:48;;-1:-1:-1;;;10633:48:5;;-1:-1:-1;;;;;12006:32:10;;;10633:48:5;;;11988:51:10;12055:18;;;12048:34;;;10639:5:5;;;;10633:21;;11961:18:10;;10633:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10685:39:5;;-1:-1:-1;;;10685:39:5;;-1:-1:-1;;;;;10685:20:5;;;;;:39;;10706:6;;10714:3;;10719:4;;;;10685:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10759:5:5;;10753:37;;-1:-1:-1;;;10753:37:5;;10784:4;10753:37;;;6530:51:10;-1:-1:-1;;;;;10759:5:5;;;;-1:-1:-1;10753:22:5;;-1:-1:-1;6503:18:10;;10753:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10733:17;10747:3;10733:11;:17;:::i;:::-;:57;10729:116;;;10805:29;;-1:-1:-1;;;10805:29:5;;16216:2:10;10805:29:5;;;16198:21:10;16255:2;16235:18;;;16228:30;-1:-1:-1;;;16274:18:10;;;16267:49;16333:18;;10805:29:5;16014:343:10;10729:116:5;10406:442;;10304:544;;;;:::o;12685:314::-;12750:7;;;1958:2;12798:33;;;12871:27;;;;2051:32;2082:1;2052:27;2051:32;:::i;:::-;12912:25;;2162:29;2190:1;2163:24;2162:29;:::i;:::-;12951:10;:31;12850:142;;;;;;;12685:314;;;;;:::o;3475:381::-;3549:1;3532:5;-1:-1:-1;;;;;3532:5:5;:19;3528:52;;3560:20;;-1:-1:-1;;;3560:20:5;;;;;;;;;;;3528:52;3590:5;:14;;-1:-1:-1;;;;;;3590:14:5;-1:-1:-1;;;;;3590:14:5;;;;;;;;3630:24;;;-1:-1:-1;;;3630:24:5;;;;:22;;:24;;;;;;;;;;;;;;;3590:14;3630:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3614:40;;:13;:40;3669:9;3665:185;3688:21;3684:1;:25;3665:185;;;3765:13;;3759:19;;:2;:19;:::i;:::-;3748:6;3753:1;3748;:6;:::i;:::-;3747:32;;;;:::i;:::-;3727:14;3742:1;3727:17;;;;;;;:::i;:::-;;:52;3822:3;;3665:185;;;;3475:381;:::o;12068:512::-;12160:39;;:::i;:::-;12215:24;12227:11;12215;:24::i;:::-;;12250:50;;:::i;:::-;12316:6;12311:235;1297:1;12328;:24;12311:235;;;12400:18;;;;:5;:18;;;;;;;;:29;;;;;;;;:43;;;:40;;:43;;;;;:46;12373:10;12400:43;12373:13;;;;;;;:::i;:::-;;;;;;;;;;:74;;;;12387:1;12488:18;;;:5;:18;;;;;;:29;;;;;;;;:43;;;:40;;:43;;;;12532:1;12488:46;;12461:10;12488:43;12461:13;;;;;;;:::i;:::-;;;;;12475:1;12461:16;;;:74;12354:3;;;;:::i;:::-;;;;12311:235;;;-1:-1:-1;12563:10:5;12068:512;-1:-1:-1;;;12068:512:5:o;11378:527::-;11447:7;;;11501:258;11525:2;11521:1;:6;11501:258;;;11569:7;11548:14;11563:1;11548:17;;;;;;;:::i;:::-;;;:28;11544:81;;11606:4;11596:14;;11544:81;11642:7;11669:5;11638:51;11731:3;;11501:258;;;;11844:7;11836:38;;;;-1:-1:-1;;;11836:38:5;;18356:2:10;11836:38:5;;;18338:21:10;18395:2;18375:18;;;18368:30;-1:-1:-1;;;18414:18:10;;;18407:48;18472:18;;11836:38:5;18154:342:10;11836:38:5;-1:-1:-1;11891:7:5;;11378:527;-1:-1:-1;11378:527:5:o;8440:785::-;8531:7;8554:50;;:::i;:::-;8614:21;8638:25;8650:12;8638:11;:25::i;:::-;8674:17;8694:20;;;:5;:20;;;;;;;;:32;;;;;;;;8614:49;;-1:-1:-1;8737:164:5;1297:1;8755;:24;;;8737:164;;;8812:18;;;;;;;:15;;;;:18;;;;;;;8796:34;;;;;;;;;;8812:18;;:15;:18;8796:34;;;;;;;;;;;;;;;;;;;;;;:10;8807:1;8796:13;;;;;;;;;:::i;:::-;;;;:34;8873:3;;8737:164;;;;8912:17;8932:13;8949:38;8967:4;:19;;;8949:17;:38::i;:::-;8911:76;;;;;8998:14;9070:1;9055:12;:16;;;;:::i;:::-;9108:20;;9015:173;;;;9045:27;;9086:8;;9142:12;;9168:10;;9015:173;;;:::i;:::-;;;;;;;-1:-1:-1;;9015:173:5;;;;;;9206:12;;9015:173;9206:12;;;;;8440:785;-1:-1:-1;;;;;;;;;8440:785:5:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:180:10;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:10;;14:180;-1:-1:-1;14:180:10:o;381:139::-;-1:-1:-1;;;;;464:31:10;;454:42;;444:70;;510:1;507;500:12;444:70;381:139;:::o;525:127::-;586:10;581:3;577:20;574:1;567:31;617:4;614:1;607:15;641:4;638:1;631:15;657:275;728:2;722:9;793:2;774:13;;-1:-1:-1;;770:27:10;758:40;;828:18;813:34;;849:22;;;810:62;807:88;;;875:18;;:::i;:::-;911:2;904:22;657:275;;-1:-1:-1;657:275:10:o;937:646::-;987:5;1040:3;1033:4;1025:6;1021:17;1017:27;1007:55;;1058:1;1055;1048:12;1007:55;1091:2;1085:9;1133:2;1125:6;1121:15;1202:6;1190:10;1187:22;1166:18;1154:10;1151:34;1148:62;1145:88;;;1213:18;;:::i;:::-;1253:10;1249:2;1242:22;;1284:6;1325:2;1317:6;1313:15;1351:3;1343:6;1340:15;1337:35;;;1368:1;1365;1358:12;1337:35;1392:6;1407:146;1423:6;1418:3;1415:15;1407:146;;;1491:17;;1479:30;;1538:4;1529:14;;;;1440;1407:146;;;-1:-1:-1;1571:6:10;;937:646;-1:-1:-1;;;;;937:646:10:o;1588:1416::-;1748:6;1756;1764;1772;1780;1788;1841:3;1829:9;1820:7;1816:23;1812:33;1809:53;;;1858:1;1855;1848:12;1809:53;1897:9;1884:23;1916:39;1949:5;1916:39;:::i;:::-;1974:5;-1:-1:-1;1998:2:10;2032:18;;;2019:32;;-1:-1:-1;2098:2:10;2083:18;;2070:32;;-1:-1:-1;2149:2:10;2134:18;;2121:32;;-1:-1:-1;2172:54:10;2218:7;2212:3;2197:19;;2172:54;:::i;:::-;2162:64;;2277:3;2266:9;2262:19;2249:33;2301:18;2342:2;2334:6;2331:14;2328:34;;;2358:1;2355;2348:12;2328:34;2396:6;2385:9;2381:22;2371:32;;2441:7;2434:4;2430:2;2426:13;2422:27;2412:55;;2463:1;2460;2453:12;2412:55;2499:2;2486:16;2521:2;2517;2514:10;2511:36;;;2527:18;;:::i;:::-;2573:2;2570:1;2566:10;2556:20;;2596:28;2620:2;2616;2612:11;2596:28;:::i;:::-;2658:15;;;2728:11;;;2724:20;;;2689:12;;;;2756:19;;;2753:39;;;2788:1;2785;2778:12;2753:39;2812:11;;;;2832:142;2848:6;2843:3;2840:15;2832:142;;;2914:17;;2902:30;;2865:12;;;;2952;;;;2832:142;;;2993:5;2983:15;;;;;;;;1588:1416;;;;;;;;:::o;3009:248::-;3077:6;3085;3138:2;3126:9;3117:7;3113:23;3109:32;3106:52;;;3154:1;3151;3144:12;3106:52;-1:-1:-1;;3177:23:10;;;3247:2;3232:18;;;3219:32;;-1:-1:-1;3009:248:10:o;3586:292::-;3677:6;3685;3738:2;3726:9;3717:7;3713:23;3709:32;3706:52;;;3754:1;3751;3744:12;3706:52;3790:9;3777:23;3767:33;;3819:53;3864:7;3859:2;3848:9;3844:18;3819:53;:::i;:::-;3809:63;;3586:292;;;;;:::o;4065:824::-;4175:6;4183;4191;4199;4252:2;4240:9;4231:7;4227:23;4223:32;4220:52;;;4268:1;4265;4258:12;4220:52;4307:9;4294:23;4326:39;4359:5;4326:39;:::i;:::-;4384:5;-1:-1:-1;4436:2:10;4421:18;;4408:32;;-1:-1:-1;4491:2:10;4476:18;;4463:32;4514:18;4544:14;;;4541:34;;;4571:1;4568;4561:12;4541:34;4609:6;4598:9;4594:22;4584:32;;4654:7;4647:4;4643:2;4639:13;4635:27;4625:55;;4676:1;4673;4666:12;4625:55;4716:2;4703:16;4742:2;4734:6;4731:14;4728:34;;;4758:1;4755;4748:12;4728:34;4803:7;4798:2;4789:6;4785:2;4781:15;4777:24;4774:37;4771:57;;;4824:1;4821;4814:12;4771:57;4065:824;;;;-1:-1:-1;;4855:2:10;4847:11;;-1:-1:-1;;;4065:824:10:o;5218:255::-;5277:6;5330:2;5318:9;5309:7;5305:23;5301:32;5298:52;;;5346:1;5343;5336:12;5298:52;5385:9;5372:23;5404:39;5437:5;5404:39;:::i;:::-;5462:5;5218:255;-1:-1:-1;;;5218:255:10:o;5478:901::-;5704:3;5689:19;;5693:9;5785:6;5662:4;;5840:533;5856:4;5851:3;5848:13;5840:533;;;5917:13;;5956:3;6039:1;6053:236;6069:4;6064:3;6061:13;6053:236;;;6142:15;;6128:30;;6185:4;6258:17;;;;6215:14;;;;6093:1;6084:11;6053:236;;;-1:-1:-1;;;6318:4:10;6309:14;;;;;6358:4;6346:17;;;;;5880:1;5871:11;5840:533;;;5844:3;;;;5478:901;;;;:::o;6592:127::-;6653:10;6648:3;6644:20;6641:1;6634:31;6684:4;6681:1;6674:15;6708:4;6705:1;6698:15;6724:125;6764:4;6792:1;6789;6786:8;6783:34;;;6797:18;;:::i;:::-;-1:-1:-1;6834:9:10;;6724:125::o;7887:127::-;7948:10;7943:3;7939:20;7936:1;7929:31;7979:4;7976:1;7969:15;8003:4;8000:1;7993:15;8334:326;8427:5;8450:1;8460:194;8474:4;8471:1;8468:11;8460:194;;;8533:13;;8521:26;;8570:4;8594:12;;;;8629:15;;;;8494:1;8487:9;8460:194;;;8464:3;;8334:326;;:::o;8665:435::-;8718:3;8756:5;8750:12;8783:6;8778:3;8771:19;8809:4;8838:2;8833:3;8829:12;8822:19;;8875:2;8868:5;8864:14;8896:1;8906:169;8920:6;8917:1;8914:13;8906:169;;;8981:13;;8969:26;;9015:12;;;;9050:15;;;;8942:1;8935:9;8906:169;;;-1:-1:-1;9091:3:10;;8665:435;-1:-1:-1;;;;;8665:435:10:o;9105:461::-;9164:3;9202:5;9196:12;9229:6;9224:3;9217:19;9255:4;9284:2;9279:3;9275:12;9268:19;;9321:2;9314:5;9310:14;9342:1;9352:189;9366:6;9363:1;9360:13;9352:189;;;9415:44;9455:3;9446:6;9440:13;9415:44;:::i;:::-;9488:4;9479:14;;;;;9516:15;;;;9388:1;9381:9;9352:189;;9571:1259;10030:3;10019:9;10012:22;9993:4;10063:6;10057:13;10107:6;10101:3;10090:9;10086:19;10079:35;10132:1;10142:145;10156:6;10153:1;10150:13;10142:145;;;10270:4;10254:14;;;10250:25;;10244:32;10238:3;10219:17;;;10215:27;10208:69;10171:12;10142:145;;;10305:6;10302:1;10299:13;10296:92;;;10376:1;10370:3;10361:6;10350:9;10346:22;10342:32;10335:43;10296:92;-1:-1:-1;10483:4:10;10468:20;;10461:36;;;10447:2;10426:15;-1:-1:-1;;10422:29:10;10407:45;;10506:52;10554:2;10539:18;;10531:6;10506:52;:::i;:::-;10619:3;10607:9;10603:2;10599:18;10595:28;10589:3;10578:9;10574:19;10567:57;10647:50;10692:3;10688:2;10684:12;10676:6;10647:50;:::i;:::-;10633:64;;10746:9;10738:6;10734:22;10728:3;10717:9;10713:19;10706:51;10774:50;10817:6;10809;10774:50;:::i;:::-;10766:58;9571:1259;-1:-1:-1;;;;;;;;9571:1259:10:o;10835:277::-;10902:6;10955:2;10943:9;10934:7;10930:23;10926:32;10923:52;;;10971:1;10968;10961:12;10923:52;11003:9;10997:16;11056:5;11049:13;11042:21;11035:5;11032:32;11022:60;;11078:1;11075;11068:12;13783:128;13823:3;13854:1;13850:6;13847:1;13844:13;13841:39;;;13860:18;;:::i;:::-;-1:-1:-1;13896:9:10;;13783:128::o;14266:168::-;14306:7;14372:1;14368;14364:6;14360:14;14357:1;14354:21;14349:1;14342:9;14335:17;14331:45;14328:71;;;14379:18;;:::i;:::-;-1:-1:-1;14419:9:10;;14266:168::o;14439:217::-;14479:1;14505;14495:132;;14549:10;14544:3;14540:20;14537:1;14530:31;14584:4;14581:1;14574:15;14612:4;14609:1;14602:15;14495:132;-1:-1:-1;14641:9:10;;14439:217::o;14661:184::-;14731:6;14784:2;14772:9;14763:7;14759:23;14755:32;14752:52;;;14800:1;14797;14790:12;14752:52;-1:-1:-1;14823:16:10;;14661:184;-1:-1:-1;14661:184:10:o;15476:533::-;15689:6;15678:9;15671:25;15732:6;15727:2;15716:9;15712:18;15705:34;15775:2;15770;15759:9;15755:18;15748:30;15814:6;15809:2;15798:9;15794:18;15787:34;15872:6;15864;15858:3;15847:9;15843:19;15830:49;15929:1;15899:22;;;15923:3;15895:32;;;15888:43;;;;15992:2;15971:15;;;-1:-1:-1;;15967:29:10;15952:45;15948:55;;15476:533;-1:-1:-1;;;15476:533:10:o;16362:273::-;16430:6;16483:2;16471:9;16462:7;16458:23;16454:32;16451:52;;;16499:1;16496;16489:12;16451:52;16531:9;16525:16;16581:4;16574:5;16570:16;16563:5;16560:27;16550:55;;16601:1;16598;16591:12;16640:422;16729:1;16772:5;16729:1;16786:270;16807:7;16797:8;16794:21;16786:270;;;16866:4;16862:1;16858:6;16854:17;16848:4;16845:27;16842:53;;;16875:18;;:::i;:::-;16925:7;16915:8;16911:22;16908:55;;;16945:16;;;;16908:55;17024:22;;;;16984:15;;;;16786:270;;;16790:3;16640:422;;;;;:::o;17067:806::-;17116:5;17146:8;17136:80;;-1:-1:-1;17187:1:10;17201:5;;17136:80;17235:4;17225:76;;-1:-1:-1;17272:1:10;17286:5;;17225:76;17317:4;17335:1;17330:59;;;;17403:1;17398:130;;;;17310:218;;17330:59;17360:1;17351:10;;17374:5;;;17398:130;17435:3;17425:8;17422:17;17419:43;;;17442:18;;:::i;:::-;-1:-1:-1;;17498:1:10;17484:16;;17513:5;;17310:218;;17612:2;17602:8;17599:16;17593:3;17587:4;17584:13;17580:36;17574:2;17564:8;17561:16;17556:2;17550:4;17547:12;17543:35;17540:77;17537:159;;;-1:-1:-1;17649:19:10;;;17681:5;;17537:159;17728:34;17753:8;17747:4;17728:34;:::i;:::-;17798:6;17794:1;17790:6;17786:19;17777:7;17774:32;17771:58;;;17809:18;;:::i;:::-;17847:20;;17067:806;-1:-1:-1;;;17067:806:10:o;17878:131::-;17938:5;17967:36;17994:8;17988:4;17967:36;:::i;18014:135::-;18053:3;18074:17;;;18071:43;;18094:18;;:::i;:::-;-1:-1:-1;18141:1:10;18130:13;;18014:135::o;18501:1182::-;18846:6;18841:3;18834:19;18816:3;18872:2;18904:6;18899:2;18894:3;18890:12;18883:28;18930:2;18962:6;18957:2;18952:3;18948:12;18941:28;18999:6;18994:2;18989:3;18985:12;18978:28;19037:3;19032;19028:13;19087:6;19111:1;19132;19142:506;19158:4;19153:3;19150:13;19142:506;;;19219:13;;19258:5;19345:1;19359:205;19375:4;19370:3;19367:13;19359:205;;;19448:15;;19434:30;;19533:17;;;;19490:14;;;;19399:1;19390:11;19359:205;;;-1:-1:-1;;;19586:14:10;;;;19623:15;;;;19182:1;19173:11;19142:506;;;19146:3;;;;;;19673;19668;19664:13;19657:20;;18501:1182;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256[2])": {
        "notice": "Deposit `amount` of `token` into the vault",
        "params": {
          "_amount": "The amount of `token` to deposit",
          "_publicKey": "The public key of the participant"
        }
      },
      "execute(address,uint256,bytes)": {
        "details": "Make sure your contract implements the FlashBorrower interface!",
        "notice": "Request a flash loan",
        "params": {
          "amount": "The amount of tokens you want to borrow",
          "data": "Data to forward to the receiver contract along with your flash loan",
          "receiver": "The contract that will receive the flash loan"
        }
      },
      "getCurrentRingIndex(uint256)": {
        "notice": "Gets the lates ring index for `amountToken`",
        "params": {
          "amountToken": "The amount of `token` in the ring"
        }
      },
      "getLoanFee(uint256)": {
        "notice": "Gets the pool percentage from the flash loan",
        "params": {
          "_amount": "The amount of tokens you want to borrow"
        }
      },
      "getParticipant(uint256)": {
        "notice": "Gets the number of participants in the ring",
        "params": {
          "packedData": "The packed ring data"
        }
      },
      "getPoolBalance()": {
        "notice": "Gets the total amount of `token` in the ring"
      },
      "getPublicKeys(uint256,uint256)": {
        "notice": "Gets the public keys of the ring",
        "params": {
          "amountToken": "The amount of `token` in the ring",
          "ringIndex": "The index of the ring"
        }
      },
      "getRingHash(uint256,uint256)": {
        "notice": "Gets the hash of the ring",
        "params": {
          "_amountToken": "The amount of `token` in the ring",
          "_ringIndex": "The index of the ring"
        }
      },
      "getRingMaxParticipants()": {
        "notice": "Gets the maximum number of participants in any ring"
      },
      "getRingPackedData(uint256)": {
        "notice": "Gets the unpacked, packed ring data",
        "params": {
          "packedData": "The packed ring data"
        }
      },
      "getWParticipant(uint256)": {
        "notice": "Gets the number of participants that have withdrawn from the ring",
        "params": {
          "packedData": "The packed ring data"
        }
      },
      "initialize(address)": {
        "notice": "Initialize the vault to use and accept `token`",
        "params": {
          "_token": "The address of the token to use"
        }
      },
      "loanFee()": {
        "notice": "0.09% fee for flashloans"
      },
      "rings(uint256,uint256)": {
        "notice": "tokenAmount => ringIndex => Ring"
      },
      "ringsNumber(uint256)": {
        "notice": "tokenAmount => ringIndex"
      },
      "withdraw(address,uint256,uint256,uint256,uint256[2],uint256[])": {
        "notice": "Withdraw `amount` of `token` from the vault",
        "params": {
          "amountToken": "The amount of `token` to withdraw",
          "c0": "signature",
          "keyImage": "The key image of the participant",
          "recipient": "The address to send the withdrawn tokens to",
          "ringIndex": "The index of the ring to withdraw from",
          "s": "signature"
        }
      }
    },
    "version": 1
  },
  "offset": [
    222,
    14089
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BCB5572 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB61D27F6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xBF12505B EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xD5FCE735 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BCB5572 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x9EDB6CBD EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x9F1961E6 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xABD70AA2 EQ PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71D8DED9 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x71D8DED9 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x7C0FFAA2 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x7F5BF51C EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x8AE0EDBA EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x9325019D EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B9DB2EF EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x3B97E856 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x62230498 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6381D19E EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x135C JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 PUSH2 0x12E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x30 SHR SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0xB3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x388 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x3B5 PUSH1 0x1 PUSH3 0x10000 PUSH2 0x15B0 JUMP JUMPDEST AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x3EA SWAP1 PUSH2 0xE21 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP4 LT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x20A6262FA32AA72229AFABA4AA24222920ABA7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14925391D7D393D517D0D313D4D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4E4 PUSH2 0x11A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4DC JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x528 JUMPI POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x552 JUMPI PUSH2 0x552 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4FC JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xFE46A2B2 DUP8 PUSH1 0x4 ADD SLOAD DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B4 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP12 DUP12 DUP12 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x604 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x494E56414C49445F5349474E4154555245 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x6F4 JUMPI DUP9 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x6AE JUMPI POP PUSH1 0x20 DUP1 DUP11 ADD MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 DUP11 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x555345445F5349474E4154555245 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x66E JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x711 SWAP1 DUP10 PUSH1 0x2 PUSH2 0x11C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 DUP6 ADD PUSH1 0x10 DUP2 SWAP1 SHL DUP6 OR PUSH1 0x20 SHL DUP5 OR SWAP6 DUP8 ADD DUP7 SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP16 SWAP1 MSTORE SWAP3 SWAP8 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP15 SWAP1 MSTORE SWAP1 DUP2 ADD DUP13 SWAP1 MSTORE PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP4 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xCD3B289 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x669D9448 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x8E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x504B5F4E4F545F4F4E5F4355525645 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x97B SWAP1 PUSH2 0xE21 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA0E JUMPI DUP8 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x9C4 JUMPI POP PUSH1 0x20 DUP1 DUP10 ADD MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 DUP9 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x504B5F414C52454144595F494E5F52494E47 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x984 JUMP JUMPDEST POP DUP2 PUSH1 0x0 SUB PUSH2 0xA25 JUMPI PUSH2 0xA22 PUSH1 0x1 NUMBER PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0xA42 SWAP2 DUP10 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST POP DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x10 DUP5 SWAP1 SHL DUP2 OR PUSH1 0x20 SHL DUP3 OR SWAP3 DUP6 ADD DUP4 SWAP1 SSTORE SWAP2 PUSH1 0x3 DUP4 LT PUSH2 0xAB0 JUMPI PUSH2 0xA86 DUP8 DUP8 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xAAA SWAP1 DUP5 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB07 DUP3 PUSH2 0x1022 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP4 PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB4A DUP5 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEC PUSH2 0xB70 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x494E53554646494349454E545F46554E4453 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3E DUP6 PUSH2 0xB1B JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8852F4CB22828DA9DDC44460130398D816E46FD1F370D80D82A4DE81FCD5AEEE DUP7 PUSH1 0x40 MLOAD PUSH2 0xC7B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x7924FD7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x7924FD7D SWAP1 PUSH2 0xD2D SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x70A08231 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0xDD5 DUP3 DUP5 PUSH2 0x1733 JUMP JUMPDEST GT ISZERO PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1513D2D15394D7D393D517D491551554939151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x20 DUP5 SWAP1 SHR PUSH1 0x30 DUP6 SWAP1 SHR PUSH2 0xE3D PUSH1 0x1 PUSH3 0x10000 PUSH2 0x15B0 JUMP JUMPDEST DUP3 AND PUSH2 0xE4F PUSH1 0x1 PUSH5 0x100000000 PUSH2 0x15B0 JUMP JUMPDEST DUP8 AND SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH3 0xDC149F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x1 SLOAD PUSH2 0xF25 SWAP1 PUSH1 0xA PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xF30 DUP3 PUSH1 0x2 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0xA DUP2 LT PUSH2 0xF4D JUMPI PUSH2 0xF4D PUSH2 0x15C7 JUMP JUMPDEST ADD SSTORE PUSH1 0x1 ADD PUSH2 0xF0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF63 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0xF6C DUP4 PUSH2 0x1022 JUMP JUMPDEST POP PUSH2 0xF75 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x101A JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xFB8 JUMPI PUSH2 0xFB8 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x2 ADD SWAP1 SWAP3 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xFFC JUMPI PUSH2 0xFFC PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x20 MUL ADD MSTORE DUP1 PUSH2 0x1012 DUP2 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF78 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x105D JUMPI DUP4 PUSH1 0x3 DUP3 PUSH1 0xA DUP2 LT PUSH2 0x1044 JUMPI PUSH2 0x1044 PUSH2 0x15C7 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x1050 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP2 PUSH2 0x105D JUMPI PUSH1 0x1 ADD PUSH2 0x1027 JUMP JUMPDEST POP DUP1 PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105353D5539517D393D517D0531313D5D151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x432 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BC DUP6 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1146 JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x110C JUMPI POP POP POP POP POP DUP5 DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x1139 JUMPI PUSH2 0x1139 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 ADD PUSH2 0x10D9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x1157 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xE21 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x116B SWAP2 SWAP1 PUSH2 0x15B0 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1184 SWAP3 BLOCKHASH SWAP2 DUP6 SWAP2 DUP8 SWAP1 DUP12 SWAP1 PUSH1 0x20 ADD PUSH2 0x190E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x11F5 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11F5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11DA JUMP JUMPDEST POP PUSH2 0x1201 SWAP3 SWAP2 POP PUSH2 0x125F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0x121C PUSH2 0x11A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1214 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0x1249 PUSH2 0x11A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1241 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12E4 JUMPI PUSH2 0x12E4 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1320 JUMPI PUSH2 0x1320 PUSH2 0x12A5 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1351 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1339 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1380 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x13A5 DUP10 PUSH1 0x80 DUP11 ADD PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E8 PUSH2 0x12A5 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x13F9 DUP5 DUP4 ADD PUSH2 0x12BB JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP14 DUP5 GT ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1431 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1418 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x148A DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x12EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x14B4 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x150D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1539 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD DUP2 DUP4 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1590 JUMPI DUP3 MLOAD DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1577 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1558 JUMP JUMPDEST POP POP POP PUSH1 0x40 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x154A JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15C2 JUMPI PUSH2 0x15C2 PUSH2 0x159A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1600 JUMPI DUP2 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x15E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1636 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x161A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1636 JUMPI PUSH2 0x1668 DUP8 DUP4 MLOAD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1655 JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 DUP7 MLOAD DUP1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x20 DUP2 DUP11 ADD DUP2 ADD MLOAD PUSH1 0xE0 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x168C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 PUSH1 0xE0 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x20 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x16D9 PUSH1 0x40 DUP5 ADD DUP8 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x16F1 PUSH1 0xE0 DUP3 ADD DUP7 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1705 DUP2 DUP6 PUSH2 0x1641 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1746 JUMPI PUSH2 0x1746 PUSH2 0x159A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1765 PUSH2 0x159A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1787 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1840 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1826 JUMPI PUSH2 0x1826 PUSH2 0x159A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1833 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x180A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1857 JUMPI POP PUSH1 0x1 PUSH2 0xB38 JUMP JUMPDEST DUP2 PUSH2 0x1864 JUMPI POP PUSH1 0x0 PUSH2 0xB38 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x187A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1884 JUMPI PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB38 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1895 PUSH2 0x159A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xB38 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x18C3 JUMPI POP DUP2 DUP2 EXP PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x18CD DUP4 DUP4 PUSH2 0x1805 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x18E1 JUMPI PUSH2 0x18E1 PUSH2 0x159A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 DUP4 DUP4 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1907 JUMPI PUSH2 0x1907 PUSH2 0x159A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP7 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP7 DUP2 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP6 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x196E JUMPI DUP3 MLOAD DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x195B JUMPI DUP3 MLOAD DUP3 MSTORE SWAP2 DUP9 ADD SWAP2 SWAP1 DUP9 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x193E JUMP JUMPDEST POP POP POP SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1930 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x140 DUP3 ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SDIV 0xCD PUSH18 0x24E09EE7001F46131EBFFBC4DBFE7E2E4951 0x1E 0xD 0x5E 0x5F 0xAD CODECOPY 0xD7 SWAP14 0xC4 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109"
    },
    "12": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9BCB5572"
    },
    "25": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x95"
    },
    "29": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB61D27F6"
    },
    "36": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB61D27F6"
    },
    "47": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E8"
    },
    "51": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBF12505B"
    },
    "58": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FB"
    },
    "62": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC4D66DE8"
    },
    "69": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B"
    },
    "73": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD5FCE735"
    },
    "80": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33B"
    },
    "84": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFC0C546A"
    },
    "91": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x368"
    },
    "95": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "REVERT",
      "path": "5"
    },
    "100": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9BCB5572"
    },
    "107": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "108": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27C"
    },
    "111": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9EDB6CBD"
    },
    "118": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x292"
    },
    "122": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9F1961E6"
    },
    "129": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B3"
    },
    "133": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xABD70AA2"
    },
    "140": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D3"
    },
    "144": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "REVERT",
      "path": "5"
    },
    "149": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "150": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "151": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x71D8DED9"
    },
    "156": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "GT",
      "path": "5"
    },
    "157": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC"
    },
    "160": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "161": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x71D8DED9"
    },
    "167": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DB"
    },
    "171": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7C0FFAA2"
    },
    "178": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FB"
    },
    "182": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7F5BF51C"
    },
    "189": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F"
    },
    "193": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8AE0EDBA"
    },
    "200": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22F"
    },
    "204": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9325019D"
    },
    "211": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24F"
    },
    "215": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "REVERT",
      "path": "5"
    },
    "220": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "221": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "222": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1B9DB2EF"
    },
    "227": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "228": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E"
    },
    "231": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "232": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3B97E856"
    },
    "238": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x141"
    },
    "242": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x62230498"
    },
    "249": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x157"
    },
    "253": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6381D19E"
    },
    "260": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x179"
    },
    "264": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "268": {
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "269": {
      "first_revert": true,
      "fn": null,
      "offset": [
        222,
        14089
      ],
      "op": "REVERT",
      "path": "5"
    },
    "270": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "271": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "272": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "DUP1",
      "path": "5"
    },
    "273": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "274": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A"
    },
    "277": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "278": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "280": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "DUP1",
      "path": "5"
    },
    "281": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "REVERT",
      "path": "5"
    },
    "282": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "287": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129"
    },
    "290": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "291": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "293": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1274"
    },
    "296": {
      "fn": "HettiPool.getParticipant",
      "jump": "i",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMP",
      "path": "5"
    },
    "297": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "298": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A0"
    },
    "301": {
      "fn": "HettiPool.getParticipant",
      "jump": "i",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMP",
      "path": "5"
    },
    "302": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "303": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "305": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "313": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "315": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "316": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "DUP1",
      "path": "5"
    },
    "317": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "318": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "SUB",
      "path": "5"
    },
    "319": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "320": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "RETURN",
      "path": "5"
    },
    "321": {
      "offset": [
        3032,
        3060
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "322": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "323": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "DUP1",
      "path": "5"
    },
    "324": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "325": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14D"
    },
    "328": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "329": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "331": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "DUP1",
      "path": "5"
    },
    "332": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "REVERT",
      "path": "5"
    },
    "333": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "334": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "POP",
      "path": "5"
    },
    "335": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "338": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "340": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "341": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "DUP2",
      "path": "5"
    },
    "342": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        3032,
        3060
      ],
      "op": "JUMP",
      "path": "5"
    },
    "343": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "344": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "345": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "DUP1",
      "path": "5"
    },
    "346": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "347": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x163"
    },
    "350": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "351": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "353": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "DUP1",
      "path": "5"
    },
    "354": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "REVERT",
      "path": "5"
    },
    "355": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "356": {
      "op": "POP"
    },
    "357": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x177"
    },
    "360": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x172"
    },
    "363": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "364": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "366": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x135C"
    },
    "369": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMP",
      "path": "5"
    },
    "370": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "371": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BC"
    },
    "374": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMP",
      "path": "5"
    },
    "375": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "376": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "STOP",
      "path": "5"
    },
    "377": {
      "offset": [
        3293,
        3351
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "378": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "379": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP1",
      "path": "5"
    },
    "380": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "381": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x185"
    },
    "384": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "385": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "387": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP1",
      "path": "5"
    },
    "388": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "REVERT",
      "path": "5"
    },
    "389": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C0"
    },
    "394": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x194"
    },
    "397": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "398": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "400": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1444"
    },
    "403": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        3293,
        3351
      ],
      "op": "JUMP",
      "path": "5"
    },
    "404": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "405": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "407": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "409": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "410": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP2",
      "path": "5"
    },
    "411": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "412": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "414": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "415": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP4",
      "path": "5"
    },
    "416": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "417": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "419": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP1",
      "path": "5"
    },
    "420": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP5",
      "path": "5"
    },
    "421": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "422": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "423": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "424": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "425": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "426": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP3",
      "path": "5"
    },
    "427": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "428": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "429": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "430": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP1",
      "path": "5"
    },
    "431": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "432": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "434": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP3",
      "path": "5"
    },
    "435": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "ADD",
      "path": "5"
    },
    "436": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "437": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "439": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "440": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "441": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "ADD",
      "path": "5"
    },
    "442": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "443": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "444": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "445": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "446": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP4",
      "path": "5"
    },
    "447": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "JUMP",
      "path": "5"
    },
    "448": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "449": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "451": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "DUP1",
      "path": "5"
    },
    "452": {
      "fn": "HettiPool.withdraw",
      "offset": [
        3293,
        3351
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "453": {
      "op": "SWAP4"
    },
    "454": {
      "op": "DUP5"
    },
    "455": {
      "op": "MSTORE"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "458": {
      "op": "DUP5"
    },
    "459": {
      "op": "ADD"
    },
    "460": {
      "op": "SWAP3"
    },
    "461": {
      "op": "SWAP1"
    },
    "462": {
      "op": "SWAP3"
    },
    "463": {
      "op": "MSTORE"
    },
    "464": {
      "op": "SWAP1"
    },
    "465": {
      "op": "DUP3"
    },
    "466": {
      "op": "ADD"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "470": {
      "op": "ADD"
    },
    "471": {
      "offset": [
        3293,
        3351
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "474": {
      "op": "JUMP"
    },
    "475": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "476": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "477": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "478": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "479": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "482": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "483": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "485": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "486": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "REVERT",
      "path": "5"
    },
    "487": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x177"
    },
    "492": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F6"
    },
    "495": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "496": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "498": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1466"
    },
    "501": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMP",
      "path": "5"
    },
    "502": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "503": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7FD"
    },
    "506": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMP",
      "path": "5"
    },
    "507": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "508": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "509": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "510": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "511": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x207"
    },
    "514": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "515": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "517": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "518": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "REVERT",
      "path": "5"
    },
    "519": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "523": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "526": {
      "fn": "HettiPool.getRingMaxParticipants",
      "offset": [
        13666,
        13786
      ],
      "op": "JUMP",
      "path": "5"
    },
    "527": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "528": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "529": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "DUP1",
      "path": "5"
    },
    "530": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "531": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21B"
    },
    "534": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "535": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "537": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "DUP1",
      "path": "5"
    },
    "538": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "REVERT",
      "path": "5"
    },
    "539": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "544": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22A"
    },
    "547": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "548": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "550": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1274"
    },
    "553": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMP",
      "path": "5"
    },
    "554": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "555": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAFC"
    },
    "558": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMP",
      "path": "5"
    },
    "559": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "560": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "561": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "DUP1",
      "path": "5"
    },
    "562": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "563": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23B"
    },
    "566": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "567": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "569": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "DUP1",
      "path": "5"
    },
    "570": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "REVERT",
      "path": "5"
    },
    "571": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "576": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24A"
    },
    "579": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "580": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "582": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1274"
    },
    "585": {
      "fn": "HettiPool.getLoanFee",
      "jump": "i",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "586": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "587": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB1B"
    },
    "590": {
      "fn": "HettiPool.getLoanFee",
      "jump": "i",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "591": {
      "offset": [
        3199,
        3245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "592": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "593": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "DUP1",
      "path": "5"
    },
    "594": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "595": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25B"
    },
    "598": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "599": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "601": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "DUP1",
      "path": "5"
    },
    "602": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "REVERT",
      "path": "5"
    },
    "603": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "608": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26A"
    },
    "611": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "612": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "614": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1274"
    },
    "617": {
      "fn": "HettiPool.getLoanFee",
      "jump": "i",
      "offset": [
        3199,
        3245
      ],
      "op": "JUMP",
      "path": "5"
    },
    "618": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "619": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "621": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "623": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "624": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "626": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "627": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "DUP2",
      "path": "5"
    },
    "628": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "629": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "631": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "632": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "633": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "634": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "DUP2",
      "path": "5"
    },
    "635": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3199,
        3245
      ],
      "op": "JUMP",
      "path": "5"
    },
    "636": {
      "offset": [
        3100,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "637": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "638": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "639": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "640": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x288"
    },
    "643": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "644": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "646": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "647": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "REVERT",
      "path": "5"
    },
    "648": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "649": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "POP",
      "path": "5"
    },
    "650": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "653": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "655": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "656": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "657": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        3100,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "658": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "659": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "660": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "DUP1",
      "path": "5"
    },
    "661": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "662": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29E"
    },
    "665": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "666": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "668": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "DUP1",
      "path": "5"
    },
    "669": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "REVERT",
      "path": "5"
    },
    "670": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "671": {
      "op": "POP"
    },
    "672": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "675": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AD"
    },
    "678": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "679": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "681": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1274"
    },
    "684": {
      "fn": "HettiPool.getWParticipant",
      "jump": "i",
      "offset": [
        13134,
        13293
      ],
      "op": "JUMP",
      "path": "5"
    },
    "685": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "686": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13225,
        13286
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x30"
    },
    "688": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13225,
        13286
      ],
      "op": "SHR",
      "path": "5"
    },
    "689": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13225,
        13286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "690": {
      "fn": "HettiPool.getWParticipant",
      "offset": [
        13134,
        13293
      ],
      "op": "JUMP",
      "path": "5"
    },
    "691": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "692": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "693": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "DUP1",
      "path": "5"
    },
    "694": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "695": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BF"
    },
    "698": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "699": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "701": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "DUP1",
      "path": "5"
    },
    "702": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "REVERT",
      "path": "5"
    },
    "703": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "704": {
      "op": "POP"
    },
    "705": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "708": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CE"
    },
    "711": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "712": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "714": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1444"
    },
    "717": {
      "fn": "HettiPool.getRingHash",
      "jump": "i",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMP",
      "path": "5"
    },
    "718": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "719": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB3E"
    },
    "722": {
      "fn": "HettiPool.getRingHash",
      "jump": "i",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMP",
      "path": "5"
    },
    "723": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "724": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "725": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "DUP1",
      "path": "5"
    },
    "726": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "727": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DF"
    },
    "730": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "731": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "733": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "DUP1",
      "path": "5"
    },
    "734": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "REVERT",
      "path": "5"
    },
    "735": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "736": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "POP",
      "path": "5"
    },
    "737": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "740": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB70"
    },
    "743": {
      "fn": "HettiPool.getPoolBalance",
      "jump": "i",
      "offset": [
        9679,
        9796
      ],
      "op": "JUMP",
      "path": "5"
    },
    "744": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "745": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x177"
    },
    "748": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F6"
    },
    "751": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "752": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "754": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1493"
    },
    "757": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10304,
        10848
      ],
      "op": "JUMP",
      "path": "5"
    },
    "758": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "759": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE2"
    },
    "762": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10304,
        10848
      ],
      "op": "JUMP",
      "path": "5"
    },
    "763": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "764": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "765": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "DUP1",
      "path": "5"
    },
    "766": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "767": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x307"
    },
    "770": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "771": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "773": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "DUP1",
      "path": "5"
    },
    "774": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "REVERT",
      "path": "5"
    },
    "775": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C0"
    },
    "780": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x316"
    },
    "783": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "784": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "786": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1274"
    },
    "789": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMP",
      "path": "5"
    },
    "790": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "791": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "794": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMP",
      "path": "5"
    },
    "795": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "796": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "797": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "DUP1",
      "path": "5"
    },
    "798": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "799": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x327"
    },
    "802": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "803": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "805": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "DUP1",
      "path": "5"
    },
    "806": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "REVERT",
      "path": "5"
    },
    "807": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "808": {
      "op": "POP"
    },
    "809": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x177"
    },
    "812": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x336"
    },
    "815": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "816": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "818": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x151C"
    },
    "821": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "822": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "823": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE5F"
    },
    "826": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "827": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "828": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "829": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "DUP1",
      "path": "5"
    },
    "830": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "831": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "834": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "835": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "837": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "DUP1",
      "path": "5"
    },
    "838": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "REVERT",
      "path": "5"
    },
    "839": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35B"
    },
    "844": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x356"
    },
    "847": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "848": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "850": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1444"
    },
    "853": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "854": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "855": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5B"
    },
    "858": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "859": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "860": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "862": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "863": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "866": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "867": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "868": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1540"
    },
    "871": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "872": {
      "offset": [
        3006,
        3026
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "873": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "874": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "DUP1",
      "path": "5"
    },
    "875": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "876": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x374"
    },
    "879": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "880": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "882": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "DUP1",
      "path": "5"
    },
    "883": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "REVERT",
      "path": "5"
    },
    "884": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "offset": [
        3006,
        3026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "888": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "889": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x388"
    },
    "892": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "op": "SUB"
    },
    "901": {
      "offset": [
        3006,
        3026
      ],
      "op": "AND",
      "path": "5"
    },
    "902": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "DUP2",
      "path": "5"
    },
    "903": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "JUMP",
      "path": "5"
    },
    "904": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "905": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "907": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        3006,
        3026
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "op": "SWAP1"
    },
    "917": {
      "op": "SWAP2"
    },
    "918": {
      "op": "AND"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "923": {
      "op": "ADD"
    },
    "924": {
      "offset": [
        3006,
        3026
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "927": {
      "op": "JUMP"
    },
    "928": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "929": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13471,
        13478
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "931": {
      "offset": [
        1958,
        1960
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "933": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13501,
        13534
      ],
      "op": "DUP3",
      "path": "5"
    },
    "934": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13501,
        13534
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "935": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13501,
        13534
      ],
      "op": "SHR",
      "path": "5"
    },
    "936": {
      "offset": [
        2051,
        2083
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B5"
    },
    "939": {
      "offset": [
        2082,
        2083
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "941": {
      "offset": [
        2052,
        2079
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x10000"
    },
    "945": {
      "offset": [
        2051,
        2083
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B0"
    },
    "948": {
      "fn": "HettiPool.getParticipant",
      "jump": "i",
      "offset": [
        2051,
        2083
      ],
      "op": "JUMP",
      "path": "5"
    },
    "949": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        2051,
        2083
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "950": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13560,
        13585
      ],
      "op": "AND",
      "path": "5",
      "statement": 1
    },
    "951": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13560,
        13585
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "952": {
      "fn": "HettiPool.getParticipant",
      "offset": [
        13406,
        13592
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "HettiPool.getParticipant",
      "jump": "o",
      "offset": [
        13406,
        13592
      ],
      "op": "JUMP",
      "path": "5"
    },
    "956": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "957": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6432,
        6449
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "959": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "DUP6",
      "path": "5"
    },
    "960": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "DUP2",
      "path": "5"
    },
    "961": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "962": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "964": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "966": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "967": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "DUP2",
      "path": "5"
    },
    "968": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "969": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "971": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "DUP1",
      "path": "5"
    },
    "972": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "DUP4",
      "path": "5"
    },
    "973": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6470
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "974": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "DUP8",
      "path": "5"
    },
    "975": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "DUP5",
      "path": "5"
    },
    "976": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "977": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "978": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "979": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "980": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "981": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "982": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6575,
        6594
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "984": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6575,
        6594
      ],
      "op": "DUP2",
      "path": "5"
    },
    "985": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6575,
        6594
      ],
      "op": "ADD",
      "path": "5"
    },
    "986": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6575,
        6594
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "987": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "988": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6452,
        6481
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "989": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6432,
        6449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "990": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6432,
        6449
      ],
      "op": "DUP2",
      "path": "5"
    },
    "991": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6432,
        6449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "992": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6432,
        6449
      ],
      "op": "DUP2",
      "path": "5"
    },
    "993": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6432,
        6449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "994": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6557,
        6595
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EA"
    },
    "997": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6557,
        6595
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "998": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6557,
        6574
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "1001": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        6557,
        6595
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1002": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6557,
        6595
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1003": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6492,
        6595
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1004": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6492,
        6595
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6492,
        6595
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6492,
        6595
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "SUB"
    },
    "1018": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6610,
        6633
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1019": {
      "branch": 58,
      "fn": "HettiPool.withdraw",
      "offset": [
        6610,
        6633
      ],
      "op": "AND",
      "path": "5"
    },
    "1020": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6606,
        6682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43B"
    },
    "1023": {
      "branch": 58,
      "fn": "HettiPool.withdraw",
      "offset": [
        6606,
        6682
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1024": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x40"
    },
    "1026": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1035": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1040": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1041": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "ADD",
      "path": "5"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1047": {
      "op": "DUP3"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH12",
      "value": "0x5A45524F5F41444452455353"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1068": {
      "op": "DUP3"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1075": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1077": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1078": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1079": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1080": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "SUB",
      "path": "5"
    },
    "1081": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1082": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6649,
        6671
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "1083": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6606,
        6682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1084": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1086": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6704,
        6717
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1087": {
      "branch": 59,
      "fn": "HettiPool.withdraw",
      "offset": [
        6704,
        6741
      ],
      "op": "LT",
      "path": "5"
    },
    "1088": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6700,
        6797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x481"
    },
    "1091": {
      "branch": 59,
      "fn": "HettiPool.withdraw",
      "offset": [
        6700,
        6797
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1092": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x40"
    },
    "1094": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1095": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1103": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1106": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1108": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1109": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "ADD",
      "path": "5"
    },
    "1110": {
      "op": "MSTORE"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1115": {
      "op": "DUP3"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "op": "MSTORE"
    },
    "1118": {
      "op": "PUSH19",
      "value": "0x20A6262FA32AA72229AFABA4AA24222920ABA7"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "MSTORE"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6757,
        6786
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "1152": {
      "op": "JUMP"
    },
    "1153": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6700,
        6797
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1154": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6811,
        6824
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1156": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6811,
        6824
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1157": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6811,
        6824
      ],
      "op": "ADD",
      "path": "5"
    },
    "1158": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6811,
        6824
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1159": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6807,
        6893
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C4"
    },
    "1162": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6807,
        6893
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1163": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x40"
    },
    "1165": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1174": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1177": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1179": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1180": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "ADD",
      "path": "5"
    },
    "1181": {
      "op": "MSTORE"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH15",
      "value": "0x14925391D7D393D517D0D313D4D151"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1210": {
      "op": "DUP3"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6857,
        6882
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "1219": {
      "op": "JUMP"
    },
    "1220": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6807,
        6893
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1221": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1223": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1224": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1225": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1227": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1228": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1229": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1230": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1232": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1233": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "ADD",
      "path": "5"
    },
    "1234": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1235": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1236": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1237": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6903,
        6933
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1239": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6903,
        6933
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1240": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1241": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1243": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "ADD",
      "path": "5"
    },
    "1244": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1245": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E4"
    },
    "1248": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A9"
    },
    "1251": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        6936,
        6974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1252": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1253": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1254": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1255": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1257": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "ADD",
      "path": "5"
    },
    "1258": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1259": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1261": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1262": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SUB",
      "path": "5"
    },
    "1263": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1264": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1265": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DC"
    },
    "1268": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1269": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1270": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "POP",
      "path": "5"
    },
    "1271": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6936,
        6974
      ],
      "op": "POP",
      "path": "5"
    },
    "1272": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6903,
        6974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1273": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6903,
        6974
      ],
      "op": "POP",
      "path": "5"
    },
    "1274": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6990,
        6999
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1276": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1277": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1279": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7005,
        7006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1280": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7005,
        7029
      ],
      "op": "LT",
      "path": "5"
    },
    "1281": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1282": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x565"
    },
    "1285": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1286": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x0"
    },
    "1288": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1289": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1290": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1291": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1293": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7077
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1294": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7077
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1295": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7077
      ],
      "op": "ADD",
      "path": "5"
    },
    "1296": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1298": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1299": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1301": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1302": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1303": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1304": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1305": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1306": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1307": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1308": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1309": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "ADD",
      "path": "5"
    },
    "1310": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1311": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1312": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1313": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1314": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1315": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1316": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1317": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1318": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7062,
        7080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1319": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1320": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1321": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1322": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1323": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1324": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1325": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1327": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "ADD",
      "path": "5"
    },
    "1328": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1329": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1331": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "ADD",
      "path": "5"
    },
    "1332": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1333": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1334": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1335": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "GT",
      "path": "5"
    },
    "1336": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x528"
    },
    "1339": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1340": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "POP",
      "path": "5"
    },
    "1341": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "POP",
      "path": "5"
    },
    "1342": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "POP",
      "path": "5"
    },
    "1343": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "POP",
      "path": "5"
    },
    "1344": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "POP",
      "path": "5"
    },
    "1345": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7056
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1346": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7057,
        7058
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1347": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1348": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1349": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1350": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "LT",
      "path": "5"
    },
    "1351": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x552"
    },
    "1354": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1355": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x552"
    },
    "1358": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "1361": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        7046,
        7059
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1362": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1363": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1365": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1366": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1367": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "MUL",
      "path": "5"
    },
    "1368": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1369": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1370": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1371": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "ADD",
      "path": "5"
    },
    "1372": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7059
      ],
      "op": "ADD",
      "path": "5"
    },
    "1373": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7046,
        7080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1374": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7122,
        7125
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x1"
    },
    "1376": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7122,
        7125
      ],
      "op": "ADD",
      "path": "5"
    },
    "1377": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FC"
    },
    "1380": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1381": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1382": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6985,
        7150
      ],
      "op": "POP",
      "path": "5"
    },
    "1383": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7206,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1385": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7235
      ],
      "op": "PUSH20",
      "path": "5",
      "value": "0x0"
    },
    "1406": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7242
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFE46A2B2"
    },
    "1411": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7273,
        7277
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1412": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7273,
        7286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1414": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7273,
        7286
      ],
      "op": "ADD",
      "path": "5"
    },
    "1415": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7273,
        7286
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1416": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7288,
        7297
      ],
      "op": "DUP15",
      "path": "5"
    },
    "1417": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1419": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1420": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1422": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "ADD",
      "path": "5"
    },
    "1423": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B4"
    },
    "1426": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1427": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1428": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1429": {
      "op": "SWAP2"
    },
    "1430": {
      "op": "DUP3"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1448": {
      "op": "NOT"
    },
    "1449": {
      "op": "AND"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1452": {
      "op": "DUP3"
    },
    "1453": {
      "op": "ADD"
    },
    "1454": {
      "op": "MSTORE"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1457": {
      "op": "ADD"
    },
    "1458": {
      "op": "SWAP1"
    },
    "1459": {
      "op": "JUMP"
    },
    "1460": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1461": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1463": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1464": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1466": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1467": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1468": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "SUB",
      "path": "5"
    },
    "1469": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "SUB",
      "path": "5"
    },
    "1470": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1471": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1472": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1473": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1475": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7256,
        7298
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1476": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7332,
        7334
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1477": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7348,
        7356
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1478": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7370,
        7371
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1479": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7385,
        7395
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1480": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1482": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1483": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1484": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1489": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "AND",
      "path": "5"
    },
    "1490": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "1492": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SHL",
      "path": "5"
    },
    "1493": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1494": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1495": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1497": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "ADD",
      "path": "5"
    },
    "1498": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E7"
    },
    "1501": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1502": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1503": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1504": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1505": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1506": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1507": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x167B"
    },
    "1510": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        7231,
        7405
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1511": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1512": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1514": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1516": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1517": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1518": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1519": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SUB",
      "path": "5"
    },
    "1520": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1521": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1522": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "GAS",
      "path": "5"
    },
    "1523": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DELEGATECALL",
      "path": "5"
    },
    "1524": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1525": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1526": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1527": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x604"
    },
    "1530": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1531": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1532": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1534": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1535": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1536": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1537": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1539": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1540": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1541": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "POP",
      "path": "5"
    },
    "1542": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "POP",
      "path": "5"
    },
    "1543": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "POP",
      "path": "5"
    },
    "1544": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "POP",
      "path": "5"
    },
    "1545": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1547": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1548": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1549": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1551": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "NOT",
      "path": "5"
    },
    "1552": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1554": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1555": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "ADD",
      "path": "5"
    },
    "1556": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "AND",
      "path": "5"
    },
    "1557": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1558": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "ADD",
      "path": "5"
    },
    "1559": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1560": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1562": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1563": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "POP",
      "path": "5"
    },
    "1564": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1565": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "ADD",
      "path": "5"
    },
    "1566": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1567": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x628"
    },
    "1570": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1571": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1572": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1711"
    },
    "1575": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        7231,
        7405
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1576": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7231,
        7405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1577": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7206,
        7405
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1578": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7206,
        7405
      ],
      "op": "POP",
      "path": "5"
    },
    "1579": {
      "branch": 60,
      "fn": "HettiPool.withdraw",
      "offset": [
        7421,
        7438
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1580": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7416,
        7492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66B"
    },
    "1583": {
      "branch": 60,
      "fn": "HettiPool.withdraw",
      "offset": [
        7416,
        7492
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1584": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x40"
    },
    "1586": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1595": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1598": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1600": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1601": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "ADD",
      "path": "5"
    },
    "1602": {
      "op": "MSTORE"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1607": {
      "op": "DUP3"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH17",
      "value": "0x494E56414C49445F5349474E4154555245"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1633": {
      "op": "DUP3"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7454,
        7481
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "1642": {
      "op": "JUMP"
    },
    "1643": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7416,
        7492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1644": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7576,
        7582
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1646": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1647": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7592,
        7605
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1648": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7588,
        7589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1649": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7588,
        7605
      ],
      "op": "LT",
      "path": "5"
    },
    "1650": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1651": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F4"
    },
    "1654": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1655": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7650,
        7661
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1656": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7650,
        7661
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1657": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7659,
        7660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1659": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1660": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1661": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1662": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1664": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7640
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1665": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7640
      ],
      "op": "ADD",
      "path": "5"
    },
    "1666": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7650,
        7661
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1668": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1669": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1671": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1672": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7643
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1673": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7646
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1674": {
      "branch": 61,
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7661
      ],
      "op": "EQ",
      "path": "5"
    },
    "1675": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7716
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1676": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7716
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1677": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AE"
    },
    "1680": {
      "branch": 61,
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7716
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7705,
        7716
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1684": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7705,
        7716
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1685": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7705,
        7716
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1686": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7705,
        7716
      ],
      "op": "ADD",
      "path": "5"
    },
    "1687": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7705,
        7716
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1688": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1690": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1691": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1692": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1693": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7695
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1695": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7695
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1696": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7695
      ],
      "op": "ADD",
      "path": "5"
    },
    "1697": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1698": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1699": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1700": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1702": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1703": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1704": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7698
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1705": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7714,
        7715
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1707": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7701
      ],
      "op": "ADD",
      "path": "5"
    },
    "1708": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7701
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1709": {
      "branch": 62,
      "fn": "HettiPool.withdraw",
      "offset": [
        7681,
        7716
      ],
      "op": "EQ",
      "path": "5"
    },
    "1710": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7626,
        7716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1711": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7622,
        7775
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1712": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7622,
        7775
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6EC"
    },
    "1715": {
      "branch": 62,
      "fn": "HettiPool.withdraw",
      "offset": [
        7622,
        7775
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1716": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x40"
    },
    "1718": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1727": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1730": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1732": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1733": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "ADD",
      "path": "5"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1739": {
      "op": "DUP3"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "MSTORE"
    },
    "1742": {
      "op": "PUSH14",
      "value": "0x555345445F5349474E4154555245"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1762": {
      "op": "DUP3"
    },
    "1763": {
      "op": "ADD"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7736,
        7760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "1771": {
      "op": "JUMP"
    },
    "1772": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7622,
        7775
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1773": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7817,
        7820
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x1"
    },
    "1775": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7817,
        7820
      ],
      "op": "ADD",
      "path": "5"
    },
    "1776": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66E"
    },
    "1779": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1780": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7571,
        7845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x0"
    },
    "1784": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1785": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1786": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1787": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7873
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1789": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7873
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1790": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7873
      ],
      "op": "ADD",
      "path": "5"
    },
    "1791": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1793": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1794": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1796": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1797": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7888
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1798": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x711"
    },
    "1801": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1802": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7891,
        7899
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1803": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1805": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11C7"
    },
    "1808": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1809": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7933,
        7948
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x1"
    },
    "1813": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7933,
        7948
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1814": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7933,
        7948
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1815": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7933,
        7948
      ],
      "op": "ADD",
      "path": "5"
    },
    "1816": {
      "offset": [
        1868,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "1818": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7988,
        8027
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1819": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7988,
        8027
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1820": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7988,
        8027
      ],
      "op": "SHL",
      "path": "5"
    },
    "1821": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7987,
        8043
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1822": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7987,
        8043
      ],
      "op": "OR",
      "path": "5"
    },
    "1823": {
      "offset": [
        1958,
        1960
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1825": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8067,
        8100
      ],
      "op": "SHL",
      "path": "5",
      "statement": 12
    },
    "1826": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8066,
        8112
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1827": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8066,
        8112
      ],
      "op": "OR",
      "path": "5"
    },
    "1828": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8122,
        8141
      ],
      "op": "SWAP6",
      "path": "5",
      "statement": 13
    },
    "1829": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8122,
        8141
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1830": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8122,
        8141
      ],
      "op": "ADD",
      "path": "5"
    },
    "1831": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8122,
        8154
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1832": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8122,
        8154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1833": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8122,
        8154
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1834": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7969,
        7984
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1836": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8173,
        8178
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 14
    },
    "1837": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1839": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1840": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1847": {
      "op": "SHL"
    },
    "1848": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1849": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "op": "SUB"
    },
    "1858": {
      "op": "DUP16"
    },
    "1859": {
      "op": "DUP2"
    },
    "1860": {
      "op": "AND"
    },
    "1861": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1863": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1864": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "ADD",
      "path": "5"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1868": {
      "op": "DUP3"
    },
    "1869": {
      "op": "ADD"
    },
    "1870": {
      "op": "DUP16"
    },
    "1871": {
      "op": "SWAP1"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7933,
        7948
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1874": {
      "fn": "HettiPool.withdraw",
      "offset": [
        7933,
        7948
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1875": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8066,
        8112
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1876": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8173,
        8178
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1877": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8173,
        8178
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1878": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8173,
        8178
      ],
      "op": "AND",
      "path": "5"
    },
    "1879": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8173,
        8178
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1880": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8188
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "1885": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1891": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1893": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1894": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1895": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1896": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "SUB",
      "path": "5"
    },
    "1897": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1898": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1900": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1901": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "GAS",
      "path": "5"
    },
    "1902": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "CALL",
      "path": "5"
    },
    "1903": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1904": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1905": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1906": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x77F"
    },
    "1909": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1910": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1911": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1913": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1914": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1915": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1916": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1918": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1919": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1920": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "POP",
      "path": "5"
    },
    "1921": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "POP",
      "path": "5"
    },
    "1922": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "POP",
      "path": "5"
    },
    "1923": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "POP",
      "path": "5"
    },
    "1924": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1926": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1927": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1928": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1930": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "NOT",
      "path": "5"
    },
    "1931": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1933": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1934": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "ADD",
      "path": "5"
    },
    "1935": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "AND",
      "path": "5"
    },
    "1936": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1937": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "ADD",
      "path": "5"
    },
    "1938": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1939": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1941": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1942": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "POP",
      "path": "5"
    },
    "1943": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1944": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "ADD",
      "path": "5"
    },
    "1945": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1946": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A3"
    },
    "1949": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1950": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1951": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1711"
    },
    "1954": {
      "fn": "HettiPool.withdraw",
      "jump": "i",
      "offset": [
        8167,
        8212
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1955": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8167,
        8212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1956": {
      "op": "POP"
    },
    "1957": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x40"
    },
    "1959": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1960": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "op": "DUP16"
    },
    "1970": {
      "op": "AND"
    },
    "1971": {
      "op": "DUP2"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "op": "DUP2"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "DUP15"
    },
    "1978": {
      "op": "SWAP1"
    },
    "1979": {
      "op": "MSTORE"
    },
    "1980": {
      "op": "SWAP1"
    },
    "1981": {
      "op": "DUP2"
    },
    "1982": {
      "op": "ADD"
    },
    "1983": {
      "op": "DUP13"
    },
    "1984": {
      "op": "SWAP1"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
    },
    "2019": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2025": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2026": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2027": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2028": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "SUB",
      "path": "5"
    },
    "2029": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2030": {
      "fn": "HettiPool.withdraw",
      "offset": [
        8228,
        8272
      ],
      "op": "LOG1",
      "path": "5"
    },
    "2031": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2032": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2033": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2034": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2035": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2036": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2037": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6422,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2038": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2039": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2040": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2041": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2042": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2043": {
      "fn": "HettiPool.withdraw",
      "offset": [
        6244,
        8279
      ],
      "op": "POP",
      "path": "5"
    },
    "2044": {
      "fn": "HettiPool.withdraw",
      "jump": "o",
      "offset": [
        6244,
        8279
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2045": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2046": {
      "fn": "HettiPool.deposit",
      "offset": [
        4167,
        4194
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2048": {
      "fn": "HettiPool.deposit",
      "offset": [
        4197,
        4217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x808"
    },
    "2051": {
      "fn": "HettiPool.deposit",
      "offset": [
        4209,
        4216
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2052": {
      "fn": "HettiPool.deposit",
      "offset": [
        4197,
        4208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1022"
    },
    "2055": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4197,
        4217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2056": {
      "fn": "HettiPool.deposit",
      "offset": [
        4197,
        4217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2057": {
      "fn": "HettiPool.deposit",
      "offset": [
        4234,
        4239
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x0"
    },
    "2059": {
      "fn": "HettiPool.deposit",
      "offset": [
        4234,
        4239
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2060": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2062": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2063": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2070": {
      "op": "SHL"
    },
    "2071": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2072": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2073": {
      "fn": "HettiPool.deposit",
      "offset": [
        4254,
        4264
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2074": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2076": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2077": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "ADD",
      "path": "5"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "fn": "HettiPool.deposit",
      "offset": [
        4274,
        4278
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2082": {
      "op": "DUP3"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "MSTORE"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2087": {
      "op": "DUP2"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "op": "DUP7"
    },
    "2090": {
      "op": "SWAP1"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "fn": "HettiPool.deposit",
      "offset": [
        4167,
        4217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2093": {
      "fn": "HettiPool.deposit",
      "offset": [
        4167,
        4217
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2094": {
      "op": "POP"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2101": {
      "op": "SHL"
    },
    "2102": {
      "op": "SUB"
    },
    "2103": {
      "fn": "HettiPool.deposit",
      "offset": [
        4234,
        4239
      ],
      "op": "AND",
      "path": "5"
    },
    "2104": {
      "fn": "HettiPool.deposit",
      "offset": [
        4234,
        4239
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2105": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4253
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "2110": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2116": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2118": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2119": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2120": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2121": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "SUB",
      "path": "5"
    },
    "2122": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2123": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2125": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2126": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "GAS",
      "path": "5"
    },
    "2127": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "CALL",
      "path": "5"
    },
    "2128": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2129": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2130": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2131": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x860"
    },
    "2134": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2135": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2136": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2138": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2139": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2140": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2141": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2143": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2144": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2145": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "POP",
      "path": "5"
    },
    "2146": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "POP",
      "path": "5"
    },
    "2147": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "POP",
      "path": "5"
    },
    "2148": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "POP",
      "path": "5"
    },
    "2149": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2151": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2152": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2153": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2155": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "NOT",
      "path": "5"
    },
    "2156": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2158": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2159": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "ADD",
      "path": "5"
    },
    "2160": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "AND",
      "path": "5"
    },
    "2161": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2162": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "ADD",
      "path": "5"
    },
    "2163": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2164": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2166": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2167": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "POP",
      "path": "5"
    },
    "2168": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2169": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "ADD",
      "path": "5"
    },
    "2170": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2171": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x884"
    },
    "2174": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2175": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2176": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1711"
    },
    "2179": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4228,
        4289
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2180": {
      "fn": "HettiPool.deposit",
      "offset": [
        4228,
        4289
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2181": {
      "op": "POP"
    },
    "2182": {
      "fn": "HettiPool.deposit",
      "offset": [
        4330,
        4343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2183": {
      "fn": "HettiPool.deposit",
      "offset": [
        4330,
        4343
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2184": {
      "fn": "HettiPool.deposit",
      "offset": [
        4330,
        4343
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2186": {
      "fn": "HettiPool.deposit",
      "offset": [
        4354,
        4367
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2187": {
      "fn": "HettiPool.deposit",
      "offset": [
        4354,
        4367
      ],
      "op": "ADD",
      "path": "5"
    },
    "2188": {
      "fn": "HettiPool.deposit",
      "offset": [
        4354,
        4367
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2189": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2191": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2192": {
      "op": "PUSH4",
      "value": "0xCD3B289"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2201": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2202": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2204": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2205": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "ADD",
      "path": "5"
    },
    "2206": {
      "op": "SWAP3"
    },
    "2207": {
      "op": "SWAP1"
    },
    "2208": {
      "op": "SWAP3"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2212": {
      "op": "DUP3"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4313
      ],
      "op": "PUSH20",
      "path": "5",
      "value": "0x0"
    },
    "2236": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4313
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2237": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4321
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x669D9448"
    },
    "2242": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2248": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2250": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2251": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2252": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2253": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "SUB",
      "path": "5"
    },
    "2254": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2255": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2256": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "GAS",
      "path": "5"
    },
    "2257": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DELEGATECALL",
      "path": "5"
    },
    "2258": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2259": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2260": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2261": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E2"
    },
    "2264": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2265": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2266": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2268": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2269": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2270": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2271": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2273": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2274": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2275": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "POP",
      "path": "5"
    },
    "2276": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "POP",
      "path": "5"
    },
    "2277": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "POP",
      "path": "5"
    },
    "2278": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "POP",
      "path": "5"
    },
    "2279": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2281": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2282": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2283": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2285": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "NOT",
      "path": "5"
    },
    "2286": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2288": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2289": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "ADD",
      "path": "5"
    },
    "2290": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "AND",
      "path": "5"
    },
    "2291": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2292": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "ADD",
      "path": "5"
    },
    "2293": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2294": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2296": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2297": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "POP",
      "path": "5"
    },
    "2298": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2299": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "ADD",
      "path": "5"
    },
    "2300": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2301": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x906"
    },
    "2304": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2305": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2306": {
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1711"
    },
    "2309": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4305,
        4369
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2310": {
      "branch": 63,
      "fn": "HettiPool.deposit",
      "offset": [
        4305,
        4369
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2311": {
      "fn": "HettiPool.deposit",
      "offset": [
        4300,
        4421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x944"
    },
    "2314": {
      "branch": 63,
      "fn": "HettiPool.deposit",
      "offset": [
        4300,
        4421
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2315": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 17,
      "value": "0x40"
    },
    "2317": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2326": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2329": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2331": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2332": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "ADD",
      "path": "5"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2338": {
      "op": "DUP3"
    },
    "2339": {
      "op": "ADD"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "op": "PUSH15",
      "value": "0x504B5F4E4F545F4F4E5F4355525645"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2362": {
      "op": "DUP3"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2367": {
      "op": "ADD"
    },
    "2368": {
      "fn": "HettiPool.deposit",
      "offset": [
        4385,
        4410
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "2371": {
      "op": "JUMP"
    },
    "2372": {
      "fn": "HettiPool.deposit",
      "offset": [
        4300,
        4421
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2373": {
      "fn": "HettiPool.deposit",
      "offset": [
        4481,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2375": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2376": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2377": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2378": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4512
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "2380": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2382": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2383": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2384": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2385": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2387": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2388": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2389": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2390": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2391": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4568
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "2393": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4589
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2394": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2395": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2396": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4589
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2397": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4589
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2398": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2399": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2400": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2401": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2402": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2403": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2404": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2405": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2406": {
      "fn": "HettiPool.deposit",
      "offset": [
        4694,
        4713
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2408": {
      "fn": "HettiPool.deposit",
      "offset": [
        4694,
        4713
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2409": {
      "fn": "HettiPool.deposit",
      "offset": [
        4694,
        4713
      ],
      "op": "ADD",
      "path": "5"
    },
    "2410": {
      "fn": "HettiPool.deposit",
      "offset": [
        4694,
        4713
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2411": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2412": {
      "fn": "HettiPool.deposit",
      "offset": [
        4501,
        4533
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2413": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2414": {
      "fn": "HettiPool.deposit",
      "offset": [
        4563,
        4600
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2415": {
      "fn": "HettiPool.deposit",
      "offset": [
        4481,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2416": {
      "fn": "HettiPool.deposit",
      "offset": [
        4481,
        4498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2417": {
      "fn": "HettiPool.deposit",
      "offset": [
        4481,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2418": {
      "fn": "HettiPool.deposit",
      "offset": [
        4481,
        4498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2419": {
      "fn": "HettiPool.deposit",
      "offset": [
        4676,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97B"
    },
    "2422": {
      "fn": "HettiPool.deposit",
      "offset": [
        4676,
        4714
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2423": {
      "fn": "HettiPool.deposit",
      "offset": [
        4676,
        4693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "2426": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        4676,
        4714
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2427": {
      "fn": "HettiPool.deposit",
      "offset": [
        4676,
        4714
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2428": {
      "fn": "HettiPool.deposit",
      "offset": [
        4611,
        4714
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2429": {
      "fn": "HettiPool.deposit",
      "offset": [
        4611,
        4714
      ],
      "op": "POP",
      "path": "5"
    },
    "2430": {
      "fn": "HettiPool.deposit",
      "offset": [
        4611,
        4714
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2431": {
      "fn": "HettiPool.deposit",
      "offset": [
        4611,
        4714
      ],
      "op": "POP",
      "path": "5"
    },
    "2432": {
      "fn": "HettiPool.deposit",
      "offset": [
        4611,
        4714
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2433": {
      "fn": "HettiPool.deposit",
      "offset": [
        4611,
        4714
      ],
      "op": "POP",
      "path": "5"
    },
    "2434": {
      "fn": "HettiPool.deposit",
      "offset": [
        4789,
        4798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2436": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2437": {
      "fn": "HettiPool.deposit",
      "offset": [
        4808,
        4820
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2438": {
      "fn": "HettiPool.deposit",
      "offset": [
        4804,
        4805
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2439": {
      "fn": "HettiPool.deposit",
      "offset": [
        4804,
        4820
      ],
      "op": "LT",
      "path": "5"
    },
    "2440": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2441": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0E"
    },
    "2444": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2445": {
      "fn": "HettiPool.deposit",
      "offset": [
        4866,
        4879
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2446": {
      "fn": "HettiPool.deposit",
      "offset": [
        4866,
        4879
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2447": {
      "fn": "HettiPool.deposit",
      "offset": [
        4877,
        4878
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2449": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2450": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2451": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2452": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4856
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2454": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4856
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2455": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4856
      ],
      "op": "ADD",
      "path": "5"
    },
    "2456": {
      "fn": "HettiPool.deposit",
      "offset": [
        4866,
        4879
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2458": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2459": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2461": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2462": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4859
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2463": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4862
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2464": {
      "branch": 64,
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4879
      ],
      "op": "EQ",
      "path": "5"
    },
    "2465": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4937
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2466": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4937
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2467": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C4"
    },
    "2470": {
      "branch": 64,
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4937
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "fn": "HettiPool.deposit",
      "offset": [
        4924,
        4937
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2474": {
      "fn": "HettiPool.deposit",
      "offset": [
        4924,
        4937
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2475": {
      "fn": "HettiPool.deposit",
      "offset": [
        4924,
        4937
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2476": {
      "fn": "HettiPool.deposit",
      "offset": [
        4924,
        4937
      ],
      "op": "ADD",
      "path": "5"
    },
    "2477": {
      "fn": "HettiPool.deposit",
      "offset": [
        4924,
        4937
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2478": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2480": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2481": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2482": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2483": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4914
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2485": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4914
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2486": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4914
      ],
      "op": "ADD",
      "path": "5"
    },
    "2487": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2488": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2489": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2490": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2492": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2493": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2494": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4917
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2495": {
      "fn": "HettiPool.deposit",
      "offset": [
        4935,
        4936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2497": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4920
      ],
      "op": "ADD",
      "path": "5"
    },
    "2498": {
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4920
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2499": {
      "branch": 65,
      "fn": "HettiPool.deposit",
      "offset": [
        4899,
        4937
      ],
      "op": "EQ",
      "path": "5"
    },
    "2500": {
      "fn": "HettiPool.deposit",
      "offset": [
        4841,
        4937
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2501": {
      "fn": "HettiPool.deposit",
      "offset": [
        4837,
        5000
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2502": {
      "fn": "HettiPool.deposit",
      "offset": [
        4837,
        5000
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA06"
    },
    "2505": {
      "branch": 65,
      "fn": "HettiPool.deposit",
      "offset": [
        4837,
        5000
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2506": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x40"
    },
    "2508": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2517": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2520": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2522": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2523": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "ADD",
      "path": "5"
    },
    "2524": {
      "op": "MSTORE"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2529": {
      "op": "DUP3"
    },
    "2530": {
      "op": "ADD"
    },
    "2531": {
      "op": "MSTORE"
    },
    "2532": {
      "op": "PUSH18",
      "value": "0x504B5F414C52454144595F494E5F52494E47"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2556": {
      "op": "DUP3"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2561": {
      "op": "ADD"
    },
    "2562": {
      "fn": "HettiPool.deposit",
      "offset": [
        4957,
        4985
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "2565": {
      "op": "JUMP"
    },
    "2566": {
      "fn": "HettiPool.deposit",
      "offset": [
        4837,
        5000
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2567": {
      "fn": "HettiPool.deposit",
      "offset": [
        5042,
        5045
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 19,
      "value": "0x1"
    },
    "2569": {
      "fn": "HettiPool.deposit",
      "offset": [
        5042,
        5045
      ],
      "op": "ADD",
      "path": "5"
    },
    "2570": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x984"
    },
    "2573": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2574": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2575": {
      "fn": "HettiPool.deposit",
      "offset": [
        4784,
        5070
      ],
      "op": "POP",
      "path": "5"
    },
    "2576": {
      "fn": "HettiPool.deposit",
      "offset": [
        5084,
        5096
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2577": {
      "fn": "HettiPool.deposit",
      "offset": [
        5100,
        5101
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2579": {
      "branch": 66,
      "fn": "HettiPool.deposit",
      "offset": [
        5084,
        5101
      ],
      "op": "SUB",
      "path": "5"
    },
    "2580": {
      "fn": "HettiPool.deposit",
      "offset": [
        5080,
        5155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA25"
    },
    "2583": {
      "branch": 66,
      "fn": "HettiPool.deposit",
      "offset": [
        5080,
        5155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2584": {
      "fn": "HettiPool.deposit",
      "offset": [
        5128,
        5144
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 20,
      "value": "0xA22"
    },
    "2587": {
      "fn": "HettiPool.deposit",
      "offset": [
        5143,
        5144
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2589": {
      "fn": "HettiPool.deposit",
      "offset": [
        5128,
        5140
      ],
      "op": "NUMBER",
      "path": "5"
    },
    "2590": {
      "fn": "HettiPool.deposit",
      "offset": [
        5128,
        5144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B0"
    },
    "2593": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        5128,
        5144
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2594": {
      "fn": "HettiPool.deposit",
      "offset": [
        5128,
        5144
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2595": {
      "fn": "HettiPool.deposit",
      "offset": [
        5117,
        5144
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2596": {
      "fn": "HettiPool.deposit",
      "offset": [
        5117,
        5144
      ],
      "op": "POP",
      "path": "5"
    },
    "2597": {
      "fn": "HettiPool.deposit",
      "offset": [
        5080,
        5155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2598": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x0"
    },
    "2600": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2601": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2602": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2603": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5180
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2605": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5180
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2606": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5180
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2607": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5180
      ],
      "op": "ADD",
      "path": "5"
    },
    "2608": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2610": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2611": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2613": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2614": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2615": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5194
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2616": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5207
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA42"
    },
    "2619": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5207
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2620": {
      "fn": "HettiPool.deposit",
      "offset": [
        5197,
        5207
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2621": {
      "fn": "HettiPool.deposit",
      "offset": [
        5197,
        5207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2622": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5207
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11C7"
    },
    "2625": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        5165,
        5207
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2626": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5207
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2627": {
      "fn": "HettiPool.deposit",
      "offset": [
        5165,
        5207
      ],
      "op": "POP",
      "path": "5"
    },
    "2628": {
      "fn": "HettiPool.deposit",
      "offset": [
        5241,
        5260
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 22
    },
    "2629": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5221
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2630": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5237
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2632": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5237
      ],
      "op": "ADD",
      "path": "5"
    },
    "2633": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5237
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2635": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2636": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2637": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2638": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA57"
    },
    "2641": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2642": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2643": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1733"
    },
    "2646": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        5217,
        5260
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2647": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2648": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2649": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2650": {
      "fn": "HettiPool.deposit",
      "offset": [
        5217,
        5260
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "POP"
    },
    "2653": {
      "fn": "HettiPool.deposit",
      "offset": [
        5294,
        5308
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 23,
      "value": "0x1"
    },
    "2655": {
      "fn": "HettiPool.deposit",
      "offset": [
        5294,
        5308
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2656": {
      "fn": "HettiPool.deposit",
      "offset": [
        5294,
        5308
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2657": {
      "fn": "HettiPool.deposit",
      "offset": [
        5294,
        5308
      ],
      "op": "ADD",
      "path": "5"
    },
    "2658": {
      "offset": [
        1868,
        1870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "2660": {
      "fn": "HettiPool.deposit",
      "offset": [
        5348,
        5387
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2661": {
      "fn": "HettiPool.deposit",
      "offset": [
        5348,
        5387
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2662": {
      "fn": "HettiPool.deposit",
      "offset": [
        5348,
        5387
      ],
      "op": "SHL",
      "path": "5"
    },
    "2663": {
      "fn": "HettiPool.deposit",
      "offset": [
        5347,
        5403
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2664": {
      "fn": "HettiPool.deposit",
      "offset": [
        5347,
        5403
      ],
      "op": "OR",
      "path": "5"
    },
    "2665": {
      "offset": [
        1958,
        1960
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2667": {
      "fn": "HettiPool.deposit",
      "offset": [
        5427,
        5460
      ],
      "op": "SHL",
      "path": "5",
      "statement": 24
    },
    "2668": {
      "fn": "HettiPool.deposit",
      "offset": [
        5426,
        5472
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2669": {
      "fn": "HettiPool.deposit",
      "offset": [
        5426,
        5472
      ],
      "op": "OR",
      "path": "5"
    },
    "2670": {
      "fn": "HettiPool.deposit",
      "offset": [
        5482,
        5501
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 25
    },
    "2671": {
      "fn": "HettiPool.deposit",
      "offset": [
        5482,
        5501
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2672": {
      "fn": "HettiPool.deposit",
      "offset": [
        5482,
        5501
      ],
      "op": "ADD",
      "path": "5"
    },
    "2673": {
      "fn": "HettiPool.deposit",
      "offset": [
        5482,
        5514
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2674": {
      "fn": "HettiPool.deposit",
      "offset": [
        5482,
        5514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2675": {
      "fn": "HettiPool.deposit",
      "offset": [
        5482,
        5514
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2676": {
      "fn": "HettiPool.deposit",
      "offset": [
        5294,
        5308
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2677": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2679": {
      "fn": "HettiPool.deposit",
      "offset": [
        5579,
        5615
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2680": {
      "branch": 67,
      "fn": "HettiPool.deposit",
      "offset": [
        5579,
        5615
      ],
      "op": "LT",
      "path": "5"
    },
    "2681": {
      "fn": "HettiPool.deposit",
      "offset": [
        5575,
        5796
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB0"
    },
    "2684": {
      "branch": 67,
      "fn": "HettiPool.deposit",
      "offset": [
        5575,
        5796
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2685": {
      "fn": "HettiPool.deposit",
      "offset": [
        5647,
        5687
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0xA86"
    },
    "2688": {
      "fn": "HettiPool.deposit",
      "offset": [
        5656,
        5675
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2689": {
      "fn": "HettiPool.deposit",
      "offset": [
        5677,
        5686
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2690": {
      "fn": "HettiPool.deposit",
      "offset": [
        5647,
        5655
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A7"
    },
    "2693": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        5647,
        5687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2694": {
      "fn": "HettiPool.deposit",
      "offset": [
        5647,
        5687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2695": {
      "fn": "HettiPool.deposit",
      "offset": [
        5631,
        5644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2697": {
      "fn": "HettiPool.deposit",
      "offset": [
        5631,
        5644
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2698": {
      "fn": "HettiPool.deposit",
      "offset": [
        5631,
        5644
      ],
      "op": "ADD",
      "path": "5"
    },
    "2699": {
      "fn": "HettiPool.deposit",
      "offset": [
        5631,
        5687
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2700": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 27,
      "value": "0x0"
    },
    "2702": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2703": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2704": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2705": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5759
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "2707": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2709": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2710": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2712": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2713": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2714": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2715": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2716": {
      "fn": "HettiPool.deposit",
      "offset": [
        5784,
        5785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2718": {
      "fn": "HettiPool.deposit",
      "offset": [
        5784,
        5785
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2719": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5780
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2720": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAA"
    },
    "2723": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2724": {
      "fn": "HettiPool.deposit",
      "offset": [
        5784,
        5785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2725": {
      "fn": "HettiPool.deposit",
      "offset": [
        5784,
        5785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2726": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1733"
    },
    "2729": {
      "fn": "HettiPool.deposit",
      "jump": "i",
      "offset": [
        5748,
        5785
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2730": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2731": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2732": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2733": {
      "fn": "HettiPool.deposit",
      "offset": [
        5748,
        5785
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "HettiPool.deposit",
      "offset": [
        5575,
        5796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2737": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0x40"
    },
    "2739": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2740": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2741": {
      "fn": "HettiPool.deposit",
      "offset": [
        5821,
        5831
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "MSTORE"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2746": {
      "op": "DUP2"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "op": "DUP10"
    },
    "2749": {
      "op": "SWAP1"
    },
    "2750": {
      "op": "MSTORE"
    },
    "2751": {
      "op": "SWAP1"
    },
    "2752": {
      "op": "DUP2"
    },
    "2753": {
      "op": "ADD"
    },
    "2754": {
      "op": "DUP8"
    },
    "2755": {
      "op": "SWAP1"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA"
    },
    "2790": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2793": {
      "op": "ADD"
    },
    "2794": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2796": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2797": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2798": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2799": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "SUB",
      "path": "5"
    },
    "2800": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2801": {
      "fn": "HettiPool.deposit",
      "offset": [
        5811,
        5864
      ],
      "op": "LOG1",
      "path": "5"
    },
    "2802": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2803": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2804": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2805": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2806": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2807": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2808": {
      "fn": "HettiPool.deposit",
      "offset": [
        4105,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2809": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2810": {
      "fn": "HettiPool.deposit",
      "offset": [
        4037,
        5871
      ],
      "op": "POP",
      "path": "5"
    },
    "2811": {
      "fn": "HettiPool.deposit",
      "jump": "o",
      "offset": [
        4037,
        5871
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2812": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2813": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        13992,
        13999
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2815": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 29,
      "value": "0xB07"
    },
    "2818": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14027,
        14038
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2819": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14015,
        14026
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1022"
    },
    "2822": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "i",
      "offset": [
        14015,
        14039
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2823": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14015,
        14039
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2824": {
      "op": "POP"
    },
    "2825": {
      "op": "POP"
    },
    "2826": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 30,
      "value": "0x0"
    },
    "2828": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2829": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2830": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2831": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "2833": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2835": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2836": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2838": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2839": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2840": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2841": {
      "fn": "HettiPool.getCurrentRingIndex",
      "offset": [
        14056,
        14080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2842": {
      "fn": "HettiPool.getCurrentRingIndex",
      "jump": "o",
      "offset": [
        13913,
        14087
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2843": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2844": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11028,
        11032
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2846": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11073,
        11078
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 31,
      "value": "0x2710"
    },
    "2849": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11062,
        11069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2851": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11062,
        11069
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2852": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11052,
        11059
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2853": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11052,
        11069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2E"
    },
    "2856": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11052,
        11069
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2857": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11052,
        11069
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2858": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11052,
        11069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x174B"
    },
    "2861": {
      "fn": "HettiPool.getLoanFee",
      "jump": "i",
      "offset": [
        11052,
        11069
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2862": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11052,
        11069
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2863": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11051,
        11078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB38"
    },
    "2866": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11051,
        11078
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2867": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11051,
        11078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2868": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11051,
        11078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x176A"
    },
    "2871": {
      "fn": "HettiPool.getLoanFee",
      "jump": "i",
      "offset": [
        11051,
        11078
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2872": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11051,
        11078
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2873": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        11044,
        11078
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2874": {
      "fn": "HettiPool.getLoanFee",
      "offset": [
        10978,
        11085
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "op": "POP"
    },
    "2877": {
      "fn": "HettiPool.getLoanFee",
      "jump": "o",
      "offset": [
        10978,
        11085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2878": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2879": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9475,
        9482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2881": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9498,
        9519
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2882": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9522,
        9547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4A"
    },
    "2885": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9534,
        9546
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2886": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9522,
        9533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1022"
    },
    "2889": {
      "fn": "HettiPool.getRingHash",
      "jump": "i",
      "offset": [
        9522,
        9547
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2890": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9522,
        9547
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2891": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 32,
      "value": "0x0"
    },
    "2893": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2894": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2895": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2896": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "2898": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2900": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2901": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2902": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2903": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2905": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2906": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2907": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9584
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2908": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2909": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2910": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2911": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2912": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2913": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2914": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2915": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9596
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2916": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9605
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2918": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9605
      ],
      "op": "ADD",
      "path": "5"
    },
    "2919": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9605
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2920": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9564,
        9605
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2924": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2925": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "POP",
      "path": "5"
    },
    "2926": {
      "fn": "HettiPool.getRingHash",
      "offset": [
        9383,
        9612
      ],
      "op": "POP",
      "path": "5"
    },
    "2927": {
      "fn": "HettiPool.getRingHash",
      "jump": "o",
      "offset": [
        9383,
        9612
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2928": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2929": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9726,
        9733
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2931": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9758,
        9763
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 33
    },
    "2932": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9758,
        9763
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2933": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2935": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2936": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2945": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2946": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9783,
        9787
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "2947": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2949": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2950": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "ADD",
      "path": "5"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "op": "SUB"
    },
    "2960": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9758,
        9763
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2961": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9758,
        9763
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2962": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9758,
        9763
      ],
      "op": "AND",
      "path": "5"
    },
    "2963": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9758,
        9763
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2964": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9774
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "2969": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2972": {
      "op": "ADD"
    },
    "2973": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2975": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2977": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2978": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2979": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2980": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "SUB",
      "path": "5"
    },
    "2981": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2982": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2983": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "GAS",
      "path": "5"
    },
    "2984": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2985": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2986": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2987": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2988": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB9"
    },
    "2991": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2992": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2993": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2995": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2996": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2997": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2998": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3000": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3001": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3002": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "POP",
      "path": "5"
    },
    "3003": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "POP",
      "path": "5"
    },
    "3004": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "POP",
      "path": "5"
    },
    "3005": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "POP",
      "path": "5"
    },
    "3006": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3008": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3009": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3010": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3012": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "NOT",
      "path": "5"
    },
    "3013": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3015": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3016": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "ADD",
      "path": "5"
    },
    "3017": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "AND",
      "path": "5"
    },
    "3018": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3019": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "ADD",
      "path": "5"
    },
    "3020": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3021": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3023": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3024": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "POP",
      "path": "5"
    },
    "3025": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3026": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "ADD",
      "path": "5"
    },
    "3027": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3028": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBDD"
    },
    "3031": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3032": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3033": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x178C"
    },
    "3036": {
      "fn": "HettiPool.getPoolBalance",
      "jump": "i",
      "offset": [
        9752,
        9789
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3037": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9752,
        9789
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3038": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9745,
        9789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3039": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9745,
        9789
      ],
      "op": "POP",
      "path": "5"
    },
    "3040": {
      "fn": "HettiPool.getPoolBalance",
      "offset": [
        9679,
        9796
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3041": {
      "fn": "HettiPool.getPoolBalance",
      "jump": "o",
      "offset": [
        9679,
        9796
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3042": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3043": {
      "fn": "HettiPool.execute",
      "offset": [
        10416,
        10435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3045": {
      "fn": "HettiPool.execute",
      "offset": [
        10438,
        10454
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEC"
    },
    "3048": {
      "fn": "HettiPool.execute",
      "offset": [
        10438,
        10452
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB70"
    },
    "3051": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10438,
        10454
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3052": {
      "fn": "HettiPool.execute",
      "offset": [
        10438,
        10454
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3053": {
      "fn": "HettiPool.execute",
      "offset": [
        10416,
        10454
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3054": {
      "fn": "HettiPool.execute",
      "offset": [
        10416,
        10454
      ],
      "op": "POP",
      "path": "5"
    },
    "3055": {
      "fn": "HettiPool.execute",
      "offset": [
        10482,
        10488
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3056": {
      "fn": "HettiPool.execute",
      "offset": [
        10468,
        10479
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3057": {
      "branch": 68,
      "fn": "HettiPool.execute",
      "offset": [
        10468,
        10488
      ],
      "op": "LT",
      "path": "5"
    },
    "3058": {
      "fn": "HettiPool.execute",
      "offset": [
        10465,
        10543
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3059": {
      "fn": "HettiPool.execute",
      "offset": [
        10465,
        10543
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC33"
    },
    "3062": {
      "branch": 68,
      "fn": "HettiPool.execute",
      "offset": [
        10465,
        10543
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3063": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x40"
    },
    "3065": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3074": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3077": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3079": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3080": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "ADD",
      "path": "5"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH18",
      "value": "0x494E53554646494349454E545F46554E4453"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3113": {
      "op": "DUP3"
    },
    "3114": {
      "op": "ADD"
    },
    "3115": {
      "op": "MSTORE"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "fn": "HettiPool.execute",
      "offset": [
        10504,
        10532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "3122": {
      "op": "JUMP"
    },
    "3123": {
      "fn": "HettiPool.execute",
      "offset": [
        10465,
        10543
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3124": {
      "fn": "HettiPool.execute",
      "offset": [
        10553,
        10564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3126": {
      "fn": "HettiPool.execute",
      "offset": [
        10567,
        10585
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3E"
    },
    "3129": {
      "fn": "HettiPool.execute",
      "offset": [
        10578,
        10584
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3130": {
      "fn": "HettiPool.execute",
      "offset": [
        10567,
        10577
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB1B"
    },
    "3133": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10567,
        10585
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3134": {
      "fn": "HettiPool.execute",
      "offset": [
        10567,
        10585
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3135": {
      "fn": "HettiPool.execute",
      "offset": [
        10553,
        10585
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3136": {
      "fn": "HettiPool.execute",
      "offset": [
        10553,
        10585
      ],
      "op": "POP",
      "path": "5"
    },
    "3137": {
      "fn": "HettiPool.execute",
      "offset": [
        10611,
        10619
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 35
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "AND",
      "path": "5"
    },
    "3147": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8852F4CB22828DA9DDC44460130398D816E46FD1F370D80D82A4DE81FCD5AEEE"
    },
    "3180": {
      "fn": "HettiPool.execute",
      "offset": [
        10621,
        10627
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3181": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3183": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3184": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7B"
    },
    "3187": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3188": {
      "op": "DUP2"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3192": {
      "op": "ADD"
    },
    "3193": {
      "op": "SWAP1"
    },
    "3194": {
      "op": "JUMP"
    },
    "3195": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3196": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3198": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3199": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3200": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3201": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "SUB",
      "path": "5"
    },
    "3202": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3203": {
      "fn": "HettiPool.execute",
      "offset": [
        10601,
        10628
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3204": {
      "fn": "HettiPool.execute",
      "offset": [
        10639,
        10644
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 36,
      "value": "0x0"
    },
    "3206": {
      "fn": "HettiPool.execute",
      "offset": [
        10639,
        10644
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3207": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3209": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3210": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3219": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "op": "SUB"
    },
    "3228": {
      "op": "DUP9"
    },
    "3229": {
      "op": "DUP2"
    },
    "3230": {
      "op": "AND"
    },
    "3231": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3233": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3234": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3238": {
      "op": "DUP3"
    },
    "3239": {
      "op": "ADD"
    },
    "3240": {
      "op": "DUP9"
    },
    "3241": {
      "op": "SWAP1"
    },
    "3242": {
      "op": "MSTORE"
    },
    "3243": {
      "fn": "HettiPool.execute",
      "offset": [
        10639,
        10644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3244": {
      "fn": "HettiPool.execute",
      "offset": [
        10639,
        10644
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3245": {
      "fn": "HettiPool.execute",
      "offset": [
        10639,
        10644
      ],
      "op": "AND",
      "path": "5"
    },
    "3246": {
      "fn": "HettiPool.execute",
      "offset": [
        10639,
        10644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3247": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10654
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "3252": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3258": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3260": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3261": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3262": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3263": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "SUB",
      "path": "5"
    },
    "3264": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3265": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3267": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3268": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "GAS",
      "path": "5"
    },
    "3269": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "CALL",
      "path": "5"
    },
    "3270": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3271": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3272": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3273": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD6"
    },
    "3276": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3277": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3278": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3280": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3281": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3282": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3283": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3285": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3286": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3287": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3288": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3289": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3290": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3291": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3293": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3294": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3295": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3297": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "NOT",
      "path": "5"
    },
    "3298": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3300": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3301": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3302": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "AND",
      "path": "5"
    },
    "3303": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3304": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3305": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3306": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3308": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3309": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "POP",
      "path": "5"
    },
    "3310": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3311": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "ADD",
      "path": "5"
    },
    "3312": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3313": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCFA"
    },
    "3316": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3317": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3318": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1711"
    },
    "3321": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10633,
        10681
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3322": {
      "fn": "HettiPool.execute",
      "offset": [
        10633,
        10681
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3323": {
      "op": "POP"
    },
    "3324": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 37,
      "value": "0x40"
    },
    "3326": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3327": {
      "op": "PUSH4",
      "value": "0x7924FD7D"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3336": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "SUB"
    },
    "3345": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10705
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3346": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10705
      ],
      "op": "AND",
      "path": "5"
    },
    "3347": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10705
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3348": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10705
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7924FD7D"
    },
    "3353": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10705
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3354": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2D"
    },
    "3357": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3358": {
      "fn": "HettiPool.execute",
      "offset": [
        10706,
        10712
      ],
      "op": "DUP9",
      "path": "5"
    },
    "3359": {
      "fn": "HettiPool.execute",
      "offset": [
        10706,
        10712
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3360": {
      "fn": "HettiPool.execute",
      "offset": [
        10714,
        10717
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3361": {
      "fn": "HettiPool.execute",
      "offset": [
        10714,
        10717
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3362": {
      "fn": "HettiPool.execute",
      "offset": [
        10719,
        10723
      ],
      "op": "DUP10",
      "path": "5"
    },
    "3363": {
      "fn": "HettiPool.execute",
      "offset": [
        10719,
        10723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3364": {
      "fn": "HettiPool.execute",
      "offset": [
        10719,
        10723
      ],
      "op": "DUP10",
      "path": "5"
    },
    "3365": {
      "fn": "HettiPool.execute",
      "offset": [
        10719,
        10723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3366": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3368": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "ADD",
      "path": "5"
    },
    "3369": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A5"
    },
    "3372": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10685,
        10724
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3373": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3374": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3376": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3378": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3379": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3380": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3381": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "SUB",
      "path": "5"
    },
    "3382": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3383": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3385": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3386": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3387": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3388": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3389": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3390": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3391": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD47"
    },
    "3394": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3395": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3397": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3398": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3399": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3400": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "POP",
      "path": "5"
    },
    "3401": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "GAS",
      "path": "5"
    },
    "3402": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "CALL",
      "path": "5"
    },
    "3403": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3404": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3405": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3406": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5B"
    },
    "3409": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3410": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3411": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3413": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3414": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3415": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3416": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3418": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3419": {
      "fn": "HettiPool.execute",
      "offset": [
        10685,
        10724
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "op": "POP"
    },
    "3422": {
      "fn": "HettiPool.execute",
      "offset": [
        10759,
        10764
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3424": {
      "fn": "HettiPool.execute",
      "offset": [
        10759,
        10764
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3425": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3427": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3428": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3437": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3438": {
      "fn": "HettiPool.execute",
      "offset": [
        10784,
        10788
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "3439": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3441": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3442": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "ADD",
      "path": "5"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3450": {
      "op": "SHL"
    },
    "3451": {
      "op": "SUB"
    },
    "3452": {
      "fn": "HettiPool.execute",
      "offset": [
        10759,
        10764
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3453": {
      "fn": "HettiPool.execute",
      "offset": [
        10759,
        10764
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3454": {
      "fn": "HettiPool.execute",
      "offset": [
        10759,
        10764
      ],
      "op": "AND",
      "path": "5"
    },
    "3455": {
      "fn": "HettiPool.execute",
      "offset": [
        10759,
        10764
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10775
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "3462": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10775
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3466": {
      "op": "ADD"
    },
    "3467": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3469": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3471": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3472": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3473": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3474": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "SUB",
      "path": "5"
    },
    "3475": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3476": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3477": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "GAS",
      "path": "5"
    },
    "3478": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "3479": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3480": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3481": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3482": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA7"
    },
    "3485": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3486": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3487": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3489": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3490": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3491": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3492": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3494": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3495": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3496": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "POP",
      "path": "5"
    },
    "3497": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "POP",
      "path": "5"
    },
    "3498": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "POP",
      "path": "5"
    },
    "3499": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "POP",
      "path": "5"
    },
    "3500": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3502": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3503": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3504": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3506": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "NOT",
      "path": "5"
    },
    "3507": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3509": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3510": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "ADD",
      "path": "5"
    },
    "3511": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "AND",
      "path": "5"
    },
    "3512": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3513": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "ADD",
      "path": "5"
    },
    "3514": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3515": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3517": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3518": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "POP",
      "path": "5"
    },
    "3519": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3520": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "ADD",
      "path": "5"
    },
    "3521": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3522": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDCB"
    },
    "3525": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3526": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3527": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x178C"
    },
    "3530": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10753,
        10790
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3531": {
      "fn": "HettiPool.execute",
      "offset": [
        10753,
        10790
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3532": {
      "fn": "HettiPool.execute",
      "offset": [
        10733,
        10750
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD5"
    },
    "3535": {
      "fn": "HettiPool.execute",
      "offset": [
        10747,
        10750
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3536": {
      "fn": "HettiPool.execute",
      "offset": [
        10733,
        10744
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3537": {
      "fn": "HettiPool.execute",
      "offset": [
        10733,
        10750
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1733"
    },
    "3540": {
      "fn": "HettiPool.execute",
      "jump": "i",
      "offset": [
        10733,
        10750
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3541": {
      "fn": "HettiPool.execute",
      "offset": [
        10733,
        10750
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3542": {
      "branch": 69,
      "fn": "HettiPool.execute",
      "offset": [
        10733,
        10790
      ],
      "op": "GT",
      "path": "5"
    },
    "3543": {
      "fn": "HettiPool.execute",
      "offset": [
        10729,
        10845
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3544": {
      "fn": "HettiPool.execute",
      "offset": [
        10729,
        10845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE19"
    },
    "3547": {
      "branch": 69,
      "fn": "HettiPool.execute",
      "offset": [
        10729,
        10845
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3548": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 38,
      "value": "0x40"
    },
    "3550": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3559": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3562": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3564": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3565": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "ADD",
      "path": "5"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "MSTORE"
    },
    "3574": {
      "op": "PUSH19",
      "value": "0x1513D2D15394D7D393D517D491551554939151"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3599": {
      "op": "DUP3"
    },
    "3600": {
      "op": "ADD"
    },
    "3601": {
      "op": "MSTORE"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "fn": "HettiPool.execute",
      "offset": [
        10805,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "3608": {
      "op": "JUMP"
    },
    "3609": {
      "fn": "HettiPool.execute",
      "offset": [
        10729,
        10845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3610": {
      "fn": "HettiPool.execute",
      "offset": [
        10406,
        10848
      ],
      "op": "POP",
      "path": "5"
    },
    "3611": {
      "fn": "HettiPool.execute",
      "offset": [
        10406,
        10848
      ],
      "op": "POP",
      "path": "5"
    },
    "3612": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "POP",
      "path": "5"
    },
    "3613": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "POP",
      "path": "5"
    },
    "3614": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "POP",
      "path": "5"
    },
    "3615": {
      "fn": "HettiPool.execute",
      "offset": [
        10304,
        10848
      ],
      "op": "POP",
      "path": "5"
    },
    "3616": {
      "fn": "HettiPool.execute",
      "jump": "o",
      "offset": [
        10304,
        10848
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3617": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3618": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12750,
        12757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3620": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12750,
        12757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3621": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12750,
        12757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3622": {
      "offset": [
        1958,
        1960
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3624": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12798,
        12831
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3625": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12798,
        12831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3626": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12798,
        12831
      ],
      "op": "SHR",
      "path": "5"
    },
    "3627": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12871,
        12898
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x30"
    },
    "3629": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12871,
        12898
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3630": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12871,
        12898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3631": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12871,
        12898
      ],
      "op": "SHR",
      "path": "5"
    },
    "3632": {
      "offset": [
        2051,
        2083
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE3D"
    },
    "3635": {
      "offset": [
        2082,
        2083
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3637": {
      "offset": [
        2052,
        2079
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x10000"
    },
    "3641": {
      "offset": [
        2051,
        2083
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B0"
    },
    "3644": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        2051,
        2083
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3645": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        2051,
        2083
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3646": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12912,
        12937
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3647": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12912,
        12937
      ],
      "op": "AND",
      "path": "5"
    },
    "3648": {
      "offset": [
        2162,
        2191
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE4F"
    },
    "3651": {
      "offset": [
        2190,
        2191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3653": {
      "offset": [
        2163,
        2187
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "3659": {
      "offset": [
        2162,
        2191
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B0"
    },
    "3662": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "i",
      "offset": [
        2162,
        2191
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3663": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        2162,
        2191
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3664": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12951,
        12961
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3665": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12951,
        12982
      ],
      "op": "AND",
      "path": "5"
    },
    "3666": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3667": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "POP",
      "path": "5"
    },
    "3668": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3669": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "POP",
      "path": "5"
    },
    "3670": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3671": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "POP",
      "path": "5"
    },
    "3672": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12850,
        12992
      ],
      "op": "POP",
      "path": "5"
    },
    "3673": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3674": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3675": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3676": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3677": {
      "fn": "HettiPool.getRingPackedData",
      "offset": [
        12685,
        12999
      ],
      "op": "POP",
      "path": "5"
    },
    "3678": {
      "fn": "HettiPool.getRingPackedData",
      "jump": "o",
      "offset": [
        12685,
        12999
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3679": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3680": {
      "fn": "HettiPool.initialize",
      "offset": [
        3549,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 40,
      "value": "0x0"
    },
    "3682": {
      "fn": "HettiPool.initialize",
      "offset": [
        3532,
        3537
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3689": {
      "op": "SHL"
    },
    "3690": {
      "op": "SUB"
    },
    "3691": {
      "fn": "HettiPool.initialize",
      "offset": [
        3532,
        3537
      ],
      "op": "AND",
      "path": "5"
    },
    "3692": {
      "branch": 70,
      "fn": "HettiPool.initialize",
      "offset": [
        3532,
        3551
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3693": {
      "fn": "HettiPool.initialize",
      "offset": [
        3528,
        3580
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE88"
    },
    "3696": {
      "branch": 70,
      "fn": "HettiPool.initialize",
      "offset": [
        3528,
        3580
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3697": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3699": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3700": {
      "op": "PUSH3",
      "value": "0xDC149F"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3706": {
      "op": "SHL"
    },
    "3707": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3708": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3709": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3711": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "ADD",
      "path": "5"
    },
    "3712": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3714": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3715": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3716": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3717": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "SUB",
      "path": "5"
    },
    "3718": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3719": {
      "fn": "HettiPool.initialize",
      "offset": [
        3560,
        3580
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3720": {
      "fn": "HettiPool.initialize",
      "offset": [
        3528,
        3580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3721": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3595
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 41,
      "value": "0x0"
    },
    "3723": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3724": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "op": "SUB"
    },
    "3733": {
      "op": "NOT"
    },
    "3734": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "AND",
      "path": "5"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "SUB"
    },
    "3743": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3744": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "AND",
      "path": "5"
    },
    "3745": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3746": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3747": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "OR",
      "path": "5"
    },
    "3748": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3749": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3750": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3751": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 42,
      "value": "0x40"
    },
    "3753": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3754": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3755": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3764": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3765": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3766": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3767": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3652
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "3772": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3652
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3773": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3775": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3776": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3777": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ADD",
      "path": "5"
    },
    "3778": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3779": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3781": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3782": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3783": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3784": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3785": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3786": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3787": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SUB",
      "path": "5"
    },
    "3788": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ADD",
      "path": "5"
    },
    "3789": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3790": {
      "fn": "HettiPool.initialize",
      "offset": [
        3590,
        3604
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3791": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "GAS",
      "path": "5"
    },
    "3792": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "3793": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3794": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3795": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3796": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE1"
    },
    "3799": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3800": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3801": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3803": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3804": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3805": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3806": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3808": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3809": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3810": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "POP",
      "path": "5"
    },
    "3811": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "POP",
      "path": "5"
    },
    "3812": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "POP",
      "path": "5"
    },
    "3813": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "POP",
      "path": "5"
    },
    "3814": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3816": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3817": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3818": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3820": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "NOT",
      "path": "5"
    },
    "3821": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3823": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3824": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ADD",
      "path": "5"
    },
    "3825": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "AND",
      "path": "5"
    },
    "3826": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3827": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ADD",
      "path": "5"
    },
    "3828": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3829": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3831": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3832": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "POP",
      "path": "5"
    },
    "3833": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3834": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "ADD",
      "path": "5"
    },
    "3835": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3836": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF05"
    },
    "3839": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3840": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3841": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17E2"
    },
    "3844": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3630,
        3654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3845": {
      "fn": "HettiPool.initialize",
      "offset": [
        3630,
        3654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3846": {
      "fn": "HettiPool.initialize",
      "offset": [
        3614,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3848": {
      "fn": "HettiPool.initialize",
      "offset": [
        3614,
        3654
      ],
      "op": "AND",
      "path": "5"
    },
    "3849": {
      "fn": "HettiPool.initialize",
      "offset": [
        3614,
        3627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3851": {
      "fn": "HettiPool.initialize",
      "offset": [
        3614,
        3654
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3852": {
      "fn": "HettiPool.initialize",
      "offset": [
        3669,
        3678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3854": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3855": {
      "fn": "HettiPool.initialize",
      "offset": [
        3688,
        3709
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3857": {
      "fn": "HettiPool.initialize",
      "offset": [
        3684,
        3685
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3858": {
      "fn": "HettiPool.initialize",
      "offset": [
        3684,
        3709
      ],
      "op": "LT",
      "path": "5"
    },
    "3859": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3860": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF57"
    },
    "3863": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3864": {
      "fn": "HettiPool.initialize",
      "offset": [
        3765,
        3778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0x1"
    },
    "3866": {
      "fn": "HettiPool.initialize",
      "offset": [
        3765,
        3778
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3867": {
      "fn": "HettiPool.initialize",
      "offset": [
        3759,
        3778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF25"
    },
    "3870": {
      "fn": "HettiPool.initialize",
      "offset": [
        3759,
        3778
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3871": {
      "fn": "HettiPool.initialize",
      "offset": [
        3759,
        3761
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3873": {
      "fn": "HettiPool.initialize",
      "offset": [
        3759,
        3778
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E9"
    },
    "3876": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3759,
        3778
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3877": {
      "fn": "HettiPool.initialize",
      "offset": [
        3759,
        3778
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3878": {
      "fn": "HettiPool.initialize",
      "offset": [
        3748,
        3754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF30"
    },
    "3881": {
      "fn": "HettiPool.initialize",
      "offset": [
        3753,
        3754
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3882": {
      "fn": "HettiPool.initialize",
      "offset": [
        3748,
        3749
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3884": {
      "fn": "HettiPool.initialize",
      "offset": [
        3748,
        3754
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E9"
    },
    "3887": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3748,
        3754
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3888": {
      "fn": "HettiPool.initialize",
      "offset": [
        3748,
        3754
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3889": {
      "fn": "HettiPool.initialize",
      "offset": [
        3747,
        3779
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3A"
    },
    "3892": {
      "fn": "HettiPool.initialize",
      "offset": [
        3747,
        3779
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3893": {
      "fn": "HettiPool.initialize",
      "offset": [
        3747,
        3779
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3894": {
      "fn": "HettiPool.initialize",
      "offset": [
        3747,
        3779
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x174B"
    },
    "3897": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3747,
        3779
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3898": {
      "fn": "HettiPool.initialize",
      "offset": [
        3747,
        3779
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3899": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3741
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3901": {
      "fn": "HettiPool.initialize",
      "offset": [
        3742,
        3743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3902": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3904": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3905": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "LT",
      "path": "5"
    },
    "3906": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF4D"
    },
    "3909": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3910": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF4D"
    },
    "3913": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "3916": {
      "fn": "HettiPool.initialize",
      "jump": "i",
      "offset": [
        3727,
        3744
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3917": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3918": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3744
      ],
      "op": "ADD",
      "path": "5"
    },
    "3919": {
      "fn": "HettiPool.initialize",
      "offset": [
        3727,
        3779
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3920": {
      "fn": "HettiPool.initialize",
      "offset": [
        3822,
        3825
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 44,
      "value": "0x1"
    },
    "3922": {
      "fn": "HettiPool.initialize",
      "offset": [
        3822,
        3825
      ],
      "op": "ADD",
      "path": "5"
    },
    "3923": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF0E"
    },
    "3926": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3927": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3928": {
      "fn": "HettiPool.initialize",
      "offset": [
        3665,
        3850
      ],
      "op": "POP",
      "path": "5"
    },
    "3929": {
      "fn": "HettiPool.initialize",
      "offset": [
        3475,
        3856
      ],
      "op": "POP",
      "path": "5"
    },
    "3930": {
      "fn": "HettiPool.initialize",
      "jump": "o",
      "offset": [
        3475,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3931": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3932": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12160,
        12199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF63"
    },
    "3935": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12160,
        12199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1205"
    },
    "3938": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12160,
        12199
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3939": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12160,
        12199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3940": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12215,
        12239
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 45,
      "value": "0xF6C"
    },
    "3943": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12227,
        12238
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3944": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12215,
        12226
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1022"
    },
    "3947": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12215,
        12239
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3948": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12215,
        12239
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3949": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12215,
        12239
      ],
      "op": "POP",
      "path": "5"
    },
    "3950": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12250,
        12300
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF75"
    },
    "3953": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12250,
        12300
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1205"
    },
    "3956": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12250,
        12300
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3957": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12250,
        12300
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3958": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12316,
        12322
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3960": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3961": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3963": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12328,
        12329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3964": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12328,
        12352
      ],
      "op": "LT",
      "path": "5"
    },
    "3965": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3966": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x101A"
    },
    "3969": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3970": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 46,
      "value": "0x0"
    },
    "3972": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3973": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3974": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3975": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "3977": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3979": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3980": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3981": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3982": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3984": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3985": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3986": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12418
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3987": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3988": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3989": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3990": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3991": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3992": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3993": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3994": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12429
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3995": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3996": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3997": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3998": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4000": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12440
      ],
      "op": "ADD",
      "path": "5"
    },
    "4001": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4002": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4003": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4004": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4005": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4006": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12446
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4007": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12383
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4008": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12400,
        12443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4009": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4011": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4012": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "LT",
      "path": "5"
    },
    "4013": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB8"
    },
    "4016": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4017": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB8"
    },
    "4020": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "4023": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12373,
        12386
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4024": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4025": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4027": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4028": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4029": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "MUL",
      "path": "5"
    },
    "4030": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4031": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4032": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4033": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "ADD",
      "path": "5"
    },
    "4034": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12386
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4035": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12447
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4036": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12447
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4037": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12447
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4038": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12373,
        12447
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4039": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12387,
        12388
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4041": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "DUP7",
      "path": "5",
      "statement": 47
    },
    "4042": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4043": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4044": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12493
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "4046": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4047": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4048": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4050": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4051": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4052": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12506
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4053": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4054": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4055": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4056": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4057": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4058": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4059": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4060": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12517
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4061": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4062": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4063": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4064": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4066": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12528
      ],
      "op": "ADD",
      "path": "5"
    },
    "4067": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4068": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4069": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4070": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4071": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12532,
        12533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4073": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12534
      ],
      "op": "ADD",
      "path": "5"
    },
    "4074": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12534
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4075": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12471
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4076": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12488,
        12531
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4077": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4079": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4080": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "LT",
      "path": "5"
    },
    "4081": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFC"
    },
    "4084": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4085": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFC"
    },
    "4088": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "4091": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12461,
        12474
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4092": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4093": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4095": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "MUL",
      "path": "5"
    },
    "4096": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "ADD",
      "path": "5"
    },
    "4097": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12474
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4098": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12475,
        12476
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4100": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12477
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4102": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12477
      ],
      "op": "MUL",
      "path": "5"
    },
    "4103": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12477
      ],
      "op": "ADD",
      "path": "5"
    },
    "4104": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12461,
        12535
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4105": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 48
    },
    "4106": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1012"
    },
    "4109": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4110": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F5"
    },
    "4113": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "i",
      "offset": [
        12354,
        12357
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4114": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4115": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4116": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "POP",
      "path": "5"
    },
    "4117": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12354,
        12357
      ],
      "op": "POP",
      "path": "5"
    },
    "4118": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF78"
    },
    "4121": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4122": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12311,
        12546
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12563,
        12573
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 49
    },
    "4125": {
      "fn": "HettiPool.getPublicKeys",
      "offset": [
        12068,
        12580
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "fn": "HettiPool.getPublicKeys",
      "jump": "o",
      "offset": [
        12068,
        12580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4130": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11378,
        11905
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4131": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11447,
        11454
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4133": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11447,
        11454
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4134": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11447,
        11454
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4135": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4136": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11525,
        11527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "4138": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11521,
        11522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4139": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11521,
        11527
      ],
      "op": "LT",
      "path": "5"
    },
    "4140": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4141": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x105D"
    },
    "4144": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4145": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11569,
        11576
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4146": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11562
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4148": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11563,
        11564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4149": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "4151": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4152": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "LT",
      "path": "5"
    },
    "4153": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1044"
    },
    "4156": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4157": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1044"
    },
    "4160": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "4163": {
      "fn": "HettiPool.amountCheck",
      "jump": "i",
      "offset": [
        11548,
        11565
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4164": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4165": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "ADD",
      "path": "5"
    },
    "4166": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11565
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4167": {
      "branch": 71,
      "fn": "HettiPool.amountCheck",
      "offset": [
        11548,
        11576
      ],
      "op": "SUB",
      "path": "5"
    },
    "4168": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11544,
        11625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1050"
    },
    "4171": {
      "branch": 71,
      "fn": "HettiPool.amountCheck",
      "offset": [
        11544,
        11625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4172": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11606,
        11610
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 50,
      "value": "0x1"
    },
    "4174": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11596,
        11610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4175": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11596,
        11610
      ],
      "op": "POP",
      "path": "5"
    },
    "4176": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11544,
        11625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4177": {
      "branch": 72,
      "fn": "HettiPool.amountCheck",
      "offset": [
        11642,
        11649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4178": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11669,
        11674
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0x105D"
    },
    "4181": {
      "branch": 72,
      "fn": "HettiPool.amountCheck",
      "offset": [
        11638,
        11689
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4182": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11731,
        11734
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 52,
      "value": "0x1"
    },
    "4184": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11731,
        11734
      ],
      "op": "ADD",
      "path": "5"
    },
    "4185": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1027"
    },
    "4188": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4189": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4190": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11501,
        11759
      ],
      "op": "POP",
      "path": "5"
    },
    "4191": {
      "branch": 73,
      "fn": "HettiPool.amountCheck",
      "offset": [
        11844,
        11851
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 53
    },
    "4192": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A0"
    },
    "4195": {
      "branch": 73,
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4196": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4198": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4205": {
      "op": "SHL"
    },
    "4206": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4207": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4210": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4212": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4213": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "ADD",
      "path": "5"
    },
    "4214": {
      "op": "MSTORE"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4219": {
      "op": "DUP3"
    },
    "4220": {
      "op": "ADD"
    },
    "4221": {
      "op": "MSTORE"
    },
    "4222": {
      "op": "PUSH18",
      "value": "0x105353D5539517D393D517D0531313D5D151"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4243": {
      "op": "SHL"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4246": {
      "op": "DUP3"
    },
    "4247": {
      "op": "ADD"
    },
    "4248": {
      "op": "MSTORE"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "4255": {
      "op": "JUMP"
    },
    "4256": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11836,
        11874
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11891,
        11898
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 54
    },
    "4259": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11891,
        11898
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4260": {
      "fn": "HettiPool.amountCheck",
      "offset": [
        11378,
        11905
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4261": {
      "op": "POP"
    },
    "4262": {
      "fn": "HettiPool.amountCheck",
      "jump": "o",
      "offset": [
        11378,
        11905
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4263": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8440,
        9225
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4264": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8531,
        8538
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4266": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8554,
        8604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B1"
    },
    "4269": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8554,
        8604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1232"
    },
    "4272": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        8554,
        8604
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4273": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8554,
        8604
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4274": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8614,
        8635
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4276": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8638,
        8663
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10BC"
    },
    "4279": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8650,
        8662
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4280": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8638,
        8649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1022"
    },
    "4283": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        8638,
        8663
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4284": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8638,
        8663
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4285": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8674,
        8691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4287": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4288": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4289": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4290": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8699
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "4292": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4294": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4295": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4296": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4297": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4299": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4300": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4301": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8714
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4302": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4303": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4304": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4305": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4306": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4307": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4308": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4309": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8694,
        8726
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4310": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8614,
        8663
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4311": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8614,
        8663
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4314": {
      "offset": [
        1297,
        1298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4316": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8755,
        8756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4317": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8755,
        8779
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4319": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8755,
        8779
      ],
      "op": "AND",
      "path": "5"
    },
    "4320": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8755,
        8779
      ],
      "op": "LT",
      "path": "5"
    },
    "4321": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4322": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1146"
    },
    "4325": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4326": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 55,
      "value": "0xFF"
    },
    "4328": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4329": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "AND",
      "path": "5"
    },
    "4330": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4332": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4333": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4334": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4335": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4337": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4338": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4339": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8827
      ],
      "op": "ADD",
      "path": "5"
    },
    "4340": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4342": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4343": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4345": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4346": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4347": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4348": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4349": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4350": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4351": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4352": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4353": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "ADD",
      "path": "5"
    },
    "4354": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4355": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4356": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4357": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4358": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4359": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4360": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4361": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4362": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8812,
        8830
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4363": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4364": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4365": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4366": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4367": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4368": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4369": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4371": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "ADD",
      "path": "5"
    },
    "4372": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4373": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4375": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "ADD",
      "path": "5"
    },
    "4376": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4377": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4378": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4379": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "GT",
      "path": "5"
    },
    "4380": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x110C"
    },
    "4383": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4384": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "POP",
      "path": "5"
    },
    "4385": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "POP",
      "path": "5"
    },
    "4386": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "POP",
      "path": "5"
    },
    "4387": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "POP",
      "path": "5"
    },
    "4388": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "POP",
      "path": "5"
    },
    "4389": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8806
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4390": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8807,
        8808
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4391": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4393": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "AND",
      "path": "5"
    },
    "4394": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4396": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4397": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "LT",
      "path": "5"
    },
    "4398": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1139"
    },
    "4401": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4402": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1139"
    },
    "4405": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "4408": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        8796,
        8809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4409": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4410": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4412": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "MUL",
      "path": "5"
    },
    "4413": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8809
      ],
      "op": "ADD",
      "path": "5"
    },
    "4414": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8796,
        8830
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4415": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8873,
        8876
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 56,
      "value": "0x1"
    },
    "4417": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8873,
        8876
      ],
      "op": "ADD",
      "path": "5"
    },
    "4418": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D9"
    },
    "4421": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4422": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4423": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8737,
        8901
      ],
      "op": "POP",
      "path": "5"
    },
    "4424": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8912,
        8929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4426": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8932,
        8945
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4427": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8949,
        8987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1157"
    },
    "4430": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8967,
        8971
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4431": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8967,
        8986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4433": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8967,
        8986
      ],
      "op": "ADD",
      "path": "5"
    },
    "4434": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8967,
        8986
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4435": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8949,
        8966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "4438": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        8949,
        8987
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4439": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8949,
        8987
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4440": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8911,
        8987
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4441": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8911,
        8987
      ],
      "op": "POP",
      "path": "5"
    },
    "4442": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8911,
        8987
      ],
      "op": "POP",
      "path": "5"
    },
    "4443": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8911,
        8987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4444": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8911,
        8987
      ],
      "op": "POP",
      "path": "5"
    },
    "4445": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8998,
        9012
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4447": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9070,
        9071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4449": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9055,
        9067
      ],
      "op": "NUMBER",
      "path": "5"
    },
    "4450": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9055,
        9071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x116B"
    },
    "4453": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9055,
        9071
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4454": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9055,
        9071
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4455": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9055,
        9071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B0"
    },
    "4458": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        9055,
        9071
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4459": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9055,
        9071
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4460": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9108,
        9128
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4461": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9108,
        9128
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4462": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4464": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4465": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1184"
    },
    "4468": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4469": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9045,
        9072
      ],
      "op": "BLOCKHASH",
      "path": "5"
    },
    "4470": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9045,
        9072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4471": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9086,
        9094
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4472": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9086,
        9094
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4473": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9142,
        9154
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4474": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9142,
        9154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4475": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9168,
        9178
      ],
      "op": "DUP12",
      "path": "5"
    },
    "4476": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9168,
        9178
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4477": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4479": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "ADD",
      "path": "5"
    },
    "4480": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x190E"
    },
    "4483": {
      "fn": "HettiPool.hashRing",
      "jump": "i",
      "offset": [
        9015,
        9188
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4484": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4485": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4487": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4488": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4489": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4490": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4491": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "SUB",
      "path": "5"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4494": {
      "op": "NOT"
    },
    "4495": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "ADD",
      "path": "5"
    },
    "4496": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4497": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4498": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4499": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4500": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4501": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 57
    },
    "4502": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4503": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9015,
        9188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4505": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4506": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4507": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "ADD",
      "path": "5"
    },
    "4508": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4509": {
      "fn": "HettiPool.hashRing",
      "offset": [
        9206,
        9218
      ],
      "op": "SWAP10",
      "path": "5"
    },
    "4510": {
      "fn": "HettiPool.hashRing",
      "offset": [
        8440,
        9225
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "4511": {
      "op": "POP"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "op": "POP"
    },
    "4514": {
      "op": "POP"
    },
    "4515": {
      "op": "POP"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "op": "POP"
    },
    "4520": {
      "fn": "HettiPool.hashRing",
      "jump": "o",
      "offset": [
        8440,
        9225
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4521": {
      "op": "JUMPDEST"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4524": {
      "op": "MLOAD"
    },
    "4525": {
      "op": "DUP1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4528": {
      "op": "ADD"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4531": {
      "op": "MSTORE"
    },
    "4532": {
      "op": "DUP1"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4535": {
      "op": "SWAP1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4538": {
      "op": "DUP3"
    },
    "4539": {
      "op": "MUL"
    },
    "4540": {
      "op": "DUP1"
    },
    "4541": {
      "op": "CALLDATASIZE"
    },
    "4542": {
      "op": "DUP4"
    },
    "4543": {
      "op": "CALLDATACOPY"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "SWAP2"
    },
    "4546": {
      "op": "SWAP3"
    },
    "4547": {
      "op": "SWAP2"
    },
    "4548": {
      "op": "POP"
    },
    "4549": {
      "op": "POP"
    },
    "4550": {
      "jump": "o",
      "op": "JUMP"
    },
    "4551": {
      "op": "JUMPDEST"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4555": {
      "op": "DUP2"
    },
    "4556": {
      "op": "ADD"
    },
    "4557": {
      "op": "SWAP3"
    },
    "4558": {
      "op": "DUP3"
    },
    "4559": {
      "op": "ISZERO"
    },
    "4560": {
      "op": "PUSH2",
      "value": "0x11F5"
    },
    "4563": {
      "op": "JUMPI"
    },
    "4564": {
      "op": "SWAP2"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4567": {
      "op": "MUL"
    },
    "4568": {
      "op": "DUP3"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "JUMPDEST"
    },
    "4571": {
      "op": "DUP3"
    },
    "4572": {
      "op": "DUP2"
    },
    "4573": {
      "op": "GT"
    },
    "4574": {
      "op": "ISZERO"
    },
    "4575": {
      "op": "PUSH2",
      "value": "0x11F5"
    },
    "4578": {
      "op": "JUMPI"
    },
    "4579": {
      "op": "DUP3"
    },
    "4580": {
      "op": "MLOAD"
    },
    "4581": {
      "op": "DUP3"
    },
    "4582": {
      "op": "SSTORE"
    },
    "4583": {
      "op": "SWAP2"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4586": {
      "op": "ADD"
    },
    "4587": {
      "op": "SWAP2"
    },
    "4588": {
      "op": "SWAP1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "SWAP1"
    },
    "4593": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4596": {
      "op": "JUMP"
    },
    "4597": {
      "op": "JUMPDEST"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "PUSH2",
      "value": "0x1201"
    },
    "4602": {
      "op": "SWAP3"
    },
    "4603": {
      "op": "SWAP2"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4608": {
      "jump": "i",
      "op": "JUMP"
    },
    "4609": {
      "op": "JUMPDEST"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "op": "SWAP1"
    },
    "4612": {
      "jump": "o",
      "op": "JUMP"
    },
    "4613": {
      "op": "JUMPDEST"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4616": {
      "op": "MLOAD"
    },
    "4617": {
      "op": "DUP1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4620": {
      "op": "ADD"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4623": {
      "op": "MSTORE"
    },
    "4624": {
      "op": "DUP1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4627": {
      "op": "SWAP1"
    },
    "4628": {
      "op": "JUMPDEST"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4632": {
      "op": "PUSH2",
      "value": "0x11A9"
    },
    "4635": {
      "jump": "i",
      "op": "JUMP"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "DUP2"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4641": {
      "op": "ADD"
    },
    "4642": {
      "op": "SWAP1"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4645": {
      "op": "SWAP1"
    },
    "4646": {
      "op": "SUB"
    },
    "4647": {
      "op": "SWAP1"
    },
    "4648": {
      "op": "DUP2"
    },
    "4649": {
      "op": "PUSH2",
      "value": "0x1214"
    },
    "4652": {
      "op": "JUMPI"
    },
    "4653": {
      "op": "SWAP1"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "op": "POP"
    },
    "4656": {
      "op": "SWAP1"
    },
    "4657": {
      "jump": "o",
      "op": "JUMP"
    },
    "4658": {
      "op": "JUMPDEST"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4661": {
      "op": "MLOAD"
    },
    "4662": {
      "op": "DUP1"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4668": {
      "op": "MSTORE"
    },
    "4669": {
      "op": "DUP1"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4672": {
      "op": "SWAP1"
    },
    "4673": {
      "op": "JUMPDEST"
    },
    "4674": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4677": {
      "op": "PUSH2",
      "value": "0x11A9"
    },
    "4680": {
      "jump": "i",
      "op": "JUMP"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "DUP2"
    },
    "4683": {
      "op": "MSTORE"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4686": {
      "op": "ADD"
    },
    "4687": {
      "op": "SWAP1"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4690": {
      "op": "SWAP1"
    },
    "4691": {
      "op": "SUB"
    },
    "4692": {
      "op": "SWAP1"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4697": {
      "op": "JUMPI"
    },
    "4698": {
      "op": "SWAP1"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "op": "POP"
    },
    "4701": {
      "op": "SWAP1"
    },
    "4702": {
      "jump": "o",
      "op": "JUMP"
    },
    "4703": {
      "op": "JUMPDEST"
    },
    "4704": {
      "op": "JUMPDEST"
    },
    "4705": {
      "op": "DUP1"
    },
    "4706": {
      "op": "DUP3"
    },
    "4707": {
      "op": "GT"
    },
    "4708": {
      "op": "ISZERO"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0x1201"
    },
    "4712": {
      "op": "JUMPI"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4715": {
      "op": "DUP2"
    },
    "4716": {
      "op": "SSTORE"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "ADD"
    },
    "4720": {
      "op": "PUSH2",
      "value": "0x1260"
    },
    "4723": {
      "op": "JUMP"
    },
    "4724": {
      "op": "JUMPDEST"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4729": {
      "op": "DUP3"
    },
    "4730": {
      "op": "DUP5"
    },
    "4731": {
      "op": "SUB"
    },
    "4732": {
      "op": "SLT"
    },
    "4733": {
      "op": "ISZERO"
    },
    "4734": {
      "op": "PUSH2",
      "value": "0x1286"
    },
    "4737": {
      "op": "JUMPI"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4740": {
      "op": "DUP1"
    },
    "4741": {
      "op": "REVERT"
    },
    "4742": {
      "op": "JUMPDEST"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "CALLDATALOAD"
    },
    "4745": {
      "op": "SWAP2"
    },
    "4746": {
      "op": "SWAP1"
    },
    "4747": {
      "op": "POP"
    },
    "4748": {
      "jump": "o",
      "op": "JUMP"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4756": {
      "op": "SHL"
    },
    "4757": {
      "op": "SUB"
    },
    "4758": {
      "op": "DUP2"
    },
    "4759": {
      "op": "AND"
    },
    "4760": {
      "op": "DUP2"
    },
    "4761": {
      "op": "EQ"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x12A2"
    },
    "4765": {
      "op": "JUMPI"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4768": {
      "op": "DUP1"
    },
    "4769": {
      "op": "REVERT"
    },
    "4770": {
      "op": "JUMPDEST"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "jump": "o",
      "op": "JUMP"
    },
    "4773": {
      "op": "JUMPDEST"
    },
    "4774": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4781": {
      "op": "SHL"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4784": {
      "op": "MSTORE"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4789": {
      "op": "MSTORE"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4794": {
      "op": "REVERT"
    },
    "4795": {
      "op": "JUMPDEST"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4798": {
      "op": "MLOAD"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4801": {
      "op": "DUP3"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4805": {
      "op": "NOT"
    },
    "4806": {
      "op": "AND"
    },
    "4807": {
      "op": "DUP2"
    },
    "4808": {
      "op": "ADD"
    },
    "4809": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4818": {
      "op": "DUP2"
    },
    "4819": {
      "op": "GT"
    },
    "4820": {
      "op": "DUP3"
    },
    "4821": {
      "op": "DUP3"
    },
    "4822": {
      "op": "LT"
    },
    "4823": {
      "op": "OR"
    },
    "4824": {
      "op": "ISZERO"
    },
    "4825": {
      "op": "PUSH2",
      "value": "0x12E4"
    },
    "4828": {
      "op": "JUMPI"
    },
    "4829": {
      "op": "PUSH2",
      "value": "0x12E4"
    },
    "4832": {
      "op": "PUSH2",
      "value": "0x12A5"
    },
    "4835": {
      "jump": "i",
      "op": "JUMP"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4839": {
      "op": "MSTORE"
    },
    "4840": {
      "op": "SWAP2"
    },
    "4841": {
      "op": "SWAP1"
    },
    "4842": {
      "op": "POP"
    },
    "4843": {
      "jump": "o",
      "op": "JUMP"
    },
    "4844": {
      "op": "JUMPDEST"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4847": {
      "op": "DUP3"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4850": {
      "op": "DUP4"
    },
    "4851": {
      "op": "ADD"
    },
    "4852": {
      "op": "SLT"
    },
    "4853": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4856": {
      "op": "JUMPI"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4859": {
      "op": "DUP1"
    },
    "4860": {
      "op": "REVERT"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4864": {
      "op": "MLOAD"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4867": {
      "op": "DUP2"
    },
    "4868": {
      "op": "ADD"
    },
    "4869": {
      "op": "DUP2"
    },
    "4870": {
      "op": "DUP2"
    },
    "4871": {
      "op": "LT"
    },
    "4872": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4881": {
      "op": "DUP3"
    },
    "4882": {
      "op": "GT"
    },
    "4883": {
      "op": "OR"
    },
    "4884": {
      "op": "ISZERO"
    },
    "4885": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "4888": {
      "op": "JUMPI"
    },
    "4889": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "4892": {
      "op": "PUSH2",
      "value": "0x12A5"
    },
    "4895": {
      "jump": "i",
      "op": "JUMP"
    },
    "4896": {
      "op": "JUMPDEST"
    },
    "4897": {
      "op": "DUP1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4900": {
      "op": "MSTORE"
    },
    "4901": {
      "op": "POP"
    },
    "4902": {
      "op": "DUP1"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4905": {
      "op": "DUP5"
    },
    "4906": {
      "op": "ADD"
    },
    "4907": {
      "op": "DUP6"
    },
    "4908": {
      "op": "DUP2"
    },
    "4909": {
      "op": "GT"
    },
    "4910": {
      "op": "ISZERO"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "4914": {
      "op": "JUMPI"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4917": {
      "op": "DUP1"
    },
    "4918": {
      "op": "REVERT"
    },
    "4919": {
      "op": "JUMPDEST"
    },
    "4920": {
      "op": "DUP5"
    },
    "4921": {
      "op": "JUMPDEST"
    },
    "4922": {
      "op": "DUP2"
    },
    "4923": {
      "op": "DUP2"
    },
    "4924": {
      "op": "LT"
    },
    "4925": {
      "op": "ISZERO"
    },
    "4926": {
      "op": "PUSH2",
      "value": "0x1351"
    },
    "4929": {
      "op": "JUMPI"
    },
    "4930": {
      "op": "DUP1"
    },
    "4931": {
      "op": "CALLDATALOAD"
    },
    "4932": {
      "op": "DUP4"
    },
    "4933": {
      "op": "MSTORE"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4936": {
      "op": "SWAP3"
    },
    "4937": {
      "op": "DUP4"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "SWAP3"
    },
    "4940": {
      "op": "ADD"
    },
    "4941": {
      "op": "PUSH2",
      "value": "0x1339"
    },
    "4944": {
      "op": "JUMP"
    },
    "4945": {
      "op": "JUMPDEST"
    },
    "4946": {
      "op": "POP"
    },
    "4947": {
      "op": "SWAP2"
    },
    "4948": {
      "op": "SWAP6"
    },
    "4949": {
      "op": "SWAP5"
    },
    "4950": {
      "op": "POP"
    },
    "4951": {
      "op": "POP"
    },
    "4952": {
      "op": "POP"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "POP"
    },
    "4955": {
      "jump": "o",
      "op": "JUMP"
    },
    "4956": {
      "op": "JUMPDEST"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4959": {
      "op": "DUP1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4962": {
      "op": "DUP1"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4965": {
      "op": "DUP1"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4968": {
      "op": "DUP8"
    },
    "4969": {
      "op": "DUP10"
    },
    "4970": {
      "op": "SUB"
    },
    "4971": {
      "op": "SLT"
    },
    "4972": {
      "op": "ISZERO"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x1375"
    },
    "4976": {
      "op": "JUMPI"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4979": {
      "op": "DUP1"
    },
    "4980": {
      "op": "REVERT"
    },
    "4981": {
      "op": "JUMPDEST"
    },
    "4982": {
      "op": "DUP7"
    },
    "4983": {
      "op": "CALLDATALOAD"
    },
    "4984": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "4987": {
      "op": "DUP2"
    },
    "4988": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4991": {
      "jump": "i",
      "op": "JUMP"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "op": "SWAP6"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4997": {
      "op": "DUP8"
    },
    "4998": {
      "op": "DUP2"
    },
    "4999": {
      "op": "ADD"
    },
    "5000": {
      "op": "CALLDATALOAD"
    },
    "5001": {
      "op": "SWAP6"
    },
    "5002": {
      "op": "POP"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5005": {
      "op": "DUP9"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "op": "CALLDATALOAD"
    },
    "5008": {
      "op": "SWAP5"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5012": {
      "op": "DUP9"
    },
    "5013": {
      "op": "ADD"
    },
    "5014": {
      "op": "CALLDATALOAD"
    },
    "5015": {
      "op": "SWAP4"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "PUSH2",
      "value": "0x13A5"
    },
    "5020": {
      "op": "DUP10"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5023": {
      "op": "DUP11"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "5028": {
      "jump": "i",
      "op": "JUMP"
    },
    "5029": {
      "op": "JUMPDEST"
    },
    "5030": {
      "op": "SWAP3"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5034": {
      "op": "DUP9"
    },
    "5035": {
      "op": "ADD"
    },
    "5036": {
      "op": "CALLDATALOAD"
    },
    "5037": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5046": {
      "op": "DUP1"
    },
    "5047": {
      "op": "DUP3"
    },
    "5048": {
      "op": "GT"
    },
    "5049": {
      "op": "ISZERO"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "5053": {
      "op": "JUMPI"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5056": {
      "op": "DUP1"
    },
    "5057": {
      "op": "REVERT"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "DUP2"
    },
    "5060": {
      "op": "DUP11"
    },
    "5061": {
      "op": "ADD"
    },
    "5062": {
      "op": "SWAP2"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "op": "DUP11"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5067": {
      "op": "DUP4"
    },
    "5068": {
      "op": "ADD"
    },
    "5069": {
      "op": "SLT"
    },
    "5070": {
      "op": "PUSH2",
      "value": "0x13D6"
    },
    "5073": {
      "op": "JUMPI"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5076": {
      "op": "DUP1"
    },
    "5077": {
      "op": "REVERT"
    },
    "5078": {
      "op": "JUMPDEST"
    },
    "5079": {
      "op": "DUP2"
    },
    "5080": {
      "op": "CALLDATALOAD"
    },
    "5081": {
      "op": "DUP2"
    },
    "5082": {
      "op": "DUP2"
    },
    "5083": {
      "op": "GT"
    },
    "5084": {
      "op": "ISZERO"
    },
    "5085": {
      "op": "PUSH2",
      "value": "0x13E8"
    },
    "5088": {
      "op": "JUMPI"
    },
    "5089": {
      "op": "PUSH2",
      "value": "0x13E8"
    },
    "5092": {
      "op": "PUSH2",
      "value": "0x12A5"
    },
    "5095": {
      "jump": "i",
      "op": "JUMP"
    },
    "5096": {
      "op": "JUMPDEST"
    },
    "5097": {
      "op": "DUP1"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5100": {
      "op": "SHL"
    },
    "5101": {
      "op": "SWAP2"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "op": "PUSH2",
      "value": "0x13F9"
    },
    "5106": {
      "op": "DUP5"
    },
    "5107": {
      "op": "DUP4"
    },
    "5108": {
      "op": "ADD"
    },
    "5109": {
      "op": "PUSH2",
      "value": "0x12BB"
    },
    "5112": {
      "jump": "i",
      "op": "JUMP"
    },
    "5113": {
      "op": "JUMPDEST"
    },
    "5114": {
      "op": "DUP2"
    },
    "5115": {
      "op": "DUP2"
    },
    "5116": {
      "op": "MSTORE"
    },
    "5117": {
      "op": "SWAP2"
    },
    "5118": {
      "op": "DUP4"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "DUP5"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "SWAP2"
    },
    "5123": {
      "op": "DUP5"
    },
    "5124": {
      "op": "DUP2"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "SWAP1"
    },
    "5127": {
      "op": "DUP14"
    },
    "5128": {
      "op": "DUP5"
    },
    "5129": {
      "op": "GT"
    },
    "5130": {
      "op": "ISZERO"
    },
    "5131": {
      "op": "PUSH2",
      "value": "0x1413"
    },
    "5134": {
      "op": "JUMPI"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5137": {
      "op": "DUP1"
    },
    "5138": {
      "op": "REVERT"
    },
    "5139": {
      "op": "JUMPDEST"
    },
    "5140": {
      "op": "SWAP4"
    },
    "5141": {
      "op": "DUP6"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "SWAP4"
    },
    "5144": {
      "op": "JUMPDEST"
    },
    "5145": {
      "op": "DUP4"
    },
    "5146": {
      "op": "DUP6"
    },
    "5147": {
      "op": "LT"
    },
    "5148": {
      "op": "ISZERO"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1431"
    },
    "5152": {
      "op": "JUMPI"
    },
    "5153": {
      "op": "DUP5"
    },
    "5154": {
      "op": "CALLDATALOAD"
    },
    "5155": {
      "op": "DUP3"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "SWAP4"
    },
    "5158": {
      "op": "DUP6"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "SWAP4"
    },
    "5161": {
      "op": "SWAP1"
    },
    "5162": {
      "op": "DUP6"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "op": "SWAP1"
    },
    "5165": {
      "op": "PUSH2",
      "value": "0x1418"
    },
    "5168": {
      "op": "JUMP"
    },
    "5169": {
      "op": "JUMPDEST"
    },
    "5170": {
      "op": "DUP1"
    },
    "5171": {
      "op": "SWAP7"
    },
    "5172": {
      "op": "POP"
    },
    "5173": {
      "op": "POP"
    },
    "5174": {
      "op": "POP"
    },
    "5175": {
      "op": "POP"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "op": "POP"
    },
    "5178": {
      "op": "POP"
    },
    "5179": {
      "op": "SWAP3"
    },
    "5180": {
      "op": "SWAP6"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "op": "SWAP3"
    },
    "5183": {
      "op": "SWAP6"
    },
    "5184": {
      "op": "POP"
    },
    "5185": {
      "op": "SWAP3"
    },
    "5186": {
      "op": "SWAP6"
    },
    "5187": {
      "jump": "o",
      "op": "JUMP"
    },
    "5188": {
      "op": "JUMPDEST"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5191": {
      "op": "DUP1"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5194": {
      "op": "DUP4"
    },
    "5195": {
      "op": "DUP6"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "op": "SLT"
    },
    "5198": {
      "op": "ISZERO"
    },
    "5199": {
      "op": "PUSH2",
      "value": "0x1457"
    },
    "5202": {
      "op": "JUMPI"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5205": {
      "op": "DUP1"
    },
    "5206": {
      "op": "REVERT"
    },
    "5207": {
      "op": "JUMPDEST"
    },
    "5208": {
      "op": "POP"
    },
    "5209": {
      "op": "POP"
    },
    "5210": {
      "op": "DUP1"
    },
    "5211": {
      "op": "CALLDATALOAD"
    },
    "5212": {
      "op": "SWAP3"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5215": {
      "op": "SWAP1"
    },
    "5216": {
      "op": "SWAP2"
    },
    "5217": {
      "op": "ADD"
    },
    "5218": {
      "op": "CALLDATALOAD"
    },
    "5219": {
      "op": "SWAP2"
    },
    "5220": {
      "op": "POP"
    },
    "5221": {
      "jump": "o",
      "op": "JUMP"
    },
    "5222": {
      "op": "JUMPDEST"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5225": {
      "op": "DUP1"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5228": {
      "op": "DUP4"
    },
    "5229": {
      "op": "DUP6"
    },
    "5230": {
      "op": "SUB"
    },
    "5231": {
      "op": "SLT"
    },
    "5232": {
      "op": "ISZERO"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1479"
    },
    "5236": {
      "op": "JUMPI"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "op": "REVERT"
    },
    "5241": {
      "op": "JUMPDEST"
    },
    "5242": {
      "op": "DUP3"
    },
    "5243": {
      "op": "CALLDATALOAD"
    },
    "5244": {
      "op": "SWAP2"
    },
    "5245": {
      "op": "POP"
    },
    "5246": {
      "op": "PUSH2",
      "value": "0x148A"
    },
    "5249": {
      "op": "DUP5"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5252": {
      "op": "DUP6"
    },
    "5253": {
      "op": "ADD"
    },
    "5254": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "5257": {
      "jump": "i",
      "op": "JUMP"
    },
    "5258": {
      "op": "JUMPDEST"
    },
    "5259": {
      "op": "SWAP1"
    },
    "5260": {
      "op": "POP"
    },
    "5261": {
      "op": "SWAP3"
    },
    "5262": {
      "op": "POP"
    },
    "5263": {
      "op": "SWAP3"
    },
    "5264": {
      "op": "SWAP1"
    },
    "5265": {
      "op": "POP"
    },
    "5266": {
      "jump": "o",
      "op": "JUMP"
    },
    "5267": {
      "op": "JUMPDEST"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5270": {
      "op": "DUP1"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5273": {
      "op": "DUP1"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5276": {
      "op": "DUP6"
    },
    "5277": {
      "op": "DUP8"
    },
    "5278": {
      "op": "SUB"
    },
    "5279": {
      "op": "SLT"
    },
    "5280": {
      "op": "ISZERO"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5284": {
      "op": "JUMPI"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5287": {
      "op": "DUP1"
    },
    "5288": {
      "op": "REVERT"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "DUP5"
    },
    "5291": {
      "op": "CALLDATALOAD"
    },
    "5292": {
      "op": "PUSH2",
      "value": "0x14B4"
    },
    "5295": {
      "op": "DUP2"
    },
    "5296": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "5299": {
      "jump": "i",
      "op": "JUMP"
    },
    "5300": {
      "op": "JUMPDEST"
    },
    "5301": {
      "op": "SWAP4"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5305": {
      "op": "DUP6"
    },
    "5306": {
      "op": "ADD"
    },
    "5307": {
      "op": "CALLDATALOAD"
    },
    "5308": {
      "op": "SWAP3"
    },
    "5309": {
      "op": "POP"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5312": {
      "op": "DUP6"
    },
    "5313": {
      "op": "ADD"
    },
    "5314": {
      "op": "CALLDATALOAD"
    },
    "5315": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5324": {
      "op": "DUP1"
    },
    "5325": {
      "op": "DUP3"
    },
    "5326": {
      "op": "GT"
    },
    "5327": {
      "op": "ISZERO"
    },
    "5328": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5331": {
      "op": "JUMPI"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5334": {
      "op": "DUP1"
    },
    "5335": {
      "op": "REVERT"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "DUP2"
    },
    "5338": {
      "op": "DUP8"
    },
    "5339": {
      "op": "ADD"
    },
    "5340": {
      "op": "SWAP2"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "op": "DUP8"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5345": {
      "op": "DUP4"
    },
    "5346": {
      "op": "ADD"
    },
    "5347": {
      "op": "SLT"
    },
    "5348": {
      "op": "PUSH2",
      "value": "0x14EC"
    },
    "5351": {
      "op": "JUMPI"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5354": {
      "op": "DUP1"
    },
    "5355": {
      "op": "REVERT"
    },
    "5356": {
      "op": "JUMPDEST"
    },
    "5357": {
      "op": "DUP2"
    },
    "5358": {
      "op": "CALLDATALOAD"
    },
    "5359": {
      "op": "DUP2"
    },
    "5360": {
      "op": "DUP2"
    },
    "5361": {
      "op": "GT"
    },
    "5362": {
      "op": "ISZERO"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x14FB"
    },
    "5366": {
      "op": "JUMPI"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5369": {
      "op": "DUP1"
    },
    "5370": {
      "op": "REVERT"
    },
    "5371": {
      "op": "JUMPDEST"
    },
    "5372": {
      "op": "DUP9"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5375": {
      "op": "DUP3"
    },
    "5376": {
      "op": "DUP6"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "GT"
    },
    "5380": {
      "op": "ISZERO"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5384": {
      "op": "JUMPI"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5387": {
      "op": "DUP1"
    },
    "5388": {
      "op": "REVERT"
    },
    "5389": {
      "op": "JUMPDEST"
    },
    "5390": {
      "op": "SWAP6"
    },
    "5391": {
      "op": "SWAP9"
    },
    "5392": {
      "op": "SWAP5"
    },
    "5393": {
      "op": "SWAP8"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "SWAP5"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "jump": "o",
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5409": {
      "op": "DUP3"
    },
    "5410": {
      "op": "DUP5"
    },
    "5411": {
      "op": "SUB"
    },
    "5412": {
      "op": "SLT"
    },
    "5413": {
      "op": "ISZERO"
    },
    "5414": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "5417": {
      "op": "JUMPI"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5420": {
      "op": "DUP1"
    },
    "5421": {
      "op": "REVERT"
    },
    "5422": {
      "op": "JUMPDEST"
    },
    "5423": {
      "op": "DUP2"
    },
    "5424": {
      "op": "CALLDATALOAD"
    },
    "5425": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "5428": {
      "op": "DUP2"
    },
    "5429": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "5432": {
      "jump": "i",
      "op": "JUMP"
    },
    "5433": {
      "op": "JUMPDEST"
    },
    "5434": {
      "op": "SWAP4"
    },
    "5435": {
      "op": "SWAP3"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "POP"
    },
    "5439": {
      "jump": "o",
      "op": "JUMP"
    },
    "5440": {
      "op": "JUMPDEST"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5443": {
      "op": "DUP2"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "DUP2"
    },
    "5446": {
      "op": "DUP4"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5449": {
      "op": "DUP1"
    },
    "5450": {
      "op": "JUMPDEST"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5453": {
      "op": "DUP2"
    },
    "5454": {
      "op": "LT"
    },
    "5455": {
      "op": "ISZERO"
    },
    "5456": {
      "op": "PUSH2",
      "value": "0x1590"
    },
    "5459": {
      "op": "JUMPI"
    },
    "5460": {
      "op": "DUP3"
    },
    "5461": {
      "op": "MLOAD"
    },
    "5462": {
      "op": "DUP5"
    },
    "5463": {
      "op": "DUP4"
    },
    "5464": {
      "op": "JUMPDEST"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5467": {
      "op": "DUP2"
    },
    "5468": {
      "op": "LT"
    },
    "5469": {
      "op": "ISZERO"
    },
    "5470": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5473": {
      "op": "JUMPI"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "MLOAD"
    },
    "5476": {
      "op": "DUP3"
    },
    "5477": {
      "op": "MSTORE"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5480": {
      "op": "SWAP3"
    },
    "5481": {
      "op": "DUP4"
    },
    "5482": {
      "op": "ADD"
    },
    "5483": {
      "op": "SWAP3"
    },
    "5484": {
      "op": "SWAP1"
    },
    "5485": {
      "op": "SWAP2"
    },
    "5486": {
      "op": "ADD"
    },
    "5487": {
      "op": "SWAP1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5490": {
      "op": "ADD"
    },
    "5491": {
      "op": "PUSH2",
      "value": "0x1558"
    },
    "5494": {
      "op": "JUMP"
    },
    "5495": {
      "op": "JUMPDEST"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "op": "POP"
    },
    "5498": {
      "op": "POP"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5501": {
      "op": "SWAP4"
    },
    "5502": {
      "op": "SWAP1"
    },
    "5503": {
      "op": "SWAP4"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "SWAP3"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5508": {
      "op": "SWAP3"
    },
    "5509": {
      "op": "SWAP1"
    },
    "5510": {
      "op": "SWAP3"
    },
    "5511": {
      "op": "ADD"
    },
    "5512": {
      "op": "SWAP2"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5515": {
      "op": "ADD"
    },
    "5516": {
      "op": "PUSH2",
      "value": "0x154A"
    },
    "5519": {
      "op": "JUMP"
    },
    "5520": {
      "op": "JUMPDEST"
    },
    "5521": {
      "op": "POP"
    },
    "5522": {
      "op": "POP"
    },
    "5523": {
      "op": "POP"
    },
    "5524": {
      "op": "POP"
    },
    "5525": {
      "op": "SWAP3"
    },
    "5526": {
      "op": "SWAP2"
    },
    "5527": {
      "op": "POP"
    },
    "5528": {
      "op": "POP"
    },
    "5529": {
      "jump": "o",
      "op": "JUMP"
    },
    "5530": {
      "op": "JUMPDEST"
    },
    "5531": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5538": {
      "op": "SHL"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "MSTORE"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5551": {
      "op": "REVERT"
    },
    "5552": {
      "op": "JUMPDEST"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5555": {
      "op": "DUP3"
    },
    "5556": {
      "op": "DUP3"
    },
    "5557": {
      "op": "LT"
    },
    "5558": {
      "op": "ISZERO"
    },
    "5559": {
      "op": "PUSH2",
      "value": "0x15C2"
    },
    "5562": {
      "op": "JUMPI"
    },
    "5563": {
      "op": "PUSH2",
      "value": "0x15C2"
    },
    "5566": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "5569": {
      "jump": "i",
      "op": "JUMP"
    },
    "5570": {
      "op": "JUMPDEST"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "SUB"
    },
    "5573": {
      "op": "SWAP1"
    },
    "5574": {
      "jump": "o",
      "op": "JUMP"
    },
    "5575": {
      "op": "JUMPDEST"
    },
    "5576": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5583": {
      "op": "SHL"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5586": {
      "op": "MSTORE"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5591": {
      "op": "MSTORE"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5596": {
      "op": "REVERT"
    },
    "5597": {
      "op": "JUMPDEST"
    },
    "5598": {
      "op": "DUP1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "JUMPDEST"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5604": {
      "op": "DUP2"
    },
    "5605": {
      "op": "LT"
    },
    "5606": {
      "op": "ISZERO"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x1600"
    },
    "5610": {
      "op": "JUMPI"
    },
    "5611": {
      "op": "DUP2"
    },
    "5612": {
      "op": "MLOAD"
    },
    "5613": {
      "op": "DUP5"
    },
    "5614": {
      "op": "MSTORE"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5617": {
      "op": "SWAP4"
    },
    "5618": {
      "op": "DUP5"
    },
    "5619": {
      "op": "ADD"
    },
    "5620": {
      "op": "SWAP4"
    },
    "5621": {
      "op": "SWAP1"
    },
    "5622": {
      "op": "SWAP2"
    },
    "5623": {
      "op": "ADD"
    },
    "5624": {
      "op": "SWAP1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "op": "PUSH2",
      "value": "0x15E1"
    },
    "5631": {
      "op": "JUMP"
    },
    "5632": {
      "op": "JUMPDEST"
    },
    "5633": {
      "op": "POP"
    },
    "5634": {
      "op": "POP"
    },
    "5635": {
      "op": "POP"
    },
    "5636": {
      "op": "POP"
    },
    "5637": {
      "jump": "o",
      "op": "JUMP"
    },
    "5638": {
      "op": "JUMPDEST"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5641": {
      "op": "DUP2"
    },
    "5642": {
      "op": "MLOAD"
    },
    "5643": {
      "op": "DUP1"
    },
    "5644": {
      "op": "DUP5"
    },
    "5645": {
      "op": "MSTORE"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5648": {
      "op": "DUP1"
    },
    "5649": {
      "op": "DUP6"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "SWAP5"
    },
    "5652": {
      "op": "POP"
    },
    "5653": {
      "op": "DUP1"
    },
    "5654": {
      "op": "DUP5"
    },
    "5655": {
      "op": "ADD"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5658": {
      "op": "JUMPDEST"
    },
    "5659": {
      "op": "DUP4"
    },
    "5660": {
      "op": "DUP2"
    },
    "5661": {
      "op": "LT"
    },
    "5662": {
      "op": "ISZERO"
    },
    "5663": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5666": {
      "op": "JUMPI"
    },
    "5667": {
      "op": "DUP2"
    },
    "5668": {
      "op": "MLOAD"
    },
    "5669": {
      "op": "DUP8"
    },
    "5670": {
      "op": "MSTORE"
    },
    "5671": {
      "op": "SWAP6"
    },
    "5672": {
      "op": "DUP3"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "SWAP6"
    },
    "5675": {
      "op": "SWAP1"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "ADD"
    },
    "5678": {
      "op": "SWAP1"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5681": {
      "op": "ADD"
    },
    "5682": {
      "op": "PUSH2",
      "value": "0x161A"
    },
    "5685": {
      "op": "JUMP"
    },
    "5686": {
      "op": "JUMPDEST"
    },
    "5687": {
      "op": "POP"
    },
    "5688": {
      "op": "SWAP5"
    },
    "5689": {
      "op": "SWAP6"
    },
    "5690": {
      "op": "SWAP5"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "op": "POP"
    },
    "5693": {
      "op": "POP"
    },
    "5694": {
      "op": "POP"
    },
    "5695": {
      "op": "POP"
    },
    "5696": {
      "jump": "o",
      "op": "JUMP"
    },
    "5697": {
      "op": "JUMPDEST"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5700": {
      "op": "DUP2"
    },
    "5701": {
      "op": "MLOAD"
    },
    "5702": {
      "op": "DUP1"
    },
    "5703": {
      "op": "DUP5"
    },
    "5704": {
      "op": "MSTORE"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5707": {
      "op": "DUP1"
    },
    "5708": {
      "op": "DUP6"
    },
    "5709": {
      "op": "ADD"
    },
    "5710": {
      "op": "SWAP5"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "op": "DUP1"
    },
    "5713": {
      "op": "DUP5"
    },
    "5714": {
      "op": "ADD"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5717": {
      "op": "JUMPDEST"
    },
    "5718": {
      "op": "DUP4"
    },
    "5719": {
      "op": "DUP2"
    },
    "5720": {
      "op": "LT"
    },
    "5721": {
      "op": "ISZERO"
    },
    "5722": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5725": {
      "op": "JUMPI"
    },
    "5726": {
      "op": "PUSH2",
      "value": "0x1668"
    },
    "5729": {
      "op": "DUP8"
    },
    "5730": {
      "op": "DUP4"
    },
    "5731": {
      "op": "MLOAD"
    },
    "5732": {
      "op": "PUSH2",
      "value": "0x15DD"
    },
    "5735": {
      "jump": "i",
      "op": "JUMP"
    },
    "5736": {
      "op": "JUMPDEST"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5739": {
      "op": "SWAP7"
    },
    "5740": {
      "op": "SWAP1"
    },
    "5741": {
      "op": "SWAP7"
    },
    "5742": {
      "op": "ADD"
    },
    "5743": {
      "op": "SWAP6"
    },
    "5744": {
      "op": "SWAP1"
    },
    "5745": {
      "op": "DUP3"
    },
    "5746": {
      "op": "ADD"
    },
    "5747": {
      "op": "SWAP1"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5750": {
      "op": "ADD"
    },
    "5751": {
      "op": "PUSH2",
      "value": "0x1655"
    },
    "5754": {
      "op": "JUMP"
    },
    "5755": {
      "op": "JUMPDEST"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5758": {
      "op": "DUP2"
    },
    "5759": {
      "op": "MSTORE"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5762": {
      "op": "DUP7"
    },
    "5763": {
      "op": "MLOAD"
    },
    "5764": {
      "op": "DUP1"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5767": {
      "op": "DUP5"
    },
    "5768": {
      "op": "ADD"
    },
    "5769": {
      "op": "MSTORE"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "DUP2"
    },
    "5774": {
      "op": "DUP2"
    },
    "5775": {
      "op": "LT"
    },
    "5776": {
      "op": "ISZERO"
    },
    "5777": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "5780": {
      "op": "JUMPI"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5783": {
      "op": "DUP2"
    },
    "5784": {
      "op": "DUP11"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "DUP2"
    },
    "5787": {
      "op": "ADD"
    },
    "5788": {
      "op": "MLOAD"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5791": {
      "op": "DUP7"
    },
    "5792": {
      "op": "DUP5"
    },
    "5793": {
      "op": "ADD"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "PUSH2",
      "value": "0x168C"
    },
    "5800": {
      "op": "JUMP"
    },
    "5801": {
      "op": "JUMPDEST"
    },
    "5802": {
      "op": "DUP2"
    },
    "5803": {
      "op": "DUP2"
    },
    "5804": {
      "op": "GT"
    },
    "5805": {
      "op": "ISZERO"
    },
    "5806": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "5809": {
      "op": "JUMPI"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5814": {
      "op": "DUP4"
    },
    "5815": {
      "op": "DUP7"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "POP"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5823": {
      "op": "DUP4"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "DUP8"
    },
    "5826": {
      "op": "SWAP1"
    },
    "5827": {
      "op": "MSTORE"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5830": {
      "op": "ADD"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5833": {
      "op": "NOT"
    },
    "5834": {
      "op": "AND"
    },
    "5835": {
      "op": "DUP3"
    },
    "5836": {
      "op": "ADD"
    },
    "5837": {
      "op": "PUSH2",
      "value": "0x16D9"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5842": {
      "op": "DUP5"
    },
    "5843": {
      "op": "ADD"
    },
    "5844": {
      "op": "DUP8"
    },
    "5845": {
      "op": "PUSH2",
      "value": "0x15DD"
    },
    "5848": {
      "jump": "i",
      "op": "JUMP"
    },
    "5849": {
      "op": "JUMPDEST"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5852": {
      "op": "DUP4"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "SUB"
    },
    "5855": {
      "op": "ADD"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5858": {
      "op": "DUP5"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH2",
      "value": "0x16F1"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5866": {
      "op": "DUP3"
    },
    "5867": {
      "op": "ADD"
    },
    "5868": {
      "op": "DUP7"
    },
    "5869": {
      "op": "PUSH2",
      "value": "0x1606"
    },
    "5872": {
      "jump": "i",
      "op": "JUMP"
    },
    "5873": {
      "op": "JUMPDEST"
    },
    "5874": {
      "op": "SWAP1"
    },
    "5875": {
      "op": "POP"
    },
    "5876": {
      "op": "DUP3"
    },
    "5877": {
      "op": "DUP2"
    },
    "5878": {
      "op": "SUB"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5881": {
      "op": "DUP5"
    },
    "5882": {
      "op": "ADD"
    },
    "5883": {
      "op": "MSTORE"
    },
    "5884": {
      "op": "PUSH2",
      "value": "0x1705"
    },
    "5887": {
      "op": "DUP2"
    },
    "5888": {
      "op": "DUP6"
    },
    "5889": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "5892": {
      "jump": "i",
      "op": "JUMP"
    },
    "5893": {
      "op": "JUMPDEST"
    },
    "5894": {
      "op": "SWAP9"
    },
    "5895": {
      "op": "SWAP8"
    },
    "5896": {
      "op": "POP"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "op": "POP"
    },
    "5899": {
      "op": "POP"
    },
    "5900": {
      "op": "POP"
    },
    "5901": {
      "op": "POP"
    },
    "5902": {
      "op": "POP"
    },
    "5903": {
      "op": "POP"
    },
    "5904": {
      "jump": "o",
      "op": "JUMP"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5910": {
      "op": "DUP3"
    },
    "5911": {
      "op": "DUP5"
    },
    "5912": {
      "op": "SUB"
    },
    "5913": {
      "op": "SLT"
    },
    "5914": {
      "op": "ISZERO"
    },
    "5915": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "5918": {
      "op": "JUMPI"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5921": {
      "op": "DUP1"
    },
    "5922": {
      "op": "REVERT"
    },
    "5923": {
      "op": "JUMPDEST"
    },
    "5924": {
      "op": "DUP2"
    },
    "5925": {
      "op": "MLOAD"
    },
    "5926": {
      "op": "DUP1"
    },
    "5927": {
      "op": "ISZERO"
    },
    "5928": {
      "op": "ISZERO"
    },
    "5929": {
      "op": "DUP2"
    },
    "5930": {
      "op": "EQ"
    },
    "5931": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "5934": {
      "op": "JUMPI"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5937": {
      "op": "DUP1"
    },
    "5938": {
      "op": "REVERT"
    },
    "5939": {
      "op": "JUMPDEST"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5942": {
      "op": "DUP3"
    },
    "5943": {
      "op": "NOT"
    },
    "5944": {
      "op": "DUP3"
    },
    "5945": {
      "op": "GT"
    },
    "5946": {
      "op": "ISZERO"
    },
    "5947": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5950": {
      "op": "JUMPI"
    },
    "5951": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5954": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "5957": {
      "jump": "i",
      "op": "JUMP"
    },
    "5958": {
      "op": "JUMPDEST"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "op": "ADD"
    },
    "5961": {
      "op": "SWAP1"
    },
    "5962": {
      "jump": "o",
      "op": "JUMP"
    },
    "5963": {
      "op": "JUMPDEST"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5966": {
      "op": "DUP2"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5969": {
      "op": "NOT"
    },
    "5970": {
      "op": "DIV"
    },
    "5971": {
      "op": "DUP4"
    },
    "5972": {
      "op": "GT"
    },
    "5973": {
      "op": "DUP3"
    },
    "5974": {
      "op": "ISZERO"
    },
    "5975": {
      "op": "ISZERO"
    },
    "5976": {
      "op": "AND"
    },
    "5977": {
      "op": "ISZERO"
    },
    "5978": {
      "op": "PUSH2",
      "value": "0x1765"
    },
    "5981": {
      "op": "JUMPI"
    },
    "5982": {
      "op": "PUSH2",
      "value": "0x1765"
    },
    "5985": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "5988": {
      "jump": "i",
      "op": "JUMP"
    },
    "5989": {
      "op": "JUMPDEST"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "op": "MUL"
    },
    "5992": {
      "op": "SWAP1"
    },
    "5993": {
      "jump": "o",
      "op": "JUMP"
    },
    "5994": {
      "op": "JUMPDEST"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "DUP3"
    },
    "5998": {
      "op": "PUSH2",
      "value": "0x1787"
    },
    "6001": {
      "op": "JUMPI"
    },
    "6002": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6012": {
      "op": "MSTORE"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6017": {
      "op": "MSTORE"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6022": {
      "op": "REVERT"
    },
    "6023": {
      "op": "JUMPDEST"
    },
    "6024": {
      "op": "POP"
    },
    "6025": {
      "op": "DIV"
    },
    "6026": {
      "op": "SWAP1"
    },
    "6027": {
      "jump": "o",
      "op": "JUMP"
    },
    "6028": {
      "op": "JUMPDEST"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6033": {
      "op": "DUP3"
    },
    "6034": {
      "op": "DUP5"
    },
    "6035": {
      "op": "SUB"
    },
    "6036": {
      "op": "SLT"
    },
    "6037": {
      "op": "ISZERO"
    },
    "6038": {
      "op": "PUSH2",
      "value": "0x179E"
    },
    "6041": {
      "op": "JUMPI"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6044": {
      "op": "DUP1"
    },
    "6045": {
      "op": "REVERT"
    },
    "6046": {
      "op": "JUMPDEST"
    },
    "6047": {
      "op": "POP"
    },
    "6048": {
      "op": "MLOAD"
    },
    "6049": {
      "op": "SWAP2"
    },
    "6050": {
      "op": "SWAP1"
    },
    "6051": {
      "op": "POP"
    },
    "6052": {
      "jump": "o",
      "op": "JUMP"
    },
    "6053": {
      "op": "JUMPDEST"
    },
    "6054": {
      "op": "DUP5"
    },
    "6055": {
      "op": "DUP2"
    },
    "6056": {
      "op": "MSTORE"
    },
    "6057": {
      "op": "DUP4"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6060": {
      "op": "DUP3"
    },
    "6061": {
      "op": "ADD"
    },
    "6062": {
      "op": "MSTORE"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6067": {
      "op": "DUP3"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "MSTORE"
    },
    "6070": {
      "op": "DUP2"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6073": {
      "op": "DUP3"
    },
    "6074": {
      "op": "ADD"
    },
    "6075": {
      "op": "MSTORE"
    },
    "6076": {
      "op": "DUP2"
    },
    "6077": {
      "op": "DUP4"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6080": {
      "op": "DUP4"
    },
    "6081": {
      "op": "ADD"
    },
    "6082": {
      "op": "CALLDATACOPY"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6085": {
      "op": "DUP2"
    },
    "6086": {
      "op": "DUP4"
    },
    "6087": {
      "op": "ADD"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6090": {
      "op": "SWAP1"
    },
    "6091": {
      "op": "DUP2"
    },
    "6092": {
      "op": "ADD"
    },
    "6093": {
      "op": "SWAP2"
    },
    "6094": {
      "op": "SWAP1"
    },
    "6095": {
      "op": "SWAP2"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6099": {
      "op": "SWAP1"
    },
    "6100": {
      "op": "SWAP3"
    },
    "6101": {
      "op": "ADD"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6104": {
      "op": "NOT"
    },
    "6105": {
      "op": "AND"
    },
    "6106": {
      "op": "ADD"
    },
    "6107": {
      "op": "ADD"
    },
    "6108": {
      "op": "SWAP4"
    },
    "6109": {
      "op": "SWAP3"
    },
    "6110": {
      "op": "POP"
    },
    "6111": {
      "op": "POP"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "jump": "o",
      "op": "JUMP"
    },
    "6114": {
      "op": "JUMPDEST"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6119": {
      "op": "DUP3"
    },
    "6120": {
      "op": "DUP5"
    },
    "6121": {
      "op": "SUB"
    },
    "6122": {
      "op": "SLT"
    },
    "6123": {
      "op": "ISZERO"
    },
    "6124": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "6127": {
      "op": "JUMPI"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6130": {
      "op": "DUP1"
    },
    "6131": {
      "op": "REVERT"
    },
    "6132": {
      "op": "JUMPDEST"
    },
    "6133": {
      "op": "DUP2"
    },
    "6134": {
      "op": "MLOAD"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6137": {
      "op": "DUP2"
    },
    "6138": {
      "op": "AND"
    },
    "6139": {
      "op": "DUP2"
    },
    "6140": {
      "op": "EQ"
    },
    "6141": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "6144": {
      "op": "JUMPI"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6147": {
      "op": "DUP1"
    },
    "6148": {
      "op": "REVERT"
    },
    "6149": {
      "op": "JUMPDEST"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6152": {
      "op": "DUP2"
    },
    "6153": {
      "op": "DUP2"
    },
    "6154": {
      "op": "JUMPDEST"
    },
    "6155": {
      "op": "DUP1"
    },
    "6156": {
      "op": "DUP6"
    },
    "6157": {
      "op": "GT"
    },
    "6158": {
      "op": "ISZERO"
    },
    "6159": {
      "op": "PUSH2",
      "value": "0x1840"
    },
    "6162": {
      "op": "JUMPI"
    },
    "6163": {
      "op": "DUP2"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6166": {
      "op": "NOT"
    },
    "6167": {
      "op": "DIV"
    },
    "6168": {
      "op": "DUP3"
    },
    "6169": {
      "op": "GT"
    },
    "6170": {
      "op": "ISZERO"
    },
    "6171": {
      "op": "PUSH2",
      "value": "0x1826"
    },
    "6174": {
      "op": "JUMPI"
    },
    "6175": {
      "op": "PUSH2",
      "value": "0x1826"
    },
    "6178": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "6181": {
      "jump": "i",
      "op": "JUMP"
    },
    "6182": {
      "op": "JUMPDEST"
    },
    "6183": {
      "op": "DUP1"
    },
    "6184": {
      "op": "DUP6"
    },
    "6185": {
      "op": "AND"
    },
    "6186": {
      "op": "ISZERO"
    },
    "6187": {
      "op": "PUSH2",
      "value": "0x1833"
    },
    "6190": {
      "op": "JUMPI"
    },
    "6191": {
      "op": "SWAP2"
    },
    "6192": {
      "op": "DUP2"
    },
    "6193": {
      "op": "MUL"
    },
    "6194": {
      "op": "SWAP2"
    },
    "6195": {
      "op": "JUMPDEST"
    },
    "6196": {
      "op": "SWAP4"
    },
    "6197": {
      "op": "DUP5"
    },
    "6198": {
      "op": "SHR"
    },
    "6199": {
      "op": "SWAP4"
    },
    "6200": {
      "op": "SWAP1"
    },
    "6201": {
      "op": "DUP1"
    },
    "6202": {
      "op": "MUL"
    },
    "6203": {
      "op": "SWAP1"
    },
    "6204": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6207": {
      "op": "JUMP"
    },
    "6208": {
      "op": "JUMPDEST"
    },
    "6209": {
      "op": "POP"
    },
    "6210": {
      "op": "SWAP3"
    },
    "6211": {
      "op": "POP"
    },
    "6212": {
      "op": "SWAP3"
    },
    "6213": {
      "op": "SWAP1"
    },
    "6214": {
      "op": "POP"
    },
    "6215": {
      "jump": "o",
      "op": "JUMP"
    },
    "6216": {
      "op": "JUMPDEST"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6219": {
      "op": "DUP3"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0x1857"
    },
    "6223": {
      "op": "JUMPI"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH2",
      "value": "0xB38"
    },
    "6230": {
      "op": "JUMP"
    },
    "6231": {
      "op": "JUMPDEST"
    },
    "6232": {
      "op": "DUP2"
    },
    "6233": {
      "op": "PUSH2",
      "value": "0x1864"
    },
    "6236": {
      "op": "JUMPI"
    },
    "6237": {
      "op": "POP"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6240": {
      "op": "PUSH2",
      "value": "0xB38"
    },
    "6243": {
      "op": "JUMP"
    },
    "6244": {
      "op": "JUMPDEST"
    },
    "6245": {
      "op": "DUP2"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6248": {
      "op": "DUP2"
    },
    "6249": {
      "op": "EQ"
    },
    "6250": {
      "op": "PUSH2",
      "value": "0x187A"
    },
    "6253": {
      "op": "JUMPI"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6256": {
      "op": "DUP2"
    },
    "6257": {
      "op": "EQ"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x1884"
    },
    "6261": {
      "op": "JUMPI"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x18A0"
    },
    "6265": {
      "op": "JUMP"
    },
    "6266": {
      "op": "JUMPDEST"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6269": {
      "op": "SWAP2"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "POP"
    },
    "6272": {
      "op": "PUSH2",
      "value": "0xB38"
    },
    "6275": {
      "op": "JUMP"
    },
    "6276": {
      "op": "JUMPDEST"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6279": {
      "op": "DUP5"
    },
    "6280": {
      "op": "GT"
    },
    "6281": {
      "op": "ISZERO"
    },
    "6282": {
      "op": "PUSH2",
      "value": "0x1895"
    },
    "6285": {
      "op": "JUMPI"
    },
    "6286": {
      "op": "PUSH2",
      "value": "0x1895"
    },
    "6289": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "6292": {
      "jump": "i",
      "op": "JUMP"
    },
    "6293": {
      "op": "JUMPDEST"
    },
    "6294": {
      "op": "POP"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6298": {
      "op": "DUP3"
    },
    "6299": {
      "op": "SHL"
    },
    "6300": {
      "op": "PUSH2",
      "value": "0xB38"
    },
    "6303": {
      "op": "JUMP"
    },
    "6304": {
      "op": "JUMPDEST"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6308": {
      "op": "DUP4"
    },
    "6309": {
      "op": "LT"
    },
    "6310": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "6313": {
      "op": "DUP4"
    },
    "6314": {
      "op": "LT"
    },
    "6315": {
      "op": "AND"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "6318": {
      "op": "DUP5"
    },
    "6319": {
      "op": "LT"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6322": {
      "op": "DUP5"
    },
    "6323": {
      "op": "LT"
    },
    "6324": {
      "op": "AND"
    },
    "6325": {
      "op": "OR"
    },
    "6326": {
      "op": "ISZERO"
    },
    "6327": {
      "op": "PUSH2",
      "value": "0x18C3"
    },
    "6330": {
      "op": "JUMPI"
    },
    "6331": {
      "op": "POP"
    },
    "6332": {
      "op": "DUP2"
    },
    "6333": {
      "op": "DUP2"
    },
    "6334": {
      "op": "EXP"
    },
    "6335": {
      "op": "PUSH2",
      "value": "0xB38"
    },
    "6338": {
      "op": "JUMP"
    },
    "6339": {
      "op": "JUMPDEST"
    },
    "6340": {
      "op": "PUSH2",
      "value": "0x18CD"
    },
    "6343": {
      "op": "DUP4"
    },
    "6344": {
      "op": "DUP4"
    },
    "6345": {
      "op": "PUSH2",
      "value": "0x1805"
    },
    "6348": {
      "jump": "i",
      "op": "JUMP"
    },
    "6349": {
      "op": "JUMPDEST"
    },
    "6350": {
      "op": "DUP1"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6353": {
      "op": "NOT"
    },
    "6354": {
      "op": "DIV"
    },
    "6355": {
      "op": "DUP3"
    },
    "6356": {
      "op": "GT"
    },
    "6357": {
      "op": "ISZERO"
    },
    "6358": {
      "op": "PUSH2",
      "value": "0x18E1"
    },
    "6361": {
      "op": "JUMPI"
    },
    "6362": {
      "op": "PUSH2",
      "value": "0x18E1"
    },
    "6365": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "6368": {
      "jump": "i",
      "op": "JUMP"
    },
    "6369": {
      "op": "JUMPDEST"
    },
    "6370": {
      "op": "MUL"
    },
    "6371": {
      "op": "SWAP4"
    },
    "6372": {
      "op": "SWAP3"
    },
    "6373": {
      "op": "POP"
    },
    "6374": {
      "op": "POP"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "jump": "o",
      "op": "JUMP"
    },
    "6377": {
      "op": "JUMPDEST"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6380": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "6383": {
      "op": "DUP4"
    },
    "6384": {
      "op": "DUP4"
    },
    "6385": {
      "op": "PUSH2",
      "value": "0x1848"
    },
    "6388": {
      "jump": "i",
      "op": "JUMP"
    },
    "6389": {
      "op": "JUMPDEST"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6394": {
      "op": "DUP3"
    },
    "6395": {
      "op": "ADD"
    },
    "6396": {
      "op": "PUSH2",
      "value": "0x1907"
    },
    "6399": {
      "op": "JUMPI"
    },
    "6400": {
      "op": "PUSH2",
      "value": "0x1907"
    },
    "6403": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "6406": {
      "jump": "i",
      "op": "JUMP"
    },
    "6407": {
      "op": "JUMPDEST"
    },
    "6408": {
      "op": "POP"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6411": {
      "op": "ADD"
    },
    "6412": {
      "op": "SWAP1"
    },
    "6413": {
      "jump": "o",
      "op": "JUMP"
    },
    "6414": {
      "op": "JUMPDEST"
    },
    "6415": {
      "op": "DUP6"
    },
    "6416": {
      "op": "DUP2"
    },
    "6417": {
      "op": "MSTORE"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6422": {
      "op": "DUP7"
    },
    "6423": {
      "op": "DUP2"
    },
    "6424": {
      "op": "DUP5"
    },
    "6425": {
      "op": "ADD"
    },
    "6426": {
      "op": "MSTORE"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6429": {
      "op": "DUP7"
    },
    "6430": {
      "op": "DUP2"
    },
    "6431": {
      "op": "DUP6"
    },
    "6432": {
      "op": "ADD"
    },
    "6433": {
      "op": "MSTORE"
    },
    "6434": {
      "op": "DUP6"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6437": {
      "op": "DUP6"
    },
    "6438": {
      "op": "ADD"
    },
    "6439": {
      "op": "MSTORE"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6442": {
      "op": "DUP5"
    },
    "6443": {
      "op": "ADD"
    },
    "6444": {
      "op": "DUP6"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6447": {
      "op": "DUP1"
    },
    "6448": {
      "op": "JUMPDEST"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6451": {
      "op": "DUP2"
    },
    "6452": {
      "op": "LT"
    },
    "6453": {
      "op": "ISZERO"
    },
    "6454": {
      "op": "PUSH2",
      "value": "0x196E"
    },
    "6457": {
      "op": "JUMPI"
    },
    "6458": {
      "op": "DUP3"
    },
    "6459": {
      "op": "MLOAD"
    },
    "6460": {
      "op": "DUP5"
    },
    "6461": {
      "op": "DUP4"
    },
    "6462": {
      "op": "JUMPDEST"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6465": {
      "op": "DUP2"
    },
    "6466": {
      "op": "LT"
    },
    "6467": {
      "op": "ISZERO"
    },
    "6468": {
      "op": "PUSH2",
      "value": "0x195B"
    },
    "6471": {
      "op": "JUMPI"
    },
    "6472": {
      "op": "DUP3"
    },
    "6473": {
      "op": "MLOAD"
    },
    "6474": {
      "op": "DUP3"
    },
    "6475": {
      "op": "MSTORE"
    },
    "6476": {
      "op": "SWAP2"
    },
    "6477": {
      "op": "DUP9"
    },
    "6478": {
      "op": "ADD"
    },
    "6479": {
      "op": "SWAP2"
    },
    "6480": {
      "op": "SWAP1"
    },
    "6481": {
      "op": "DUP9"
    },
    "6482": {
      "op": "ADD"
    },
    "6483": {
      "op": "SWAP1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6486": {
      "op": "ADD"
    },
    "6487": {
      "op": "PUSH2",
      "value": "0x193E"
    },
    "6490": {
      "op": "JUMP"
    },
    "6491": {
      "op": "JUMPDEST"
    },
    "6492": {
      "op": "POP"
    },
    "6493": {
      "op": "POP"
    },
    "6494": {
      "op": "POP"
    },
    "6495": {
      "op": "SWAP3"
    },
    "6496": {
      "op": "DUP5"
    },
    "6497": {
      "op": "ADD"
    },
    "6498": {
      "op": "SWAP3"
    },
    "6499": {
      "op": "SWAP2"
    },
    "6500": {
      "op": "DUP6"
    },
    "6501": {
      "op": "ADD"
    },
    "6502": {
      "op": "SWAP2"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6505": {
      "op": "ADD"
    },
    "6506": {
      "op": "PUSH2",
      "value": "0x1930"
    },
    "6509": {
      "op": "JUMP"
    },
    "6510": {
      "op": "JUMPDEST"
    },
    "6511": {
      "op": "POP"
    },
    "6512": {
      "op": "POP"
    },
    "6513": {
      "op": "POP"
    },
    "6514": {
      "op": "POP"
    },
    "6515": {
      "op": "POP"
    },
    "6516": {
      "op": "POP"
    },
    "6517": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "6520": {
      "op": "DUP3"
    },
    "6521": {
      "op": "ADD"
    },
    "6522": {
      "op": "SWAP1"
    },
    "6523": {
      "op": "POP"
    },
    "6524": {
      "op": "SWAP7"
    },
    "6525": {
      "op": "SWAP6"
    },
    "6526": {
      "op": "POP"
    },
    "6527": {
      "op": "POP"
    },
    "6528": {
      "op": "POP"
    },
    "6529": {
      "op": "POP"
    },
    "6530": {
      "op": "POP"
    },
    "6531": {
      "op": "POP"
    },
    "6532": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "571cd3d432ab7cd4c3b03a46f2984ec805dde280",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\n\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./lib/AltBn128.sol\";\nimport \"./lib/LSAG.sol\";\nimport \"./interfaces/IFlashBorrower.sol\";\n\n\ncontract HettiPool {\n\n    // =============================================================\n    //                           ERRORS\n    // =============================================================\n    \n    error AlreadyInitialized();\n    error NotInitialized();\n\n    // =============================================================\n    //                           EVENTS\n    // =============================================================\n    \n    event Deposited(address, uint256 tokenAmount, uint256 ringIndex);\n    event Flashloan(FlashBorrower indexed receiver, uint256 amount);\n    event Withdrawn(address, uint256 tokenAmount, uint256 ringIndex);\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    /// @notice Maximum number of participants in a ring It can be changed to a higher value, \n    /// but it will increase the gas cost.\n    /// Note: was reduced to 3 for testing purposes\n    uint256 constant MAX_RING_PARTICIPANT = 3;\n\n    /// @notice Minimum number of blocks that needs to be mined before user can forcefully close the ring\n    /// NOTE: This is only for testing purposes, in production\n    /// this should be set to a higher value\n    uint256 constant CLOSE_RING_BLOCK_THRESHOLD = 10;\n\n    /// The number of participants in the ring\n    uint256 constant _BITPOS_NUMBER_PARTICIPANTS = 32;\n\n    /// The number of withdrawals in the ring\n    uint256 constant _BITPOS_NUMBER_WITHDRAWALS = 48;\n\n    /// The participant value would use 16 bits\n    uint256 constant _BITWIDTH_PARTICIPANTS = 16;\n\n    /// The Block value would use 16 bits\n    uint256 constant _BITWIDTH_BLOCK_NUM = 32;\n\n    /// Bitmask for `numberOfParticipants`\n    uint256 constant _BITMASK_PARTICIPANTS = (1 << _BITWIDTH_PARTICIPANTS) -1;\n\n    /// Bitmask for `blockNumber`\n    uint256 constant _BITMASK_BLOCK_NUM = (1 << _BITWIDTH_BLOCK_NUM) -1;\n\n\n    // =============================================================\n    //                           STORAGE\n    // =============================================================\n\n    struct Ring {\n        /// The total amount deposited in the ring\n        uint256 amountDeposited;\n\n        /// Bits Layout:\n        /// - [0..32]    `initiatedBlockNumber` \n        /// - [32..48]   `numberOfParticipants`\n        /// - [48..64]   `numberOfWithdrawnParticipants`\n        uint256 packedRingData; \n\n        /// The public keys of the participants\n        mapping (uint256 => uint256[2]) publicKeys;\n\n        /// The key images from successfully withdrawn participants\n        /// NOTE: This is used to prevent double spending\n        mapping (uint256 => uint256[2]) keyImages;\n        bytes32 ringHash;\n    }\n\n    address public token;\n    uint256 public tokenDecimals;\n\n    /// 0.09% fee for flashloans\n    uint256 public loanFee = 9;\n\n    uint256[10] allowedAmounts;\n\n    /// tokenAmount => ringIndex\n    mapping(uint256 => uint256) public ringsNumber;\n\n    /// tokenAmount => ringIndex => Ring\n    mapping (uint256 => mapping(uint256 => Ring)) public rings;\n\n    /// @notice Initialize the vault to use and accept `token`\n    /// @param _token The address of the token to use\n    function initialize(address _token) public {\n        if (token != address(0)) revert AlreadyInitialized();\n        token = _token;\n        tokenDecimals = ERC20(_token).decimals();\n\n        for(uint256 i = 0; i < allowedAmounts.length; ) {\n            allowedAmounts[i] = (2 ** i) * (10 ** tokenDecimals);\n\n            unchecked {\n                i++;\n            }\n        }\n    }\n\n    /// @notice Deposit `amount` of `token` into the vault\n    /// @param _amount The amount of `token` to deposit\n    /// @param _publicKey The public key of the participant\n    function deposit(uint _amount, uint256[2] memory _publicKey) public {\n        \n        /// Confirm amount sent is allowed\n        uint256 amountTokenRecieved = amountCheck(_amount);\n\n        ERC20(token).transferFrom(msg.sender, address(this), _amount);\n\n        if (!AltBn128.onCurve(uint256(_publicKey[0]), uint256(_publicKey[1]))) {\n            revert(\"PK_NOT_ON_CURVE\");\n        }\n\n        /// Gets the current ring for the amounts\n        uint256 ringIndex = ringsNumber[amountTokenRecieved];\n        Ring storage ring = rings[amountTokenRecieved][ringIndex];\n\n        (uint wParticipants,\n        uint participants, uint blockNum) = getRingPackedData(ring.packedRingData);\n\n        /// Making sure no duplicate public keys are added\n        for (uint256 i = 0; i < participants;) {\n            if (ring.publicKeys[i][0] == _publicKey[0] &&\n                ring.publicKeys[i][1] == _publicKey[1]) {\n                revert(\"PK_ALREADY_IN_RING\");\n            }\n\n            unchecked {\n                i++;\n            }\n        }\n\n        if (participants == 0) {\n            blockNum = block.number - 1;\n        }\n\n        ring.publicKeys[participants] = _publicKey;\n        ring.amountDeposited += amountTokenRecieved;\n        unchecked {\n            participants++;\n        }\n\n        uint packedData = (wParticipants << _BITWIDTH_PARTICIPANTS) | participants;\n        packedData = (packedData << _BITWIDTH_BLOCK_NUM) | blockNum;\n        ring.packedRingData = packedData;\n\n        /// If the ring is full, start a new ring\n        if (participants >= MAX_RING_PARTICIPANT) {\n            ring.ringHash = hashRing(amountTokenRecieved, ringIndex);\n            \n            /// Add new Ring pool\n            ringsNumber[amountTokenRecieved] += 1;\n        }\n\n        emit Deposited(msg.sender, amountTokenRecieved, ringIndex);\n    }\n\n\n    /// @notice Withdraw `amount` of `token` from the vault\n    /// @param recipient The address to send the withdrawn tokens to\n    /// @param amountToken The amount of `token` to withdraw\n    /// @param ringIndex The index of the ring to withdraw from\n    /// @param keyImage The key image of the participant\n    /// @param c0 signature\n    /// @param s signature\n    function withdraw(\n        address payable recipient, uint256 amountToken, uint256 ringIndex,\n        uint256 c0, uint256[2] memory keyImage, uint256[] memory s\n    ) public\n    {\n        Ring storage ring = rings[amountToken][ringIndex];\n\n        (uint wParticipants,\n        uint participants, uint blockNum) = getRingPackedData(ring.packedRingData);\n\n        if (recipient == address(0)) {\n            revert(\"ZERO_ADDRESS\");\n        }\n        \n        if (wParticipants >= MAX_RING_PARTICIPANT) {\n            revert(\"ALL_FUNDS_WITHDRAWN\");\n        }\n\n        if (ring.ringHash == bytes32(0x00)) {\n            revert(\"RING_NOT_CLOSED\");\n        }\n\n        uint256[2][] memory publicKeys = new uint256[2][](MAX_RING_PARTICIPANT);\n\n        for (uint256 i = 0; i < MAX_RING_PARTICIPANT;) {\n            publicKeys[i] = ring.publicKeys[i];\n            unchecked {\n                i++;\n            }\n        }\n\n        /// Attempts to verify ring signature\n        bool signatureVerified = LSAG.verify(\n            abi.encodePacked(ring.ringHash, recipient), // Convert to bytes\n            c0,\n            keyImage,\n            s,\n            publicKeys\n        );\n\n        if (!signatureVerified) {\n            revert(\"INVALID_SIGNATURE\");\n        }\n\n        /// Confirm key image is not already used (no double spends)\n        for (uint i = 0; i < wParticipants;) {\n            if (ring.keyImages[i][0] == keyImage[0] &&\n                ring.keyImages[i][1] == keyImage[1]) {\n                revert(\"USED_SIGNATURE\");\n            }\n\n            unchecked {\n                i++;\n            }\n        }    \n\n        ring.keyImages[wParticipants] = keyImage;\n        unchecked {\n            wParticipants++;\n        }\n\n        uint packedData = (wParticipants << _BITWIDTH_PARTICIPANTS) | participants;\n        packedData = (packedData << _BITWIDTH_BLOCK_NUM) | blockNum;\n        ring.packedRingData = packedData;  \n\n        ERC20(token).transfer(recipient, amountToken);\n\n        emit Withdrawn(recipient, amountToken, ringIndex);\n    }\n\n    /// @notice Generates a hash of the ring\n    /// @param _amountToken The amount of `token` in the ring\n    /// @param _ringIndex The index of the ring\n    function hashRing(uint256 _amountToken, uint256 _ringIndex) internal view\n        returns (bytes32)\n    {\n        uint256[2][MAX_RING_PARTICIPANT] memory publicKeys;\n        uint256 receivedToken = amountCheck(_amountToken);\n\n        Ring storage ring = rings[receivedToken][_ringIndex];\n\n        for (uint8 i = 0; i < MAX_RING_PARTICIPANT;) {\n            publicKeys[i] = ring.publicKeys[i];\n\n            unchecked {\n                i++;\n            }\n        }\n\n        (uint participants,, uint blockNum) = getRingPackedData(ring.packedRingData);\n\n        bytes memory b = abi.encodePacked(\n            blockhash(block.number - 1),\n            blockNum,\n            ring.amountDeposited,\n            participants,\n            publicKeys\n        );\n\n        return keccak256(b);\n    }\n\n    /// @notice Gets the hash of the ring\n    /// @param _amountToken The amount of `token` in the ring\n    /// @param _ringIndex The index of the ring\n    function getRingHash(uint256 _amountToken, uint256 _ringIndex) public view\n        returns (bytes32)\n    {\n        uint256 receivedToken = amountCheck(_amountToken);\n        return rings[receivedToken][_ringIndex].ringHash;\n    }\n\n    /// @notice Gets the total amount of `token` in the ring\n    function getPoolBalance() public view returns (uint256) {\n        return ERC20(token).balanceOf(address(this));\n    }\n\n    // =============================================================\n    //                           FLASH LOAN\n    // =============================================================\n\n    /// @notice Request a flash loan\n\t/// @param receiver The contract that will receive the flash loan\n\t/// @param amount The amount of tokens you want to borrow\n\t/// @param data Data to forward to the receiver contract along with your flash loan\n\t/// @dev Make sure your contract implements the FlashBorrower interface!\n\tfunction execute(\n\t\tFlashBorrower receiver,\n\t\tuint256 amount,\n\t\tbytes calldata data\n\t) public payable {\n        uint256 poolBalance = getPoolBalance();\n\n        if(poolBalance < amount) {\n            revert(\"INSUFFICIENT_FUNDS\");\n        }\n\n        uint256 fee = getLoanFee(amount);\n\n        emit Flashloan(receiver, amount);\n\n\t\tERC20(token).transfer(address(receiver), amount);\n\t\treceiver.onFlashLoan(amount, fee, data);\n\n\t\tif (poolBalance + fee > ERC20(token).balanceOf(address(this))){\n            revert(\"TOKENS_NOT_RETURNED\");\n        }\n\t}\n\n    /// @notice Gets the pool percentage from the flash loan\n    /// @param _amount The amount of tokens you want to borrow\n    function getLoanFee(uint _amount) public returns (uint) {\n        return (_amount * loanFee) / 10000;\n    }\n\n    // =============================================================\n    //                           UTILITIES\n    // =============================================================\n\n    /// @notice Checks if the amount sent is allowed\n    /// @param _amount The amount of token to check\n    function amountCheck(uint256 _amount) internal view\n        returns (uint256)\n    {\n        bool allowed = false;\n\n        for (uint256 i = 0; i < 10;) {\n            if (allowedAmounts[i] == _amount) {\n                allowed = true;\n            }\n            if (allowed) {\n                break;\n            }\n\n            unchecked {\n                i++;\n            }\n        }\n\n        // Revert if token sent isn't in the allowed fixed amounts\n        require(allowed, \"AMOUNT_NOT_ALLOWED\");\n        return _amount;\n    }\n\n    /// @notice Gets the public keys of the ring\n    /// @param amountToken The amount of `token` in the ring\n    /// @param ringIndex The index of the ring\n    function getPublicKeys(uint256 amountToken, uint256 ringIndex) public view\n        returns (bytes32[2][MAX_RING_PARTICIPANT] memory)\n    {\n        amountCheck(amountToken);\n\n        bytes32[2][MAX_RING_PARTICIPANT] memory publicKeys;\n\n        for (uint i = 0; i < MAX_RING_PARTICIPANT; i++) {\n            publicKeys[i][0] = bytes32(rings[amountToken][ringIndex].publicKeys[i][0]);\n            publicKeys[i][1] = bytes32(rings[amountToken][ringIndex].publicKeys[i][1]);\n        }\n\n        return publicKeys;\n    }\n\n    /// @notice Gets the unpacked, packed ring data\n    /// @param packedData The packed ring data\n    function getRingPackedData(uint packedData) public view returns (uint256, uint256, uint256){\n        uint256 p = packedData >> _BITWIDTH_BLOCK_NUM;\n        \n        return (\n            p >> _BITWIDTH_PARTICIPANTS,\n            p & _BITMASK_PARTICIPANTS,\n            packedData & _BITMASK_BLOCK_NUM\n        );\n    }\n\n    /// @notice Gets the number of participants that have withdrawn from the ring\n    /// @param packedData The packed ring data\n    function getWParticipant(uint256 packedData) public view returns (uint256){\n        return (packedData >> _BITWIDTH_BLOCK_NUM) >> _BITWIDTH_PARTICIPANTS;\n    }\n\n    /// @notice Gets the number of participants in the ring\n    /// @param packedData The packed ring data\n    function getParticipant(uint256 packedData) public view returns (uint256){\n        uint256 p = packedData >> _BITWIDTH_BLOCK_NUM;\n        \n        return p & _BITMASK_PARTICIPANTS;\n    }\n\n    /// @notice Gets the maximum number of participants in any ring\n    function getRingMaxParticipants() public pure\n        returns (uint256)\n    {\n        return MAX_RING_PARTICIPANT;\n    }\n\n    /// @notice Gets the lates ring index for `amountToken`\n    /// @param amountToken The amount of `token` in the ring\n    function getCurrentRingIndex(uint256 amountToken) public view\n        returns (uint256)\n    {\n        amountCheck(amountToken);\n        return ringsNumber[amountToken];\n    }\n}",
  "sourceMap": "222:13867:5:-:0;;;3125:1;3100:26;;222:13867;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/HettiPool.sol",
  "type": "contract"
}