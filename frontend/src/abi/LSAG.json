{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "b",
          "type": "bytes"
        }
      ],
      "name": "H1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "b",
          "type": "bytes"
        }
      ],
      "name": "H2",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "intToPoint",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "pubKey",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "s",
          "type": "uint256"
        }
      ],
      "name": "ringCalcZ1",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "keyImage",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "h",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "s",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "name": "ringCalcZ2",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "c0",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "keyImage",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[]",
          "name": "s",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[2][]",
          "name": "publicKeys",
          "type": "uint256[2][]"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/lib/AltBn128.sol",
    "2": "contracts/lib/LSAG.sol"
  },
  "ast": {
    "absolutePath": "contracts/lib/LSAG.sol",
    "exportedSymbols": {
      "AltBn128": [
        947
      ],
      "LSAG": [
        1273
      ]
    },
    "id": 1274,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 949,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/lib/AltBn128.sol",
        "file": "./AltBn128.sol",
        "id": 950,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 948,
        "src": "25:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LSAG",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1273,
        "linearizedBaseContracts": [
          1273
        ],
        "name": "LSAG",
        "nameLocation": "141:4:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "468:289:2",
              "statements": [
                {
                  "assignments": [
                    961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 961,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "486:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1001,
                      "src": "478:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 960,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "478:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 963,
                  "initialValue": {
                    "id": 962,
                    "name": "_x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 953,
                    "src": "490:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "478:14:2"
                },
                {
                  "assignments": [
                    965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 965,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "510:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1001,
                      "src": "502:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 964,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "502:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 966,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "502:9:2"
                },
                {
                  "assignments": [
                    968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 968,
                      "mutability": "mutable",
                      "name": "beta",
                      "nameLocation": "529:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1001,
                      "src": "521:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "521:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 969,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "521:12:2"
                },
                {
                  "body": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "557:194:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 971,
                                "name": "beta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 968,
                                "src": "572:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 972,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "578:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 973,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "571:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 976,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 961,
                                "src": "602:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 974,
                                "name": "AltBn128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "583:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                                  "typeString": "type(library AltBn128)"
                                }
                              },
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "evalCurve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 946,
                              "src": "583:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "583:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "571:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "ExpressionStatement",
                        "src": "571:33:2"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 982,
                              "name": "beta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "644:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 983,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 965,
                              "src": "650:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 980,
                              "name": "AltBn128",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "623:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                                "typeString": "type(library AltBn128)"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onCurveBeta",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 900,
                            "src": "623:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256) pure returns (bool)"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "623:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 990,
                        "nodeType": "IfStatement",
                        "src": "619:81:2",
                        "trueBody": {
                          "id": 989,
                          "nodeType": "Block",
                          "src": "654:46:2",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "id": 985,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "680:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 986,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 965,
                                    "src": "683:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 987,
                                "isConstant": false,
                                "isInlineArray": true,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "679:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "functionReturnParameters": 959,
                              "id": 988,
                              "nodeType": "Return",
                              "src": "672:13:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 991,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "714:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 994,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 961,
                                "src": "735:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "738:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 992,
                                "name": "AltBn128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "718:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                                  "typeString": "type(library AltBn128)"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addmodn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 831,
                              "src": "718:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "718:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "714:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 998,
                        "nodeType": "ExpressionStatement",
                        "src": "714:26:2"
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "551:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 1000,
                  "nodeType": "WhileStatement",
                  "src": "544:207:2"
                }
              ]
            },
            "documentation": {
              "id": 951,
              "nodeType": "StructuredDocumentation",
              "src": "316:63:2",
              "text": " Converts an integer to an elliptic curve point"
            },
            "functionSelector": "d6edde19",
            "id": 1002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "intToPoint",
            "nameLocation": "393:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "_x",
                  "nameLocation": "412:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "404:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:12:2"
            },
            "returnParameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "445:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 955,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "445:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 957,
                    "length": {
                      "hexValue": "32",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "453:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "445:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:19:2"
            },
            "scope": 1273,
            "src": "384:373:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1020,
              "nodeType": "Block",
              "src": "919:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1015,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1005,
                                "src": "968:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1014,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "958:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "958:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "950:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1012,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "950:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "950:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1010,
                        "name": "AltBn128",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "936:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                          "typeString": "type(library AltBn128)"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "modn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 843,
                      "src": "936:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1019,
                  "nodeType": "Return",
                  "src": "929:43:2"
                }
              ]
            },
            "documentation": {
              "id": 1003,
              "nodeType": "StructuredDocumentation",
              "src": "763:81:2",
              "text": " Returns an integer representation of the hash\n of the input"
            },
            "functionSelector": "9728de98",
            "id": 1021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "H1",
            "nameLocation": "858:2:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "874:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "861:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:16:2"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "906:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:9:2"
            },
            "scope": 1273,
            "src": "849:130:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "1176:41:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1033,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "1207:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1032,
                          "name": "H1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1021,
                          "src": "1204:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1204:5:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1031,
                      "name": "intToPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "1193:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256) view returns (uint256[2] memory)"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 1030,
                  "id": 1036,
                  "nodeType": "Return",
                  "src": "1186:24:2"
                }
              ]
            },
            "documentation": {
              "id": 1022,
              "nodeType": "StructuredDocumentation",
              "src": "985:106:2",
              "text": " Returns elliptic curve point of the integer representation\n of the hash of the input"
            },
            "functionSelector": "85d88a43",
            "id": 1038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "H2",
            "nameLocation": "1105:2:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1121:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1108:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:16:2"
            },
            "returnParameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1153:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1026,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1153:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1028,
                    "length": {
                      "hexValue": "32",
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1161:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1153:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:19:2"
            },
            "scope": 1273,
            "src": "1096:121:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "1462:119:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1058,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "1523:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1056,
                            "name": "AltBn128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "1507:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                              "typeString": "type(library AltBn128)"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ecMulG",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 802,
                          "src": "1507:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                            "typeString": "function (uint256) view returns (uint256[2] memory)"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1507:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1062,
                            "name": "pubKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "1554:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "id": 1063,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "1562:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1060,
                            "name": "AltBn128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "1539:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                              "typeString": "type(library AltBn128)"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ecMul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 785,
                          "src": "1539:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                            "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "id": 1054,
                        "name": "AltBn128",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "1479:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                          "typeString": "type(library AltBn128)"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ecAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 755,
                      "src": "1479:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory) view returns (uint256[2] memory)"
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:95:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 1053,
                  "id": 1066,
                  "nodeType": "Return",
                  "src": "1472:102:2"
                }
              ]
            },
            "documentation": {
              "id": 1039,
              "nodeType": "StructuredDocumentation",
              "src": "1223:84:2",
              "text": " Helper function to calculate Z1\n Avoids stack too deep problem"
            },
            "functionSelector": "2872d29a",
            "id": 1068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ringCalcZ1",
            "nameLocation": "1321:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "1359:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1341:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1040,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1341:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1042,
                    "length": {
                      "hexValue": "32",
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1349:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1341:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "1383:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1375:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1402:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1394:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:78:2"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1068,
                  "src": "1439:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1049,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1439:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1051,
                    "length": {
                      "hexValue": "32",
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1439:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1438:19:2"
            },
            "scope": 1273,
            "src": "1312:269:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "1857:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1092,
                            "name": "h",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "1917:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "id": 1093,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "1920:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1090,
                            "name": "AltBn128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "1902:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                              "typeString": "type(library AltBn128)"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ecMul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 785,
                          "src": "1902:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                            "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1902:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1097,
                            "name": "keyImage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "1951:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "id": 1098,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "1961:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1095,
                            "name": "AltBn128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "1936:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                              "typeString": "type(library AltBn128)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ecMul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 785,
                          "src": "1936:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                            "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1936:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "id": 1088,
                        "name": "AltBn128",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "1874:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AltBn128_$947_$",
                          "typeString": "type(library AltBn128)"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ecAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 755,
                      "src": "1874:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory) view returns (uint256[2] memory)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:99:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 1087,
                  "id": 1101,
                  "nodeType": "Return",
                  "src": "1867:106:2"
                }
              ]
            },
            "documentation": {
              "id": 1069,
              "nodeType": "StructuredDocumentation",
              "src": "1587:84:2",
              "text": " Helper function to calculate Z2\n Avoids stack too deep problem"
            },
            "functionSelector": "36c91c05",
            "id": 1103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ringCalcZ2",
            "nameLocation": "1685:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "keyImage",
                  "nameLocation": "1723:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "1705:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1070,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1072,
                    "length": {
                      "hexValue": "32",
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1713:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1705:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "h",
                  "nameLocation": "1759:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "1741:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1074,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1741:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1076,
                    "length": {
                      "hexValue": "32",
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1749:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1741:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1778:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "1770:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "1797:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "1789:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1695:109:2"
            },
            "returnParameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "1834:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1083,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1834:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1085,
                    "length": {
                      "hexValue": "32",
                      "id": 1084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1842:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1834:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:19:2"
            },
            "scope": 1273,
            "src": "1676:304:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "2319:1276:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1126,
                            "name": "publicKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "2337:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[2] memory[] memory"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2337:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2358:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2337:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5369676e61747572652073697a6520746f6f20736d616c6c",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2361:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1cd0afb440e018b7a67fba9742102c05aa6bca79e337afd988daba03fb571c1",
                          "typeString": "literal_string \"Signature size too small\""
                        },
                        "value": "Signature size too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1cd0afb440e018b7a67fba9742102c05aa6bca79e337afd988daba03fb571c1",
                          "typeString": "literal_string \"Signature size too small\""
                        }
                      ],
                      "id": 1125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2329:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2329:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1134,
                            "name": "publicKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "2406:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[2] memory[] memory"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2406:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1136,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "2427:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2427:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2406:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5369676e61747572652073697a657320646f206e6f74206d6174636821",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2437:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f501dc3294ed158f434bc066f53f10e3fea6c537e2a23b8555646ee77de5b80a",
                          "typeString": "literal_string \"Signature sizes do not match!\""
                        },
                        "value": "Signature sizes do not match!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f501dc3294ed158f434bc066f53f10e3fea6c537e2a23b8555646ee77de5b80a",
                          "typeString": "literal_string \"Signature sizes do not match!\""
                        }
                      ],
                      "id": 1133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2398:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:71:2"
                },
                {
                  "assignments": [
                    1143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1143,
                      "mutability": "mutable",
                      "name": "c",
                      "nameLocation": "2488:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "2480:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2480:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1145,
                  "initialValue": {
                    "id": 1144,
                    "name": "c0",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "2492:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2480:14:2"
                },
                {
                  "assignments": [
                    1147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1147,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2512:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "2504:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2504:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1149,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2516:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2504:13:2"
                },
                {
                  "assignments": [
                    1151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1151,
                      "mutability": "mutable",
                      "name": "hBytes",
                      "nameLocation": "2599:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "2586:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1150,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2586:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1153,
                  "initialValue": {
                    "hexValue": "",
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2608:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2586:24:2"
                },
                {
                  "body": {
                    "id": 1175,
                    "nodeType": "Block",
                    "src": "2661:119:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1165,
                            "name": "hBytes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "2675:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1168,
                                "name": "hBytes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "2718:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1169,
                                  "name": "publicKeys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1120,
                                  "src": "2742:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "uint256[2] memory[] memory"
                                  }
                                },
                                "id": 1171,
                                "indexExpression": {
                                  "id": 1170,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "2753:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2742:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "expression": {
                                "id": 1166,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2684:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2684:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2684:85:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2675:94:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
                        "src": "2675:94:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1158,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "2633:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1159,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "2637:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2637:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2633:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1176,
                  "initializationExpression": {
                    "expression": {
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1154,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "2626:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2630:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2626:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1157,
                    "nodeType": "ExpressionStatement",
                    "src": "2626:5:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2656:3:2",
                      "subExpression": {
                        "id": 1162,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "2656:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1164,
                    "nodeType": "ExpressionStatement",
                    "src": "2656:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2621:159:2"
                },
                {
                  "assignments": [
                    1182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "h",
                      "nameLocation": "2808:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "2790:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2790:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1181,
                        "length": {
                          "hexValue": "32",
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2798:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2790:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1186,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1184,
                        "name": "hBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "2815:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1183,
                      "name": "H2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "2812:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[2] memory)"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2790:32:2"
                },
                {
                  "assignments": [
                    1192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "z_1",
                      "nameLocation": "2869:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "2851:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2851:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1191,
                        "length": {
                          "hexValue": "32",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2859:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2851:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1193,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2851:21:2"
                },
                {
                  "assignments": [
                    1199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1199,
                      "mutability": "mutable",
                      "name": "z_2",
                      "nameLocation": "2900:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "2882:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1198,
                        "length": {
                          "hexValue": "32",
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2890:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2882:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1200,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2882:21:2"
                },
                {
                  "body": {
                    "id": 1256,
                    "nodeType": "Block",
                    "src": "2955:437:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1212,
                            "name": "z_1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "2969:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1214,
                                  "name": "publicKeys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1120,
                                  "src": "2986:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "uint256[2] memory[] memory"
                                  }
                                },
                                "id": 1216,
                                "indexExpression": {
                                  "id": 1215,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "2997:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2986:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              {
                                "id": 1217,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1143,
                                "src": "3001:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1218,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3004:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1220,
                                "indexExpression": {
                                  "id": 1219,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "3006:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3004:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1213,
                              "name": "ringCalcZ1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "2975:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                                "typeString": "function (uint256[2] memory,uint256,uint256) view returns (uint256[2] memory)"
                              }
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2975:34:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "src": "2969:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 1223,
                        "nodeType": "ExpressionStatement",
                        "src": "2969:40:2"
                      },
                      {
                        "expression": {
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1224,
                            "name": "z_2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "3023:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1226,
                                "name": "keyImage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1112,
                                "src": "3040:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              {
                                "id": 1227,
                                "name": "h",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1182,
                                "src": "3050:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1228,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "3053:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1230,
                                "indexExpression": {
                                  "id": 1229,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "3055:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3053:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1231,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1143,
                                "src": "3059:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1225,
                              "name": "ringCalcZ2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "3029:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                                "typeString": "function (uint256[2] memory,uint256[2] memory,uint256,uint256) view returns (uint256[2] memory)"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3029:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "src": "3023:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 1234,
                        "nodeType": "ExpressionStatement",
                        "src": "3023:38:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1235,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "3080:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1236,
                                "name": "publicKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "3085:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "uint256[2] memory[] memory"
                                }
                              },
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3085:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3105:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3085:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3080:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1255,
                        "nodeType": "IfStatement",
                        "src": "3076:306:2",
                        "trueBody": {
                          "id": 1254,
                          "nodeType": "Block",
                          "src": "3108:274:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1241,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1143,
                                  "src": "3126:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1245,
                                          "name": "hBytes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1151,
                                          "src": "3196:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "id": 1246,
                                          "name": "keyImage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1112,
                                          "src": "3228:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          }
                                        },
                                        {
                                          "id": 1247,
                                          "name": "message",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1106,
                                          "src": "3262:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "id": 1248,
                                          "name": "z_1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1192,
                                          "src": "3295:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          }
                                        },
                                        {
                                          "id": 1249,
                                          "name": "z_2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1199,
                                          "src": "3324:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          },
                                          {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1243,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "3154:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1244,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "3154:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3154:195:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1242,
                                    "name": "H1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1021,
                                    "src": "3130:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                      "typeString": "function (bytes memory) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3130:237:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3126:241:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1253,
                              "nodeType": "ExpressionStatement",
                              "src": "3126:241:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1205,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "2927:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1206,
                        "name": "publicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "2931:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[2] memory[] memory"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2931:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2927:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1257,
                  "initializationExpression": {
                    "expression": {
                      "id": 1203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1201,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "2920:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2924:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2920:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1204,
                    "nodeType": "ExpressionStatement",
                    "src": "2920:5:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2950:3:2",
                      "subExpression": {
                        "id": 1209,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "2950:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1211,
                    "nodeType": "ExpressionStatement",
                    "src": "2950:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2915:477:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1258,
                      "name": "c0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "3409:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1262,
                              "name": "hBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1151,
                              "src": "3465:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1263,
                              "name": "keyImage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "3489:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "id": 1264,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "3515:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1265,
                              "name": "z_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "3540:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "id": 1266,
                              "name": "z_2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "3561:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            ],
                            "expression": {
                              "id": 1260,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3431:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3431:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3431:147:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1259,
                        "name": "H1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1021,
                        "src": "3415:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (bytes memory) pure returns (uint256)"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3415:173:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3409:179:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1124,
                  "id": 1270,
                  "nodeType": "Return",
                  "src": "3402:186:2"
                }
              ]
            },
            "documentation": {
              "id": 1104,
              "nodeType": "StructuredDocumentation",
              "src": "1987:112:2",
              "text": " Verifies the ring signature\n Section 4.2 of the paper https://eprint.iacr.org/2004/027.pdf"
            },
            "functionSelector": "fe46a2b2",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "2113:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2142:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "2129:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "c0",
                  "nameLocation": "2167:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "2159:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "keyImage",
                  "nameLocation": "2197:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "2179:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1109,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1111,
                    "length": {
                      "hexValue": "32",
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2187:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2179:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2232:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "2215:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1113,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2215:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1114,
                    "nodeType": "ArrayTypeName",
                    "src": "2215:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "publicKeys",
                  "nameLocation": "2263:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "2243:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[2][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1116,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2243:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1118,
                      "length": {
                        "hexValue": "32",
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2251:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2243:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 1119,
                    "nodeType": "ArrayTypeName",
                    "src": "2243:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                      "typeString": "uint256[2][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:160:2"
            },
            "returnParameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "2309:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:6:2"
            },
            "scope": 1273,
            "src": "2104:1491:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1274,
        "src": "133:3464:2",
        "usedErrors": []
      }
    ],
    "src": "0:3597:2"
  },
  "bytecode": "610e6661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80632872d29a1461007157806336c91c051461009a57806385d88a43146100ad5780639728de98146100c0578063d6edde19146100e1578063fe46a2b2146100f4575b600080fd5b61008461007f36600461093f565b610117565b604051610091919061099c565b60405180910390f35b6100846100a83660046109aa565b61027a565b6100846100bb366004610a5e565b6103f4565b6100d36100ce366004610a5e565b61040e565b604051908152602001610091565b6100846100ef366004610a9b565b610492565b610107610102366004610b4c565b610633565b6040519015158152602001610091565b61011f610861565b6040516308b86e6360e31b81526004810183905273__AltBn128______________________________9063a867d0ca9082906345c37318906024016040805180830381865af4158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190610c44565b604051631c778dc960e21b815273__AltBn128______________________________906371de3724906101d3908a908a90600401610c99565b6040805180830381865af41580156101ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102139190610c44565b6040518363ffffffff1660e01b8152600401610230929190610cb4565b6040805180830381865af415801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190610c44565b90505b9392505050565b610282610861565b73__AltBn128______________________________63a867d0ca73__AltBn128______________________________6371de372487876040518363ffffffff1660e01b81526004016102d5929190610c99565b6040805180830381865af41580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190610c44565b604051631c778dc960e21b815273__AltBn128______________________________906371de37249061034e908b908990600401610c99565b6040805180830381865af415801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190610c44565b6040518363ffffffff1660e01b81526004016103ab929190610cb4565b6040805180830381865af41580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610c44565b95945050505050565b6103fc610861565b6104086100ef8361040e565b92915050565b80516020820120604051634f06f27960e01b815260009173__AltBn128______________________________91634f06f279916104519160040190815260200190565b602060405180830381865af415801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610ccf565b61049a610861565b816000805b60405163c690219b60e01b81526004810184905273__AltBn128______________________________9063c690219b906024016040805180830381865af41580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190610ce8565b6040516340eeb4ff60e11b8152600481018390526024810182905290935090915073__AltBn128______________________________906381dd69fe90604401602060405180830381865af415801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190610d0c565b156105b1575060408051808201909152918252602082015292915050565b6040516373b7712160e11b8152600481018490526001602482015273__AltBn128______________________________9063e76ee24290604401602060405180830381865af4158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610ccf565b925061049f565b600060028251101561068c5760405162461bcd60e51b815260206004820152601860248201527f5369676e61747572652073697a6520746f6f20736d616c6c000000000000000060448201526064015b60405180910390fd5b82518251146106dd5760405162461bcd60e51b815260206004820152601d60248201527f5369676e61747572652073697a657320646f206e6f74206d61746368210000006044820152606401610683565b6040805160208101909152600080825286915b8451821015610749578085838151811061070c5761070c610d2e565b6020026020010151604051602001610725929190610d7f565b6040516020818303038152906040529050818061074190610db6565b9250506106f0565b6000610754826103f4565b905061075e610861565b610766610861565b600094505b8751851015610833576107b188868151811061078957610789610d2e565b6020026020010151878b88815181106107a4576107a4610d2e565b6020026020010151610117565b91506107d88a848b88815181106107ca576107ca610d2e565b60200260200101518961027a565b9050600188516107e89190610dcf565b85146108215761081e848b8e858560405160200161080a959493929190610de6565b60405160208183030381529060405261040e565b95505b8461082b81610db6565b95505061076b565b61084f848b8e858560405160200161080a959493929190610de6565b909a149b9a5050505050505050505050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156108b8576108b861087f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108e7576108e761087f565b604052919050565b600082601f83011261090057600080fd5b610908610895565b80604084018581111561091a57600080fd5b845b8181101561093457803584526020938401930161091c565b509095945050505050565b60008060006080848603121561095457600080fd5b61095e85856108ef565b95604085013595506060909401359392505050565b8060005b6002811015610996578151845260209384019390910190600101610977565b50505050565b604081016104088284610973565b60008060008060c085870312156109c057600080fd5b6109ca86866108ef565b93506109d986604087016108ef565b939693955050505060808201359160a0013590565b600082601f8301126109ff57600080fd5b813567ffffffffffffffff811115610a1957610a1961087f565b610a2c601f8201601f19166020016108be565b818152846020838601011115610a4157600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610a7057600080fd5b813567ffffffffffffffff811115610a8757600080fd5b610a93848285016109ee565b949350505050565b600060208284031215610aad57600080fd5b5035919050565b600067ffffffffffffffff821115610ace57610ace61087f565b5060051b60200190565b600082601f830112610ae957600080fd5b81356020610afe610af983610ab4565b6108be565b82815260069290921b84018101918181019086841115610b1d57600080fd5b8286015b84811015610b4157610b3388826108ef565b835291830191604001610b21565b509695505050505050565b600080600080600060c08688031215610b6457600080fd5b853567ffffffffffffffff80821115610b7c57600080fd5b610b8889838a016109ee565b965060209150818801359550610ba18960408a016108ef565b9450608088013581811115610bb557600080fd5b8801601f81018a13610bc657600080fd5b8035610bd4610af982610ab4565b81815260059190911b8201840190848101908c831115610bf357600080fd5b928501925b82841015610c1157833582529285019290850190610bf8565b965050505060a0880135915080821115610c2a57600080fd5b50610c3788828901610ad8565b9150509295509295909350565b600060408284031215610c5657600080fd5b82601f830112610c6557600080fd5b610c6d610895565b806040840185811115610c7f57600080fd5b845b81811015610934578051845260209384019301610c81565b60608101610ca78285610973565b8260408301529392505050565b60808101610cc28285610973565b6102736040830184610973565b600060208284031215610ce157600080fd5b5051919050565b60008060408385031215610cfb57600080fd5b505080516020909101519092909150565b600060208284031215610d1e57600080fd5b8151801515811461027357600080fd5b634e487b7160e01b600052603260045260246000fd5b6000815160005b81811015610d655760208185018101518683015201610d4b565b81811115610d74576000828601525b509290920192915050565b6000610d8b8285610d44565b610d958185610973565b604001949350505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610dc857610dc8610da0565b5060010190565b600082821015610de157610de1610da0565b500390565b6000610df28288610d44565b610dfc8188610973565b610e096040820187610d44565b9050610e158186610973565b610e226040820185610973565b60800197965050505050505056fea264697066735822122045d37a93bd0f3480497d490ac9ba94995b16da9c0144da492816c79db955429164736f6c634300080d0033",
  "bytecodeSha1": "ebba322aa97fbede6da54dc3b9e27e050ede2fe1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "LSAG",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {
        "LSAG.intToPoint": {
          "17": [
            623,
            652,
            false
          ]
        },
        "LSAG.verify": {
          "18": [
            2337,
            2359,
            true
          ],
          "19": [
            2406,
            2435,
            true
          ],
          "20": [
            3080,
            3106,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "2": {
        "LSAG.H1": {
          "3": [
            929,
            972
          ]
        },
        "LSAG.H2": {
          "2": [
            1186,
            1210
          ]
        },
        "LSAG.intToPoint": {
          "4": [
            571,
            604
          ],
          "5": [
            672,
            685
          ],
          "6": [
            714,
            740
          ]
        },
        "LSAG.ringCalcZ1": {
          "0": [
            1472,
            1574
          ]
        },
        "LSAG.ringCalcZ2": {
          "1": [
            1867,
            1973
          ]
        },
        "LSAG.verify": {
          "7": [
            2329,
            2388
          ],
          "8": [
            2398,
            2469
          ],
          "9": [
            2675,
            2769
          ],
          "10": [
            2656,
            2659
          ],
          "11": [
            2920,
            2925
          ],
          "12": [
            2969,
            3009
          ],
          "13": [
            3023,
            3061
          ],
          "14": [
            3126,
            3367
          ],
          "15": [
            2950,
            2953
          ],
          "16": [
            3402,
            3588
          ]
        }
      }
    }
  },
  "dependencies": [
    "AltBn128"
  ],
  "deployedBytecode": "730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80632872d29a1461007157806336c91c051461009a57806385d88a43146100ad5780639728de98146100c0578063d6edde19146100e1578063fe46a2b2146100f4575b600080fd5b61008461007f36600461093f565b610117565b604051610091919061099c565b60405180910390f35b6100846100a83660046109aa565b61027a565b6100846100bb366004610a5e565b6103f4565b6100d36100ce366004610a5e565b61040e565b604051908152602001610091565b6100846100ef366004610a9b565b610492565b610107610102366004610b4c565b610633565b6040519015158152602001610091565b61011f610861565b6040516308b86e6360e31b81526004810183905273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063a867d0ca9082906345c37318906024016040805180830381865af4158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190610c44565b604051631c778dc960e21b815273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__906371de3724906101d3908a908a90600401610c99565b6040805180830381865af41580156101ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102139190610c44565b6040518363ffffffff1660e01b8152600401610230929190610cb4565b6040805180830381865af415801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190610c44565b90505b9392505050565b610282610861565b73__$0769e4187bae5c4f4cd6ae56e4ede5e405$__63a867d0ca73__$0769e4187bae5c4f4cd6ae56e4ede5e405$__6371de372487876040518363ffffffff1660e01b81526004016102d5929190610c99565b6040805180830381865af41580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190610c44565b604051631c778dc960e21b815273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__906371de37249061034e908b908990600401610c99565b6040805180830381865af415801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190610c44565b6040518363ffffffff1660e01b81526004016103ab929190610cb4565b6040805180830381865af41580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610c44565b95945050505050565b6103fc610861565b6104086100ef8361040e565b92915050565b80516020820120604051634f06f27960e01b815260009173__$0769e4187bae5c4f4cd6ae56e4ede5e405$__91634f06f279916104519160040190815260200190565b602060405180830381865af415801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610ccf565b61049a610861565b816000805b60405163c690219b60e01b81526004810184905273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063c690219b906024016040805180830381865af41580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190610ce8565b6040516340eeb4ff60e11b8152600481018390526024810182905290935090915073__$0769e4187bae5c4f4cd6ae56e4ede5e405$__906381dd69fe90604401602060405180830381865af415801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190610d0c565b156105b1575060408051808201909152918252602082015292915050565b6040516373b7712160e11b8152600481018490526001602482015273__$0769e4187bae5c4f4cd6ae56e4ede5e405$__9063e76ee24290604401602060405180830381865af4158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610ccf565b925061049f565b600060028251101561068c5760405162461bcd60e51b815260206004820152601860248201527f5369676e61747572652073697a6520746f6f20736d616c6c000000000000000060448201526064015b60405180910390fd5b82518251146106dd5760405162461bcd60e51b815260206004820152601d60248201527f5369676e61747572652073697a657320646f206e6f74206d61746368210000006044820152606401610683565b6040805160208101909152600080825286915b8451821015610749578085838151811061070c5761070c610d2e565b6020026020010151604051602001610725929190610d7f565b6040516020818303038152906040529050818061074190610db6565b9250506106f0565b6000610754826103f4565b905061075e610861565b610766610861565b600094505b8751851015610833576107b188868151811061078957610789610d2e565b6020026020010151878b88815181106107a4576107a4610d2e565b6020026020010151610117565b91506107d88a848b88815181106107ca576107ca610d2e565b60200260200101518961027a565b9050600188516107e89190610dcf565b85146108215761081e848b8e858560405160200161080a959493929190610de6565b60405160208183030381529060405261040e565b95505b8461082b81610db6565b95505061076b565b61084f848b8e858560405160200161080a959493929190610de6565b909a149b9a5050505050505050505050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156108b8576108b861087f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108e7576108e761087f565b604052919050565b600082601f83011261090057600080fd5b610908610895565b80604084018581111561091a57600080fd5b845b8181101561093457803584526020938401930161091c565b509095945050505050565b60008060006080848603121561095457600080fd5b61095e85856108ef565b95604085013595506060909401359392505050565b8060005b6002811015610996578151845260209384019390910190600101610977565b50505050565b604081016104088284610973565b60008060008060c085870312156109c057600080fd5b6109ca86866108ef565b93506109d986604087016108ef565b939693955050505060808201359160a0013590565b600082601f8301126109ff57600080fd5b813567ffffffffffffffff811115610a1957610a1961087f565b610a2c601f8201601f19166020016108be565b818152846020838601011115610a4157600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610a7057600080fd5b813567ffffffffffffffff811115610a8757600080fd5b610a93848285016109ee565b949350505050565b600060208284031215610aad57600080fd5b5035919050565b600067ffffffffffffffff821115610ace57610ace61087f565b5060051b60200190565b600082601f830112610ae957600080fd5b81356020610afe610af983610ab4565b6108be565b82815260069290921b84018101918181019086841115610b1d57600080fd5b8286015b84811015610b4157610b3388826108ef565b835291830191604001610b21565b509695505050505050565b600080600080600060c08688031215610b6457600080fd5b853567ffffffffffffffff80821115610b7c57600080fd5b610b8889838a016109ee565b965060209150818801359550610ba18960408a016108ef565b9450608088013581811115610bb557600080fd5b8801601f81018a13610bc657600080fd5b8035610bd4610af982610ab4565b81815260059190911b8201840190848101908c831115610bf357600080fd5b928501925b82841015610c1157833582529285019290850190610bf8565b965050505060a0880135915080821115610c2a57600080fd5b50610c3788828901610ad8565b9150509295509295909350565b600060408284031215610c5657600080fd5b82601f830112610c6557600080fd5b610c6d610895565b806040840185811115610c7f57600080fd5b845b81811015610934578051845260209384019301610c81565b60608101610ca78285610973565b8260408301529392505050565b60808101610cc28285610973565b6102736040830184610973565b600060208284031215610ce157600080fd5b5051919050565b60008060408385031215610cfb57600080fd5b505080516020909101519092909150565b600060208284031215610d1e57600080fd5b8151801515811461027357600080fd5b634e487b7160e01b600052603260045260246000fd5b6000815160005b81811015610d655760208185018101518683015201610d4b565b81811115610d74576000828601525b509290920192915050565b6000610d8b8285610d44565b610d958185610973565b604001949350505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610dc857610dc8610da0565b5060010190565b600082821015610de157610de1610da0565b500390565b6000610df28288610d44565b610dfc8188610973565b610e096040820187610d44565b9050610e158186610973565b610e226040820185610973565b60800197965050505050505056fea264697066735822122045d37a93bd0f3480497d490ac9ba94995b16da9c0144da492816c79db955429164736f6c634300080d0033",
  "deployedSourceMap": "133:3464:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:269;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:304;;;;;;:::i;:::-;;:::i;1096:121::-;;;;;;:::i;:::-;;:::i;849:130::-;;;;;;:::i;:::-;;:::i;:::-;;;3638:25:3;;;3626:2;3611:18;849:130:2;3484:185:3;384:373:2;;;;;;:::i;:::-;;:::i;2104:1491::-;;;;;;:::i;:::-;;:::i;:::-;;;6465:14:3;;6458:22;6440:41;;6428:2;6413:18;2104:1491:2;6292:195:3;1312:269:2;1439:17;;:::i;:::-;1507:18;;-1:-1:-1;;;1507:18:2;;;;;3638:25:3;;;1479:8:2;;:14;;:8;;1507:15;;3611:18:3;;1507::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1539:25;;-1:-1:-1;;;1539:25:2;;:8;;:14;;:25;;1554:6;;1562:1;;1539:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1479:95;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1472:102;;1312:269;;;;;;:::o;1676:304::-;1834:17;;:::i;:::-;1874:8;:14;1902:8;:14;1917:1;1920;1902:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1936:27;;-1:-1:-1;;;1936:27:2;;:8;;:14;;:27;;1951:8;;1961:1;;1936:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1874:99;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1867:106;1676:304;-1:-1:-1;;;;;1676:304:2:o;1096:121::-;1153:17;;:::i;:::-;1193;1204:5;1207:1;1204:2;:5::i;1193:17::-;1186:24;1096:121;-1:-1:-1;;1096:121:2:o;849:130::-;958:12;;;;;;936:36;;-1:-1:-1;;;936:36:2;;906:7;;936:8;;:13;;:36;;;;3638:25:3;;;3626:2;3611:18;;3484:185;936:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;384:373::-;445:17;;:::i;:::-;490:2;478:9;;544:207;583:21;;-1:-1:-1;;;583:21:2;;;;;3638:25:3;;;583:8:2;;:18;;3611::3;;583:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;623:29;;-1:-1:-1;;;623:29:2;;;;;8466:25:3;;;8507:18;;;8500:34;;;571:33:2;;-1:-1:-1;571:33:2;;-1:-1:-1;623:8:2;;:20;;8439:18:3;;623:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:81;;;-1:-1:-1;672:13:2;;;;;;;;;;;;;;;;;384:373;-1:-1:-1;;384:373:2:o;619:81::-;718:22;;-1:-1:-1;;;718:22:2;;;;;8466:25:3;;;738:1:2;8507:18:3;;;8500:34;718:8:2;;:16;;8439:18:3;;718:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;714:26;;544:207;;2104:1491;2309:4;2358:1;2337:10;:17;:22;;2329:59;;;;-1:-1:-1;;;2329:59:2;;9298:2:3;2329:59:2;;;9280:21:3;9337:2;9317:18;;;9310:30;9376:26;9356:18;;;9349:54;9420:18;;2329:59:2;;;;;;;;;2427:1;:8;2406:10;:17;:29;2398:71;;;;-1:-1:-1;;;2398:71:2;;9651:2:3;2398:71:2;;;9633:21:3;9690:2;9670:18;;;9663:30;9729:31;9709:18;;;9702:59;9778:18;;2398:71:2;9449:353:3;2398:71:2;2586:24;;;;;;;;;2480:9;2586:24;;;2492:2;;2621:159;2637:10;:17;2633:1;:21;2621:159;;;2718:6;2742:10;2753:1;2742:13;;;;;;;;:::i;:::-;;;;;;;2684:85;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2675:94;;2656:3;;;;;:::i;:::-;;;;2621:159;;;2790:19;2812:10;2815:6;2812:2;:10::i;:::-;2790:32;;2851:21;;:::i;:::-;2882;;:::i;:::-;2924:1;2920:5;;2915:477;2931:10;:17;2927:1;:21;2915:477;;;2975:34;2986:10;2997:1;2986:13;;;;;;;;:::i;:::-;;;;;;;3001:1;3004;3006;3004:4;;;;;;;;:::i;:::-;;;;;;;2975:10;:34::i;:::-;2969:40;;3029:32;3040:8;3050:1;3053;3055;3053:4;;;;;;;;:::i;:::-;;;;;;;3059:1;3029:10;:32::i;:::-;3023:38;;3105:1;3085:10;:17;:21;;;;:::i;:::-;3080:1;:26;3076:306;;3130:237;3196:6;3228:8;3262:7;3295:3;3324;3154:195;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3130:2;:237::i;:::-;3126:241;;3076:306;2950:3;;;;:::i;:::-;;;;2915:477;;;3415:173;3465:6;3489:8;3515:7;3540:3;3561;3431:147;;;;;;;;;;;;:::i;3415:173::-;3409:179;;;;2104:1491;-1:-1:-1;;;;;;;;;;;2104:1491:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:3:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:251;218:2;212:9;;;248:15;;293:18;278:34;;314:22;;;275:62;272:88;;;340:18;;:::i;:::-;376:2;369:22;146:251;:::o;402:275::-;473:2;467:9;538:2;519:13;;-1:-1:-1;;515:27:3;503:40;;573:18;558:34;;594:22;;;555:62;552:88;;;620:18;;:::i;:::-;656:2;649:22;402:275;;-1:-1:-1;402:275:3:o;682:484::-;732:5;785:3;778:4;770:6;766:17;762:27;752:55;;803:1;800;793:12;752:55;827:22;;:::i;:::-;871:3;909:2;901:6;897:15;935:3;927:6;924:15;921:35;;;952:1;949;942:12;921:35;976:6;991:146;1007:6;1002:3;999:15;991:146;;;1075:17;;1063:30;;1122:4;1113:14;;;;1024;991:146;;;-1:-1:-1;1155:5:3;;682:484;-1:-1:-1;;;;;682:484:3:o;1171:361::-;1271:6;1279;1287;1340:3;1328:9;1319:7;1315:23;1311:33;1308:53;;;1357:1;1354;1347:12;1308:53;1380:44;1416:7;1405:9;1380:44;:::i;:::-;1370:54;1471:2;1456:18;;1443:32;;-1:-1:-1;1522:2:3;1507:18;;;1494:32;;1171:361;-1:-1:-1;;;1171:361:3:o;1537:337::-;1641:5;1664:1;1674:194;1688:4;1685:1;1682:11;1674:194;;;1747:13;;1735:26;;1784:4;1808:12;;;;1843:15;;;;1708:1;1701:9;1674:194;;;1678:3;;1537:337;;:::o;1879:260::-;2067:2;2052:18;;2079:54;2056:9;2115:6;2079:54;:::i;2144:475::-;2276:6;2284;2292;2300;2353:3;2341:9;2332:7;2328:23;2324:33;2321:53;;;2370:1;2367;2360:12;2321:53;2393:44;2429:7;2418:9;2393:44;:::i;:::-;2383:54;;2456:53;2501:7;2496:2;2485:9;2481:18;2456:53;:::i;:::-;2144:475;;2446:63;;-1:-1:-1;;;;2556:3:3;2541:19;;2528:33;;2608:3;2593:19;2580:33;;2144:475::o;2624:530::-;2666:5;2719:3;2712:4;2704:6;2700:17;2696:27;2686:55;;2737:1;2734;2727:12;2686:55;2773:6;2760:20;2799:18;2795:2;2792:26;2789:52;;;2821:18;;:::i;:::-;2865:55;2908:2;2889:13;;-1:-1:-1;;2885:27:3;2914:4;2881:38;2865:55;:::i;:::-;2945:2;2936:7;2929:19;2991:3;2984:4;2979:2;2971:6;2967:15;2963:26;2960:35;2957:55;;;3008:1;3005;2998:12;2957:55;3073:2;3066:4;3058:6;3054:17;3047:4;3038:7;3034:18;3021:55;3121:1;3096:16;;;3114:4;3092:27;3085:38;;;;3100:7;2624:530;-1:-1:-1;;;2624:530:3:o;3159:320::-;3227:6;3280:2;3268:9;3259:7;3255:23;3251:32;3248:52;;;3296:1;3293;3286:12;3248:52;3336:9;3323:23;3369:18;3361:6;3358:30;3355:50;;;3401:1;3398;3391:12;3355:50;3424:49;3465:7;3456:6;3445:9;3441:22;3424:49;:::i;:::-;3414:59;3159:320;-1:-1:-1;;;;3159:320:3:o;3674:180::-;3733:6;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;-1:-1:-1;3825:23:3;;3674:180;-1:-1:-1;3674:180:3:o;3859:183::-;3919:4;3952:18;3944:6;3941:30;3938:56;;;3974:18;;:::i;:::-;-1:-1:-1;4019:1:3;4015:14;4031:4;4011:25;;3859:183::o;4047:687::-;4107:5;4160:3;4153:4;4145:6;4141:17;4137:27;4127:55;;4178:1;4175;4168:12;4127:55;4214:6;4201:20;4240:4;4264:60;4280:43;4320:2;4280:43;:::i;:::-;4264:60;:::i;:::-;4358:15;;;4444:1;4440:10;;;;4428:23;;4424:32;;;4389:12;;;;4468:15;;;4465:35;;;4496:1;4493;4486:12;4465:35;4532:2;4524:6;4520:15;4544:161;4560:6;4555:3;4552:15;4544:161;;;4628:34;4658:3;4653;4628:34;:::i;:::-;4616:47;;4683:12;;;;4586:4;4577:14;4544:161;;;-1:-1:-1;4723:5:3;4047:687;-1:-1:-1;;;;;;4047:687:3:o;4739:1548::-;4939:6;4947;4955;4963;4971;5024:3;5012:9;5003:7;4999:23;4995:33;4992:53;;;5041:1;5038;5031:12;4992:53;5081:9;5068:23;5110:18;5151:2;5143:6;5140:14;5137:34;;;5167:1;5164;5157:12;5137:34;5190:49;5231:7;5222:6;5211:9;5207:22;5190:49;:::i;:::-;5180:59;;5258:2;5248:12;;5307:2;5296:9;5292:18;5279:32;5269:42;;5330:53;5375:7;5370:2;5359:9;5355:18;5330:53;:::i;:::-;5320:63;;5436:3;5425:9;5421:19;5408:33;5466:2;5456:8;5453:16;5450:36;;;5482:1;5479;5472:12;5450:36;5505:24;;5560:4;5552:13;;5548:27;-1:-1:-1;5538:55:3;;5589:1;5586;5579:12;5538:55;5625:2;5612:16;5648:60;5664:43;5704:2;5664:43;:::i;5648:60::-;5742:15;;;5824:1;5820:10;;;;5812:19;;5808:28;;;5773:12;;;;5848:19;;;5845:39;;;5880:1;5877;5870:12;5845:39;5904:11;;;;5924:142;5940:6;5935:3;5932:15;5924:142;;;6006:17;;5994:30;;5957:12;;;;6044;;;;5924:142;;;6085:5;-1:-1:-1;;;;6143:3:3;6128:19;;6115:33;;-1:-1:-1;6160:16:3;;;6157:36;;;6189:1;6186;6179:12;6157:36;;6212:69;6273:7;6262:8;6251:9;6247:24;6212:69;:::i;:::-;6202:79;;;4739:1548;;;;;;;;:::o;6492:600::-;6585:6;6638:2;6626:9;6617:7;6613:23;6609:32;6606:52;;;6654:1;6651;6644:12;6606:52;6703:7;6696:4;6685:9;6681:20;6677:34;6667:62;;6725:1;6722;6715:12;6667:62;6749:22;;:::i;:::-;6793:3;6834:2;6823:9;6819:18;6860:7;6852:6;6849:19;6846:39;;;6881:1;6878;6871:12;6846:39;6905:9;6923:139;6939:6;6934:3;6931:15;6923:139;;;7007:10;;6995:23;;7047:4;7038:14;;;;6956;6923:139;;7097:331;7313:2;7298:18;;7325:54;7302:9;7361:6;7325:54;:::i;:::-;7415:6;7410:2;7399:9;7395:18;7388:34;7097:331;;;;;:::o;7433:407::-;7695:3;7680:19;;7708:54;7684:9;7744:6;7708:54;:::i;:::-;7771:63;7830:2;7819:9;7815:18;7807:6;7771:63;:::i;7845:184::-;7915:6;7968:2;7956:9;7947:7;7943:23;7939:32;7936:52;;;7984:1;7981;7974:12;7936:52;-1:-1:-1;8007:16:3;;7845:184;-1:-1:-1;7845:184:3:o;8034:245::-;8113:6;8121;8174:2;8162:9;8153:7;8149:23;8145:32;8142:52;;;8190:1;8187;8180:12;8142:52;-1:-1:-1;;8213:16:3;;8269:2;8254:18;;;8248:25;8213:16;;8248:25;;-1:-1:-1;8034:245:3:o;8545:277::-;8612:6;8665:2;8653:9;8644:7;8640:23;8636:32;8633:52;;;8681:1;8678;8671:12;8633:52;8713:9;8707:16;8766:5;8759:13;8752:21;8745:5;8742:32;8732:60;;8788:1;8785;8778:12;9807:127;9868:10;9863:3;9859:20;9856:1;9849:31;9899:4;9896:1;9889:15;9923:4;9920:1;9913:15;9939:336;9980:3;10018:5;10012:12;10042:1;10052:128;10066:6;10063:1;10060:13;10052:128;;;10163:4;10148:13;;;10144:24;;10138:31;10125:11;;;10118:52;10081:12;10052:128;;;10198:6;10195:1;10192:13;10189:48;;;10233:1;10224:6;10219:3;10215:16;10208:27;10189:48;-1:-1:-1;10253:16:3;;;;;9939:336;-1:-1:-1;;9939:336:3:o;10611:347::-;10814:3;10845:29;10870:3;10862:6;10845:29;:::i;:::-;10883:39;10916:5;10908:6;10883:39;:::i;:::-;10949:2;10938:14;;10611:347;-1:-1:-1;;;;10611:347:3:o;10963:127::-;11024:10;11019:3;11015:20;11012:1;11005:31;11055:4;11052:1;11045:15;11079:4;11076:1;11069:15;11095:135;11134:3;11155:17;;;11152:43;;11175:18;;:::i;:::-;-1:-1:-1;11222:1:3;11211:13;;11095:135::o;11235:125::-;11275:4;11303:1;11300;11297:8;11294:34;;;11308:18;;:::i;:::-;-1:-1:-1;11345:9:3;;11235:125::o;11365:709::-;11762:3;11793:29;11818:3;11810:6;11793:29;:::i;:::-;11831:39;11864:5;11856:6;11831:39;:::i;:::-;11892:40;11928:2;11921:5;11917:14;11909:6;11892:40;:::i;:::-;11879:53;;11941:39;11974:5;11966:6;11941:39;:::i;:::-;11989:48;12033:2;12026:5;12022:14;12014:6;11989:48;:::i;:::-;12064:3;12053:15;;11365:709;-1:-1:-1;;;;;;;11365:709:3:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "H1(bytes)": {
        "notice": "Returns an integer representation of the hash of the input"
      },
      "H2(bytes)": {
        "notice": "Returns elliptic curve point of the integer representation of the hash of the input"
      },
      "intToPoint(uint256)": {
        "notice": "Converts an integer to an elliptic curve point"
      },
      "ringCalcZ1(uint256[2],uint256,uint256)": {
        "notice": "Helper function to calculate Z1 Avoids stack too deep problem"
      },
      "ringCalcZ2(uint256[2],uint256[2],uint256,uint256)": {
        "notice": "Helper function to calculate Z2 Avoids stack too deep problem"
      },
      "verify(bytes,uint256,uint256[2],uint256[],uint256[2][])": {
        "notice": "Verifies the ring signature Section 4.2 of the paper https://eprint.iacr.org/2004/027.pdf"
      }
    },
    "version": 1
  },
  "offset": [
    133,
    3597
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2872D29A EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x36C91C05 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x85D88A43 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9728DE98 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xD6EDDE19 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xFE46A2B2 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x84 PUSH2 0xA8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0x84 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST PUSH2 0x84 PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0xA9B JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8B86E63 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0xA867D0CA SWAP1 DUP3 SWAP1 PUSH4 0x45C37318 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C778DC9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x71DE3724 SWAP1 PUSH2 0x1D3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP3 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0x861 JUMP JUMPDEST PUSH20 0x0 PUSH4 0xA867D0CA PUSH20 0x0 PUSH4 0x71DE3724 DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP3 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C778DC9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x71DE3724 SWAP1 PUSH2 0x34E SWAP1 DUP12 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP3 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3FC PUSH2 0x861 JUMP JUMPDEST PUSH2 0x408 PUSH2 0xEF DUP4 PUSH2 0x40E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH4 0x4F06F279 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x4F06F279 SWAP2 PUSH2 0x451 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x49A PUSH2 0x861 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC690219B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0xC690219B SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x4EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40EEB4FF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP4 POP SWAP1 SWAP2 POP PUSH20 0x0 SWAP1 PUSH4 0x81DD69FE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST ISZERO PUSH2 0x5B1 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x73B77121 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0xE76EE242 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x608 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP PUSH2 0x49F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 MLOAD LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572652073697A6520746F6F20736D616C6C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP3 MLOAD EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572652073697A657320646F206E6F74206D6174636821000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE DUP7 SWAP2 JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0x749 JUMPI DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x70C JUMPI PUSH2 0x70C PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x725 SWAP3 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 DUP1 PUSH2 0x741 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x754 DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH2 0x75E PUSH2 0x861 JUMP JUMPDEST PUSH2 0x766 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST DUP8 MLOAD DUP6 LT ISZERO PUSH2 0x833 JUMPI PUSH2 0x7B1 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x789 JUMPI PUSH2 0x789 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP12 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x117 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D8 DUP11 DUP5 DUP12 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH2 0x27A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP9 MLOAD PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST DUP6 EQ PUSH2 0x821 JUMPI PUSH2 0x81E DUP5 DUP12 DUP15 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x40E JUMP JUMPDEST SWAP6 POP JUMPDEST DUP5 PUSH2 0x82B DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x76B JUMP JUMPDEST PUSH2 0x84F DUP5 DUP12 DUP15 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 SWAP11 EQ SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8B8 JUMPI PUSH2 0x8B8 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E7 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x908 PUSH2 0x895 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x91C JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95E DUP6 DUP6 PUSH2 0x8EF JUMP JUMPDEST SWAP6 PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x996 JUMPI DUP2 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x977 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x408 DUP3 DUP5 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CA DUP7 DUP7 PUSH2 0x8EF JUMP JUMPDEST SWAP4 POP PUSH2 0x9D9 DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xA0 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA19 JUMPI PUSH2 0xA19 PUSH2 0x87F JUMP JUMPDEST PUSH2 0xA2C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x8BE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA93 DUP5 DUP3 DUP6 ADD PUSH2 0x9EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xAFE PUSH2 0xAF9 DUP4 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB33 DUP9 DUP3 PUSH2 0x8EF JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0xB21 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB88 DUP10 DUP4 DUP11 ADD PUSH2 0x9EE JUMP JUMPDEST SWAP7 POP PUSH1 0x20 SWAP2 POP DUP2 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH2 0xBA1 DUP10 PUSH1 0x40 DUP11 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 ADD PUSH1 0x1F DUP2 ADD DUP11 SGT PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xBD4 PUSH2 0xAF9 DUP3 PUSH2 0xAB4 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xC11 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0xBF8 JUMP JUMPDEST SWAP7 POP POP POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC37 DUP9 DUP3 DUP10 ADD PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6D PUSH2 0x895 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0xCA7 DUP3 DUP6 PUSH2 0x973 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xCC2 DUP3 DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD65 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0xD4B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD74 JUMPI PUSH1 0x0 DUP3 DUP7 ADD MSTORE JUMPDEST POP SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8B DUP3 DUP6 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0xD95 DUP2 DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xDC8 JUMPI PUSH2 0xDC8 PUSH2 0xDA0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xDE1 JUMPI PUSH2 0xDE1 PUSH2 0xDA0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF2 DUP3 DUP9 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0xDFC DUP2 DUP9 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xE09 PUSH1 0x40 DUP3 ADD DUP8 PUSH2 0xD44 JUMP JUMPDEST SWAP1 POP PUSH2 0xE15 DUP2 DUP7 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xE22 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x80 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xD3 PUSH27 0x93BD0F3480497D490AC9BA94995B16DA9C0144DA492816C79DB955 TIMESTAMP SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        133,
        3597
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "23": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "28": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "30": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "LT",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C"
    },
    "35": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "36": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "38": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "SHR",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2872D29A"
    },
    "48": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "49": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "52": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x36C91C05"
    },
    "59": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "60": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A"
    },
    "63": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x85D88A43"
    },
    "70": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "71": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD"
    },
    "74": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9728DE98"
    },
    "81": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "82": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC0"
    },
    "85": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD6EDDE19"
    },
    "92": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "93": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1"
    },
    "96": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFE46A2B2"
    },
    "103": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF4"
    },
    "107": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "first_revert": true,
      "fn": null,
      "offset": [
        133,
        3597
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84"
    },
    "117": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F"
    },
    "120": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "121": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "123": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x93F"
    },
    "126": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "127": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "128": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "131": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "132": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "133": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "135": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "136": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91"
    },
    "139": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "140": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "141": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x99C"
    },
    "144": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "145": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "146": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "148": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "149": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "150": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "151": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SUB",
      "path": "2"
    },
    "152": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "153": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "RETURN",
      "path": "2"
    },
    "154": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "155": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84"
    },
    "158": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA8"
    },
    "161": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "162": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "164": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9AA"
    },
    "167": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1676,
        1980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "168": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "169": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "172": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1676,
        1980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "173": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "174": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84"
    },
    "177": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB"
    },
    "180": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "181": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "183": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5E"
    },
    "186": {
      "fn": "LSAG.H2",
      "jump": "i",
      "offset": [
        1096,
        1217
      ],
      "op": "JUMP",
      "path": "2"
    },
    "187": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "188": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "191": {
      "fn": "LSAG.H2",
      "jump": "i",
      "offset": [
        1096,
        1217
      ],
      "op": "JUMP",
      "path": "2"
    },
    "192": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "193": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3"
    },
    "196": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE"
    },
    "199": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "200": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "202": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5E"
    },
    "205": {
      "fn": "LSAG.H1",
      "jump": "i",
      "offset": [
        849,
        979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "206": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "207": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "210": {
      "fn": "LSAG.H1",
      "jump": "i",
      "offset": [
        849,
        979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "211": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "212": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "214": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "215": {
      "op": "SWAP1"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "220": {
      "op": "ADD"
    },
    "221": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91"
    },
    "224": {
      "op": "JUMP"
    },
    "225": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "226": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84"
    },
    "229": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF"
    },
    "232": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "233": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "235": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9B"
    },
    "238": {
      "fn": "LSAG.intToPoint",
      "jump": "i",
      "offset": [
        384,
        757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "239": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "240": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x492"
    },
    "243": {
      "fn": "LSAG.intToPoint",
      "jump": "i",
      "offset": [
        384,
        757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "244": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "245": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x107"
    },
    "248": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102"
    },
    "251": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "252": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "254": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4C"
    },
    "257": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMP",
      "path": "2"
    },
    "258": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "259": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x633"
    },
    "262": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMP",
      "path": "2"
    },
    "263": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "264": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "266": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "267": {
      "op": "SWAP1"
    },
    "268": {
      "op": "ISZERO"
    },
    "269": {
      "op": "ISZERO"
    },
    "270": {
      "op": "DUP2"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91"
    },
    "278": {
      "op": "JUMP"
    },
    "279": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "280": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1439,
        1456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F"
    },
    "283": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1439,
        1456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "286": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1439,
        1456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "287": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1439,
        1456
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "288": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x40"
    },
    "290": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "291": {
      "op": "PUSH4",
      "value": "0x8B86E63"
    },
    "296": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "298": {
      "op": "SHL"
    },
    "299": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "300": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "301": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "303": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "304": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "ADD",
      "path": "2"
    },
    "305": {
      "op": "DUP4"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1487
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "329": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1487
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "330": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1493
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA867D0CA"
    },
    "335": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "336": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1487
      ],
      "op": "DUP3",
      "path": "2"
    },
    "337": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1487
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "338": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1522
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x45C37318"
    },
    "343": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "349": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "350": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "351": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "352": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP4",
      "path": "2"
    },
    "353": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "SUB",
      "path": "2"
    },
    "354": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "355": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP7",
      "path": "2"
    },
    "356": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "GAS",
      "path": "2"
    },
    "357": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "358": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "359": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "360": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "361": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "364": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "365": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "366": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "368": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "369": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "370": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "371": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "373": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "REVERT",
      "path": "2"
    },
    "374": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "POP",
      "path": "2"
    },
    "376": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "POP",
      "path": "2"
    },
    "377": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "POP",
      "path": "2"
    },
    "378": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "POP",
      "path": "2"
    },
    "379": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "381": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "382": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "383": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "385": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "NOT",
      "path": "2"
    },
    "386": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "388": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP3",
      "path": "2"
    },
    "389": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "ADD",
      "path": "2"
    },
    "390": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "AND",
      "path": "2"
    },
    "391": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP3",
      "path": "2"
    },
    "392": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "ADD",
      "path": "2"
    },
    "393": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "394": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "396": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "397": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "POP",
      "path": "2"
    },
    "398": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "399": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "ADD",
      "path": "2"
    },
    "400": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "401": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19A"
    },
    "404": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "405": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "406": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "409": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1507,
        1525
      ],
      "op": "JUMP",
      "path": "2"
    },
    "410": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1507,
        1525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "411": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "413": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "414": {
      "op": "PUSH4",
      "value": "0x1C778DC9"
    },
    "419": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "421": {
      "op": "SHL"
    },
    "422": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "423": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "424": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1547
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "445": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "446": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1553
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x71DE3724"
    },
    "451": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1553
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "452": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D3"
    },
    "455": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "456": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1554,
        1560
      ],
      "op": "DUP11",
      "path": "2"
    },
    "457": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1554,
        1560
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "458": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1562,
        1563
      ],
      "op": "DUP11",
      "path": "2"
    },
    "459": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1562,
        1563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "460": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "462": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "ADD",
      "path": "2"
    },
    "463": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC99"
    },
    "466": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "467": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "468": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "470": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "471": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "472": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "473": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "474": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "SUB",
      "path": "2"
    },
    "475": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "476": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP7",
      "path": "2"
    },
    "477": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "GAS",
      "path": "2"
    },
    "478": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "479": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "480": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "481": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "482": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF"
    },
    "485": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "486": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "487": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "489": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "490": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "491": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "492": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "494": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "REVERT",
      "path": "2"
    },
    "495": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "496": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "POP",
      "path": "2"
    },
    "497": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "POP",
      "path": "2"
    },
    "498": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "POP",
      "path": "2"
    },
    "499": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "POP",
      "path": "2"
    },
    "500": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "502": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "503": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "504": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "506": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "NOT",
      "path": "2"
    },
    "507": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "509": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "510": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "ADD",
      "path": "2"
    },
    "511": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "AND",
      "path": "2"
    },
    "512": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "513": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "ADD",
      "path": "2"
    },
    "514": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "515": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "517": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "518": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "POP",
      "path": "2"
    },
    "519": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "520": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "ADD",
      "path": "2"
    },
    "521": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "522": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x213"
    },
    "525": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "526": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "527": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "530": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "531": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "532": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "534": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "535": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP4",
      "path": "2"
    },
    "536": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "541": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "AND",
      "path": "2"
    },
    "542": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "544": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SHL",
      "path": "2"
    },
    "545": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "546": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "547": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "549": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "ADD",
      "path": "2"
    },
    "550": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230"
    },
    "553": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "554": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "555": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "556": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB4"
    },
    "559": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1479,
        1574
      ],
      "op": "JUMP",
      "path": "2"
    },
    "560": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "561": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "563": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP1",
      "path": "2"
    },
    "564": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "565": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP1",
      "path": "2"
    },
    "566": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP4",
      "path": "2"
    },
    "567": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SUB",
      "path": "2"
    },
    "568": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "569": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP7",
      "path": "2"
    },
    "570": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "GAS",
      "path": "2"
    },
    "571": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "572": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "573": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP1",
      "path": "2"
    },
    "574": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "575": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C"
    },
    "578": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "579": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "580": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "582": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP1",
      "path": "2"
    },
    "583": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "584": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "585": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "587": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "REVERT",
      "path": "2"
    },
    "588": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "589": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "POP",
      "path": "2"
    },
    "590": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "POP",
      "path": "2"
    },
    "591": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "POP",
      "path": "2"
    },
    "592": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "POP",
      "path": "2"
    },
    "593": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "595": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "596": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "597": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "599": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "NOT",
      "path": "2"
    },
    "600": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "602": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "603": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "ADD",
      "path": "2"
    },
    "604": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "AND",
      "path": "2"
    },
    "605": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "606": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "ADD",
      "path": "2"
    },
    "607": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP1",
      "path": "2"
    },
    "608": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "610": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "611": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "POP",
      "path": "2"
    },
    "612": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "613": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "ADD",
      "path": "2"
    },
    "614": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "615": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "618": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "619": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "620": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "623": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "i",
      "offset": [
        1479,
        1574
      ],
      "op": "JUMP",
      "path": "2"
    },
    "624": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1479,
        1574
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "625": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1472,
        1574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "626": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1472,
        1574
      ],
      "op": "POP",
      "path": "2"
    },
    "627": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "628": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "629": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "630": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "POP",
      "path": "2"
    },
    "631": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "POP",
      "path": "2"
    },
    "632": {
      "fn": "LSAG.ringCalcZ1",
      "offset": [
        1312,
        1581
      ],
      "op": "POP",
      "path": "2"
    },
    "633": {
      "fn": "LSAG.ringCalcZ1",
      "jump": "o",
      "offset": [
        1312,
        1581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "634": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "635": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1834,
        1851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x282"
    },
    "638": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1834,
        1851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "641": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1834,
        1851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "642": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1834,
        1851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "643": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1882
      ],
      "op": "PUSH20",
      "path": "2",
      "statement": 1,
      "value": "0x0"
    },
    "664": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1888
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA867D0CA"
    },
    "669": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1910
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "690": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1916
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x71DE3724"
    },
    "695": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1917,
        1918
      ],
      "op": "DUP8",
      "path": "2"
    },
    "696": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1920,
        1921
      ],
      "op": "DUP8",
      "path": "2"
    },
    "697": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "699": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "700": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP4",
      "path": "2"
    },
    "701": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "706": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "AND",
      "path": "2"
    },
    "707": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "709": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SHL",
      "path": "2"
    },
    "710": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "711": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "712": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "714": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "ADD",
      "path": "2"
    },
    "715": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5"
    },
    "718": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "719": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "720": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "721": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC99"
    },
    "724": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1902,
        1922
      ],
      "op": "JUMP",
      "path": "2"
    },
    "725": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "726": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "728": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP1",
      "path": "2"
    },
    "729": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "730": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP1",
      "path": "2"
    },
    "731": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP4",
      "path": "2"
    },
    "732": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SUB",
      "path": "2"
    },
    "733": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "734": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP7",
      "path": "2"
    },
    "735": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "GAS",
      "path": "2"
    },
    "736": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "737": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "738": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP1",
      "path": "2"
    },
    "739": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "740": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F1"
    },
    "743": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "744": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "745": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "747": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP1",
      "path": "2"
    },
    "748": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "749": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "750": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "752": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "REVERT",
      "path": "2"
    },
    "753": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "754": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "POP",
      "path": "2"
    },
    "755": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "POP",
      "path": "2"
    },
    "756": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "POP",
      "path": "2"
    },
    "757": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "POP",
      "path": "2"
    },
    "758": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "760": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "761": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "762": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "764": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "NOT",
      "path": "2"
    },
    "765": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "767": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP3",
      "path": "2"
    },
    "768": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "ADD",
      "path": "2"
    },
    "769": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "AND",
      "path": "2"
    },
    "770": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP3",
      "path": "2"
    },
    "771": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "ADD",
      "path": "2"
    },
    "772": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP1",
      "path": "2"
    },
    "773": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "775": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "776": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "POP",
      "path": "2"
    },
    "777": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "778": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "ADD",
      "path": "2"
    },
    "779": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "780": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x315"
    },
    "783": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "784": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "785": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "788": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1902,
        1922
      ],
      "op": "JUMP",
      "path": "2"
    },
    "789": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1902,
        1922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "790": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "792": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "793": {
      "op": "PUSH4",
      "value": "0x1C778DC9"
    },
    "798": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "800": {
      "op": "SHL"
    },
    "801": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP2",
      "path": "2"
    },
    "802": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "803": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1944
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "824": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "825": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1950
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x71DE3724"
    },
    "830": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1950
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "831": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E"
    },
    "834": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1951,
        1959
      ],
      "op": "DUP12",
      "path": "2"
    },
    "836": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1951,
        1959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "837": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1961,
        1962
      ],
      "op": "DUP10",
      "path": "2"
    },
    "838": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1961,
        1962
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "839": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "841": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "ADD",
      "path": "2"
    },
    "842": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC99"
    },
    "845": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1936,
        1963
      ],
      "op": "JUMP",
      "path": "2"
    },
    "846": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "847": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "849": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP1",
      "path": "2"
    },
    "850": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "851": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP1",
      "path": "2"
    },
    "852": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP4",
      "path": "2"
    },
    "853": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "SUB",
      "path": "2"
    },
    "854": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP2",
      "path": "2"
    },
    "855": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP7",
      "path": "2"
    },
    "856": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "GAS",
      "path": "2"
    },
    "857": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "858": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "859": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP1",
      "path": "2"
    },
    "860": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "861": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A"
    },
    "864": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "865": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "866": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "868": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP1",
      "path": "2"
    },
    "869": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "870": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "871": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "873": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "REVERT",
      "path": "2"
    },
    "874": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "875": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "POP",
      "path": "2"
    },
    "876": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "POP",
      "path": "2"
    },
    "877": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "POP",
      "path": "2"
    },
    "878": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "POP",
      "path": "2"
    },
    "879": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "881": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "882": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "883": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "885": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "NOT",
      "path": "2"
    },
    "886": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "888": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP3",
      "path": "2"
    },
    "889": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "ADD",
      "path": "2"
    },
    "890": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "AND",
      "path": "2"
    },
    "891": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP3",
      "path": "2"
    },
    "892": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "ADD",
      "path": "2"
    },
    "893": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP1",
      "path": "2"
    },
    "894": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "896": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "897": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "POP",
      "path": "2"
    },
    "898": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "DUP2",
      "path": "2"
    },
    "899": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "ADD",
      "path": "2"
    },
    "900": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "901": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38E"
    },
    "904": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "905": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "906": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "909": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1936,
        1963
      ],
      "op": "JUMP",
      "path": "2"
    },
    "910": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1936,
        1963
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "911": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "913": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "914": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP4",
      "path": "2"
    },
    "915": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "920": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "AND",
      "path": "2"
    },
    "921": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "923": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SHL",
      "path": "2"
    },
    "924": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "925": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "926": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "928": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "ADD",
      "path": "2"
    },
    "929": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AB"
    },
    "932": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "933": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "934": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "935": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB4"
    },
    "938": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1874,
        1973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "939": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "940": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "942": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP1",
      "path": "2"
    },
    "943": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "944": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP1",
      "path": "2"
    },
    "945": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP4",
      "path": "2"
    },
    "946": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SUB",
      "path": "2"
    },
    "947": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "948": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP7",
      "path": "2"
    },
    "949": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "GAS",
      "path": "2"
    },
    "950": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "951": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "952": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP1",
      "path": "2"
    },
    "953": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "954": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "957": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "958": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "959": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "961": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP1",
      "path": "2"
    },
    "962": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "963": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "964": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "966": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "REVERT",
      "path": "2"
    },
    "967": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "968": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "POP",
      "path": "2"
    },
    "969": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "POP",
      "path": "2"
    },
    "970": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "POP",
      "path": "2"
    },
    "971": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "POP",
      "path": "2"
    },
    "972": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "974": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "975": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "976": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "978": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "NOT",
      "path": "2"
    },
    "979": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "981": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP3",
      "path": "2"
    },
    "982": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "ADD",
      "path": "2"
    },
    "983": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "AND",
      "path": "2"
    },
    "984": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP3",
      "path": "2"
    },
    "985": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "ADD",
      "path": "2"
    },
    "986": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP1",
      "path": "2"
    },
    "987": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "989": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "990": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "POP",
      "path": "2"
    },
    "991": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "992": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "ADD",
      "path": "2"
    },
    "993": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "994": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "997": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "998": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "999": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "1002": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "i",
      "offset": [
        1874,
        1973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1003": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1874,
        1973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1004": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1867,
        1973
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "1005": {
      "fn": "LSAG.ringCalcZ2",
      "offset": [
        1676,
        1980
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "fn": "LSAG.ringCalcZ2",
      "jump": "o",
      "offset": [
        1676,
        1980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1012": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1013": {
      "fn": "LSAG.H2",
      "offset": [
        1153,
        1170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC"
    },
    "1016": {
      "fn": "LSAG.H2",
      "offset": [
        1153,
        1170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "1019": {
      "fn": "LSAG.H2",
      "jump": "i",
      "offset": [
        1153,
        1170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1020": {
      "fn": "LSAG.H2",
      "offset": [
        1153,
        1170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1021": {
      "fn": "LSAG.H2",
      "offset": [
        1193,
        1210
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 2,
      "value": "0x408"
    },
    "1024": {
      "fn": "LSAG.H2",
      "offset": [
        1204,
        1209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF"
    },
    "1027": {
      "fn": "LSAG.H2",
      "offset": [
        1207,
        1208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1028": {
      "fn": "LSAG.H2",
      "offset": [
        1204,
        1206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "1031": {
      "fn": "LSAG.H2",
      "jump": "i",
      "offset": [
        1204,
        1209
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1032": {
      "fn": "LSAG.H2",
      "offset": [
        1193,
        1210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1033": {
      "fn": "LSAG.H2",
      "offset": [
        1186,
        1210
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1034": {
      "fn": "LSAG.H2",
      "offset": [
        1096,
        1217
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "LSAG.H2",
      "jump": "o",
      "offset": [
        1096,
        1217
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1038": {
      "fn": "LSAG.H1",
      "offset": [
        849,
        979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1039": {
      "fn": "LSAG.H1",
      "offset": [
        958,
        970
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 3
    },
    "1040": {
      "fn": "LSAG.H1",
      "offset": [
        958,
        970
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1041": {
      "fn": "LSAG.H1",
      "offset": [
        958,
        970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1043": {
      "fn": "LSAG.H1",
      "offset": [
        958,
        970
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1044": {
      "fn": "LSAG.H1",
      "offset": [
        958,
        970
      ],
      "op": "ADD",
      "path": "2"
    },
    "1045": {
      "fn": "LSAG.H1",
      "offset": [
        958,
        970
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1046": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1048": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1049": {
      "op": "PUSH4",
      "value": "0x4F06F279"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1056": {
      "op": "SHL"
    },
    "1057": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1058": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1059": {
      "fn": "LSAG.H1",
      "offset": [
        906,
        913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1061": {
      "fn": "LSAG.H1",
      "offset": [
        906,
        913
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1062": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        944
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "1083": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        944
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1084": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        949
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4F06F279"
    },
    "1089": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        949
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1090": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x451"
    },
    "1093": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1094": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1096": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "ADD",
      "path": "2"
    },
    "1097": {
      "op": "SWAP1"
    },
    "1098": {
      "op": "DUP2"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "op": "SWAP1"
    },
    "1104": {
      "op": "JUMP"
    },
    "1105": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1106": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1108": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1110": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1111": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1112": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1113": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "SUB",
      "path": "2"
    },
    "1114": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1115": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1116": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "GAS",
      "path": "2"
    },
    "1117": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "1118": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1119": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1120": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1121": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46E"
    },
    "1124": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1125": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1126": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1128": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1129": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1130": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1131": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1133": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1134": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1135": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "POP",
      "path": "2"
    },
    "1136": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "POP",
      "path": "2"
    },
    "1137": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "POP",
      "path": "2"
    },
    "1138": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "POP",
      "path": "2"
    },
    "1139": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1141": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1142": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1143": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1145": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "NOT",
      "path": "2"
    },
    "1146": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1148": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1149": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "ADD",
      "path": "2"
    },
    "1150": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "AND",
      "path": "2"
    },
    "1151": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1152": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "ADD",
      "path": "2"
    },
    "1153": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1154": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1156": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1157": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "POP",
      "path": "2"
    },
    "1158": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1159": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "ADD",
      "path": "2"
    },
    "1160": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1161": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408"
    },
    "1164": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1165": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1166": {
      "fn": "LSAG.H1",
      "offset": [
        936,
        972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCF"
    },
    "1169": {
      "fn": "LSAG.H1",
      "jump": "i",
      "offset": [
        936,
        972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1170": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1171": {
      "fn": "LSAG.intToPoint",
      "offset": [
        445,
        462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49A"
    },
    "1174": {
      "fn": "LSAG.intToPoint",
      "offset": [
        445,
        462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "1177": {
      "fn": "LSAG.intToPoint",
      "jump": "i",
      "offset": [
        445,
        462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1178": {
      "fn": "LSAG.intToPoint",
      "offset": [
        445,
        462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1179": {
      "fn": "LSAG.intToPoint",
      "offset": [
        490,
        492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1180": {
      "fn": "LSAG.intToPoint",
      "offset": [
        478,
        487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1182": {
      "fn": "LSAG.intToPoint",
      "offset": [
        478,
        487
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1183": {
      "fn": "LSAG.intToPoint",
      "offset": [
        544,
        751
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1184": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x40"
    },
    "1186": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1187": {
      "op": "PUSH4",
      "value": "0xC690219B"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1196": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1197": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1199": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1200": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "ADD",
      "path": "2"
    },
    "1201": {
      "op": "DUP5"
    },
    "1202": {
      "op": "SWAP1"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        591
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "1225": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1226": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        601
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC690219B"
    },
    "1231": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1237": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1238": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1239": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1240": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1241": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "SUB",
      "path": "2"
    },
    "1242": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1243": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1244": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "GAS",
      "path": "2"
    },
    "1245": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "1246": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1247": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1248": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1249": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EE"
    },
    "1252": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1253": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1254": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1256": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1257": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1258": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1259": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1261": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1262": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1263": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "POP",
      "path": "2"
    },
    "1264": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "POP",
      "path": "2"
    },
    "1265": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "POP",
      "path": "2"
    },
    "1266": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "POP",
      "path": "2"
    },
    "1267": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1269": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1270": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1271": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1273": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "NOT",
      "path": "2"
    },
    "1274": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1276": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1277": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "ADD",
      "path": "2"
    },
    "1278": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "AND",
      "path": "2"
    },
    "1279": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1280": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "ADD",
      "path": "2"
    },
    "1281": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1282": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1284": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1285": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "POP",
      "path": "2"
    },
    "1286": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1287": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "ADD",
      "path": "2"
    },
    "1288": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1289": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x512"
    },
    "1292": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1293": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1294": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE8"
    },
    "1297": {
      "fn": "LSAG.intToPoint",
      "jump": "i",
      "offset": [
        583,
        604
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1298": {
      "fn": "LSAG.intToPoint",
      "offset": [
        583,
        604
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1299": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1301": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1302": {
      "op": "PUSH4",
      "value": "0x40EEB4FF"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1311": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1312": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1314": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1315": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "ADD",
      "path": "2"
    },
    "1316": {
      "op": "DUP4"
    },
    "1317": {
      "op": "SWAP1"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1321": {
      "op": "DUP2"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "fn": "LSAG.intToPoint",
      "offset": [
        571,
        604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1327": {
      "fn": "LSAG.intToPoint",
      "offset": [
        571,
        604
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "fn": "LSAG.intToPoint",
      "offset": [
        571,
        604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1330": {
      "fn": "LSAG.intToPoint",
      "offset": [
        571,
        604
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        631
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "1353": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1354": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        643
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x81DD69FE"
    },
    "1359": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1365": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1367": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1368": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1369": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1370": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "SUB",
      "path": "2"
    },
    "1371": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1372": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1373": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "GAS",
      "path": "2"
    },
    "1374": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "1375": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1376": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1377": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1378": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56F"
    },
    "1381": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1382": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1383": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1385": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1386": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1387": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1388": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1390": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1391": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1392": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "POP",
      "path": "2"
    },
    "1393": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "POP",
      "path": "2"
    },
    "1394": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "POP",
      "path": "2"
    },
    "1395": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "POP",
      "path": "2"
    },
    "1396": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1398": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1399": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1400": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1402": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "NOT",
      "path": "2"
    },
    "1403": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1405": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1406": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "ADD",
      "path": "2"
    },
    "1407": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "AND",
      "path": "2"
    },
    "1408": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1409": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "ADD",
      "path": "2"
    },
    "1410": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1411": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1413": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1414": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "POP",
      "path": "2"
    },
    "1415": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1416": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "ADD",
      "path": "2"
    },
    "1417": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1418": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x593"
    },
    "1421": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1422": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1423": {
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0C"
    },
    "1426": {
      "fn": "LSAG.intToPoint",
      "jump": "i",
      "offset": [
        623,
        652
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1427": {
      "branch": 17,
      "fn": "LSAG.intToPoint",
      "offset": [
        623,
        652
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1428": {
      "fn": "LSAG.intToPoint",
      "offset": [
        619,
        700
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1429": {
      "fn": "LSAG.intToPoint",
      "offset": [
        619,
        700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B1"
    },
    "1432": {
      "branch": 17,
      "fn": "LSAG.intToPoint",
      "offset": [
        619,
        700
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x40"
    },
    "1436": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1437": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1438": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1439": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1440": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "ADD",
      "path": "2"
    },
    "1441": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1442": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1443": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1444": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1445": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1446": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1447": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1449": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1450": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "ADD",
      "path": "2"
    },
    "1451": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1452": {
      "fn": "LSAG.intToPoint",
      "offset": [
        672,
        685
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1453": {
      "fn": "LSAG.intToPoint",
      "offset": [
        384,
        757
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "fn": "LSAG.intToPoint",
      "jump": "o",
      "offset": [
        384,
        757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1457": {
      "fn": "LSAG.intToPoint",
      "offset": [
        619,
        700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1458": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x40"
    },
    "1460": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1461": {
      "op": "PUSH4",
      "value": "0x73B77121"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1468": {
      "op": "SHL"
    },
    "1469": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1470": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1471": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1473": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1474": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "ADD",
      "path": "2"
    },
    "1475": {
      "op": "DUP5"
    },
    "1476": {
      "op": "SWAP1"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "fn": "LSAG.intToPoint",
      "offset": [
        738,
        739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1482": {
      "op": "DUP3"
    },
    "1483": {
      "op": "ADD"
    },
    "1484": {
      "op": "MSTORE"
    },
    "1485": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        726
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "1506": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        726
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1507": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        734
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE76EE242"
    },
    "1512": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1518": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1520": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1521": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1522": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1523": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "SUB",
      "path": "2"
    },
    "1524": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1525": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1526": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "GAS",
      "path": "2"
    },
    "1527": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "1528": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1529": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1530": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1531": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x608"
    },
    "1534": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1535": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1536": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1538": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1539": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1540": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1541": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1543": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1544": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1545": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "POP",
      "path": "2"
    },
    "1546": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "POP",
      "path": "2"
    },
    "1547": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "POP",
      "path": "2"
    },
    "1548": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "POP",
      "path": "2"
    },
    "1549": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1551": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1552": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1553": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1555": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "NOT",
      "path": "2"
    },
    "1556": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1558": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1559": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "ADD",
      "path": "2"
    },
    "1560": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "AND",
      "path": "2"
    },
    "1561": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1562": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "ADD",
      "path": "2"
    },
    "1563": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1564": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1566": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1567": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "POP",
      "path": "2"
    },
    "1568": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1569": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "ADD",
      "path": "2"
    },
    "1570": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1571": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62C"
    },
    "1574": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1575": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1576": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCF"
    },
    "1579": {
      "fn": "LSAG.intToPoint",
      "jump": "i",
      "offset": [
        718,
        740
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1580": {
      "fn": "LSAG.intToPoint",
      "offset": [
        718,
        740
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1581": {
      "fn": "LSAG.intToPoint",
      "offset": [
        714,
        740
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1582": {
      "fn": "LSAG.intToPoint",
      "offset": [
        714,
        740
      ],
      "op": "POP",
      "path": "2"
    },
    "1583": {
      "fn": "LSAG.intToPoint",
      "offset": [
        544,
        751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49F"
    },
    "1586": {
      "fn": "LSAG.intToPoint",
      "offset": [
        544,
        751
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1587": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1588": {
      "fn": "LSAG.verify",
      "offset": [
        2309,
        2313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1590": {
      "fn": "LSAG.verify",
      "offset": [
        2358,
        2359
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x2"
    },
    "1592": {
      "fn": "LSAG.verify",
      "offset": [
        2337,
        2347
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1593": {
      "fn": "LSAG.verify",
      "offset": [
        2337,
        2354
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1594": {
      "fn": "LSAG.verify",
      "offset": [
        2337,
        2359
      ],
      "op": "LT",
      "path": "2"
    },
    "1595": {
      "branch": 18,
      "fn": "LSAG.verify",
      "offset": [
        2337,
        2359
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1596": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x68C"
    },
    "1599": {
      "branch": 18,
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1600": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1602": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1611": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1614": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1616": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1617": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "ADD",
      "path": "2"
    },
    "1618": {
      "op": "MSTORE"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1623": {
      "op": "DUP3"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH32",
      "value": "0x5369676E61747572652073697A6520746F6F20736D616C6C0000000000000000"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1668": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1670": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1671": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1672": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1673": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "SUB",
      "path": "2"
    },
    "1674": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1675": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1676": {
      "fn": "LSAG.verify",
      "offset": [
        2329,
        2388
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1677": {
      "fn": "LSAG.verify",
      "offset": [
        2427,
        2428
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 8
    },
    "1678": {
      "fn": "LSAG.verify",
      "offset": [
        2427,
        2435
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1679": {
      "fn": "LSAG.verify",
      "offset": [
        2406,
        2416
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1680": {
      "fn": "LSAG.verify",
      "offset": [
        2406,
        2423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1681": {
      "branch": 19,
      "fn": "LSAG.verify",
      "offset": [
        2406,
        2435
      ],
      "op": "EQ",
      "path": "2"
    },
    "1682": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DD"
    },
    "1685": {
      "branch": 19,
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1686": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1688": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1697": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1700": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1702": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1703": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "ADD",
      "path": "2"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH32",
      "value": "0x5369676E61747572652073697A657320646F206E6F74206D6174636821000000"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1747": {
      "op": "DUP3"
    },
    "1748": {
      "op": "ADD"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1752": {
      "op": "ADD"
    },
    "1753": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x683"
    },
    "1756": {
      "op": "JUMP"
    },
    "1757": {
      "fn": "LSAG.verify",
      "offset": [
        2398,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1758": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1760": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1761": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1762": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1764": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1765": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "ADD",
      "path": "2"
    },
    "1766": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1767": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1768": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1769": {
      "fn": "LSAG.verify",
      "offset": [
        2480,
        2489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1771": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1772": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1773": {
      "fn": "LSAG.verify",
      "offset": [
        2586,
        2610
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1774": {
      "fn": "LSAG.verify",
      "offset": [
        2492,
        2494
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1775": {
      "fn": "LSAG.verify",
      "offset": [
        2492,
        2494
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1776": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1777": {
      "fn": "LSAG.verify",
      "offset": [
        2637,
        2647
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1778": {
      "fn": "LSAG.verify",
      "offset": [
        2637,
        2654
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1779": {
      "fn": "LSAG.verify",
      "offset": [
        2633,
        2634
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1780": {
      "fn": "LSAG.verify",
      "offset": [
        2633,
        2654
      ],
      "op": "LT",
      "path": "2"
    },
    "1781": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1782": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x749"
    },
    "1785": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1786": {
      "fn": "LSAG.verify",
      "offset": [
        2718,
        2724
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 9
    },
    "1787": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2752
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1788": {
      "fn": "LSAG.verify",
      "offset": [
        2753,
        2754
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1789": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1790": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1791": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1792": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "LT",
      "path": "2"
    },
    "1793": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70C"
    },
    "1796": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1797": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70C"
    },
    "1800": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2E"
    },
    "1803": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2742,
        2755
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1804": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1805": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1807": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "MUL",
      "path": "2"
    },
    "1808": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1810": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "ADD",
      "path": "2"
    },
    "1811": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "ADD",
      "path": "2"
    },
    "1812": {
      "fn": "LSAG.verify",
      "offset": [
        2742,
        2755
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1813": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1815": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1816": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1818": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "ADD",
      "path": "2"
    },
    "1819": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x725"
    },
    "1822": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1823": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1824": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1825": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7F"
    },
    "1828": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2684,
        2769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1829": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1830": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1832": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1833": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1835": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1836": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1837": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "SUB",
      "path": "2"
    },
    "1838": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "SUB",
      "path": "2"
    },
    "1839": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1840": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1841": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1842": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1844": {
      "fn": "LSAG.verify",
      "offset": [
        2684,
        2769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1845": {
      "fn": "LSAG.verify",
      "offset": [
        2675,
        2769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1846": {
      "fn": "LSAG.verify",
      "offset": [
        2675,
        2769
      ],
      "op": "POP",
      "path": "2"
    },
    "1847": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 10
    },
    "1848": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1849": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x741"
    },
    "1852": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1853": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB6"
    },
    "1856": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2656,
        2659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1857": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1858": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1859": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "POP",
      "path": "2"
    },
    "1860": {
      "fn": "LSAG.verify",
      "offset": [
        2656,
        2659
      ],
      "op": "POP",
      "path": "2"
    },
    "1861": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F0"
    },
    "1864": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1865": {
      "fn": "LSAG.verify",
      "offset": [
        2621,
        2780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1866": {
      "fn": "LSAG.verify",
      "offset": [
        2790,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1868": {
      "fn": "LSAG.verify",
      "offset": [
        2812,
        2822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x754"
    },
    "1871": {
      "fn": "LSAG.verify",
      "offset": [
        2815,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1872": {
      "fn": "LSAG.verify",
      "offset": [
        2812,
        2814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1875": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2812,
        2822
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1876": {
      "fn": "LSAG.verify",
      "offset": [
        2812,
        2822
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1877": {
      "fn": "LSAG.verify",
      "offset": [
        2790,
        2822
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1878": {
      "fn": "LSAG.verify",
      "offset": [
        2790,
        2822
      ],
      "op": "POP",
      "path": "2"
    },
    "1879": {
      "fn": "LSAG.verify",
      "offset": [
        2851,
        2872
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75E"
    },
    "1882": {
      "fn": "LSAG.verify",
      "offset": [
        2851,
        2872
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "1885": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2851,
        2872
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1886": {
      "fn": "LSAG.verify",
      "offset": [
        2851,
        2872
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1887": {
      "fn": "LSAG.verify",
      "offset": [
        2882,
        2903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x766"
    },
    "1890": {
      "fn": "LSAG.verify",
      "offset": [
        2882,
        2903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "1893": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2882,
        2903
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1894": {
      "fn": "LSAG.verify",
      "offset": [
        2882,
        2903
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1895": {
      "fn": "LSAG.verify",
      "offset": [
        2924,
        2925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x0"
    },
    "1897": {
      "fn": "LSAG.verify",
      "offset": [
        2920,
        2925
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1898": {
      "fn": "LSAG.verify",
      "offset": [
        2920,
        2925
      ],
      "op": "POP",
      "path": "2"
    },
    "1899": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1900": {
      "fn": "LSAG.verify",
      "offset": [
        2931,
        2941
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1901": {
      "fn": "LSAG.verify",
      "offset": [
        2931,
        2948
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1902": {
      "fn": "LSAG.verify",
      "offset": [
        2927,
        2928
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1903": {
      "fn": "LSAG.verify",
      "offset": [
        2927,
        2948
      ],
      "op": "LT",
      "path": "2"
    },
    "1904": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1905": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x833"
    },
    "1908": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1909": {
      "fn": "LSAG.verify",
      "offset": [
        2975,
        3009
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x7B1"
    },
    "1912": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2996
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1913": {
      "fn": "LSAG.verify",
      "offset": [
        2997,
        2998
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1914": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1915": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1916": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1917": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "LT",
      "path": "2"
    },
    "1918": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x789"
    },
    "1921": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1922": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x789"
    },
    "1925": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2E"
    },
    "1928": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2986,
        2999
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1929": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1930": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1932": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "MUL",
      "path": "2"
    },
    "1933": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1935": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "ADD",
      "path": "2"
    },
    "1936": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "ADD",
      "path": "2"
    },
    "1937": {
      "fn": "LSAG.verify",
      "offset": [
        2986,
        2999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1938": {
      "fn": "LSAG.verify",
      "offset": [
        3001,
        3002
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1939": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3005
      ],
      "op": "DUP12",
      "path": "2"
    },
    "1940": {
      "fn": "LSAG.verify",
      "offset": [
        3006,
        3007
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1941": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1942": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1943": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1944": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "LT",
      "path": "2"
    },
    "1945": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A4"
    },
    "1948": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1949": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A4"
    },
    "1952": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2E"
    },
    "1955": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3004,
        3008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1956": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1957": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1959": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "MUL",
      "path": "2"
    },
    "1960": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1962": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "ADD",
      "path": "2"
    },
    "1963": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "ADD",
      "path": "2"
    },
    "1964": {
      "fn": "LSAG.verify",
      "offset": [
        3004,
        3008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1965": {
      "fn": "LSAG.verify",
      "offset": [
        2975,
        2985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "1968": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2975,
        3009
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1969": {
      "fn": "LSAG.verify",
      "offset": [
        2975,
        3009
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1970": {
      "fn": "LSAG.verify",
      "offset": [
        2969,
        3009
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1971": {
      "fn": "LSAG.verify",
      "offset": [
        2969,
        3009
      ],
      "op": "POP",
      "path": "2"
    },
    "1972": {
      "fn": "LSAG.verify",
      "offset": [
        3029,
        3061
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x7D8"
    },
    "1975": {
      "fn": "LSAG.verify",
      "offset": [
        3040,
        3048
      ],
      "op": "DUP11",
      "path": "2"
    },
    "1976": {
      "fn": "LSAG.verify",
      "offset": [
        3050,
        3051
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1977": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3054
      ],
      "op": "DUP12",
      "path": "2"
    },
    "1978": {
      "fn": "LSAG.verify",
      "offset": [
        3055,
        3056
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1979": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1980": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1981": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1982": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "LT",
      "path": "2"
    },
    "1983": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CA"
    },
    "1986": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1987": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CA"
    },
    "1990": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2E"
    },
    "1993": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3053,
        3057
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1994": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1995": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1997": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "MUL",
      "path": "2"
    },
    "1998": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2000": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "ADD",
      "path": "2"
    },
    "2001": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "ADD",
      "path": "2"
    },
    "2002": {
      "fn": "LSAG.verify",
      "offset": [
        3053,
        3057
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2003": {
      "fn": "LSAG.verify",
      "offset": [
        3059,
        3060
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2004": {
      "fn": "LSAG.verify",
      "offset": [
        3029,
        3039
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "2007": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3029,
        3061
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2008": {
      "fn": "LSAG.verify",
      "offset": [
        3029,
        3061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2009": {
      "fn": "LSAG.verify",
      "offset": [
        3023,
        3061
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2010": {
      "fn": "LSAG.verify",
      "offset": [
        3023,
        3061
      ],
      "op": "POP",
      "path": "2"
    },
    "2011": {
      "fn": "LSAG.verify",
      "offset": [
        3105,
        3106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2013": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3095
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2014": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3102
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2015": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E8"
    },
    "2018": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3106
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2019": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3106
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2020": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDCF"
    },
    "2023": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3085,
        3106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2024": {
      "fn": "LSAG.verify",
      "offset": [
        3085,
        3106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2025": {
      "fn": "LSAG.verify",
      "offset": [
        3080,
        3081
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2026": {
      "branch": 20,
      "fn": "LSAG.verify",
      "offset": [
        3080,
        3106
      ],
      "op": "EQ",
      "path": "2"
    },
    "2027": {
      "fn": "LSAG.verify",
      "offset": [
        3076,
        3382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x821"
    },
    "2030": {
      "branch": 20,
      "fn": "LSAG.verify",
      "offset": [
        3076,
        3382
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2031": {
      "fn": "LSAG.verify",
      "offset": [
        3130,
        3367
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x81E"
    },
    "2034": {
      "fn": "LSAG.verify",
      "offset": [
        3196,
        3202
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2035": {
      "fn": "LSAG.verify",
      "offset": [
        3228,
        3236
      ],
      "op": "DUP12",
      "path": "2"
    },
    "2036": {
      "fn": "LSAG.verify",
      "offset": [
        3262,
        3269
      ],
      "op": "DUP15",
      "path": "2"
    },
    "2037": {
      "fn": "LSAG.verify",
      "offset": [
        3295,
        3298
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2038": {
      "fn": "LSAG.verify",
      "offset": [
        3324,
        3327
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2039": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2041": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2042": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2044": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "ADD",
      "path": "2"
    },
    "2045": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80A"
    },
    "2048": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2049": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2050": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2051": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2052": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2053": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2054": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE6"
    },
    "2057": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3154,
        3349
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2058": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2059": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2061": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2062": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2064": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2065": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2066": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SUB",
      "path": "2"
    },
    "2067": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SUB",
      "path": "2"
    },
    "2068": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2069": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2070": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2071": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2073": {
      "fn": "LSAG.verify",
      "offset": [
        3154,
        3349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2074": {
      "fn": "LSAG.verify",
      "offset": [
        3130,
        3132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "2077": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3130,
        3367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2078": {
      "fn": "LSAG.verify",
      "offset": [
        3130,
        3367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2079": {
      "fn": "LSAG.verify",
      "offset": [
        3126,
        3367
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2080": {
      "fn": "LSAG.verify",
      "offset": [
        3126,
        3367
      ],
      "op": "POP",
      "path": "2"
    },
    "2081": {
      "fn": "LSAG.verify",
      "offset": [
        3076,
        3382
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2082": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 15
    },
    "2083": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82B"
    },
    "2086": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2087": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB6"
    },
    "2090": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        2950,
        2953
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2091": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2092": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2093": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "POP",
      "path": "2"
    },
    "2094": {
      "fn": "LSAG.verify",
      "offset": [
        2950,
        2953
      ],
      "op": "POP",
      "path": "2"
    },
    "2095": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x76B"
    },
    "2098": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2099": {
      "fn": "LSAG.verify",
      "offset": [
        2915,
        3392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2100": {
      "fn": "LSAG.verify",
      "offset": [
        3415,
        3588
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x84F"
    },
    "2103": {
      "fn": "LSAG.verify",
      "offset": [
        3465,
        3471
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2104": {
      "fn": "LSAG.verify",
      "offset": [
        3489,
        3497
      ],
      "op": "DUP12",
      "path": "2"
    },
    "2105": {
      "fn": "LSAG.verify",
      "offset": [
        3515,
        3522
      ],
      "op": "DUP15",
      "path": "2"
    },
    "2106": {
      "fn": "LSAG.verify",
      "offset": [
        3540,
        3543
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2107": {
      "fn": "LSAG.verify",
      "offset": [
        3561,
        3564
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2108": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2110": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2111": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2113": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "ADD",
      "path": "2"
    },
    "2114": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80A"
    },
    "2117": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2118": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2119": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2120": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2121": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2122": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2123": {
      "fn": "LSAG.verify",
      "offset": [
        3431,
        3578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE6"
    },
    "2126": {
      "fn": "LSAG.verify",
      "jump": "i",
      "offset": [
        3431,
        3578
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2127": {
      "fn": "LSAG.verify",
      "offset": [
        3415,
        3588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2128": {
      "fn": "LSAG.verify",
      "offset": [
        3409,
        3588
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2129": {
      "fn": "LSAG.verify",
      "offset": [
        3409,
        3588
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "2130": {
      "fn": "LSAG.verify",
      "offset": [
        3409,
        3588
      ],
      "op": "EQ",
      "path": "2"
    },
    "2131": {
      "fn": "LSAG.verify",
      "offset": [
        3409,
        3588
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "2132": {
      "fn": "LSAG.verify",
      "offset": [
        2104,
        3595
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "fn": "LSAG.verify",
      "jump": "o",
      "offset": [
        2104,
        3595
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2148": {
      "op": "MLOAD"
    },
    "2149": {
      "op": "DUP1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "op": "DUP1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2159": {
      "op": "SWAP1"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2162": {
      "op": "DUP3"
    },
    "2163": {
      "op": "MUL"
    },
    "2164": {
      "op": "DUP1"
    },
    "2165": {
      "op": "CALLDATASIZE"
    },
    "2166": {
      "op": "DUP4"
    },
    "2167": {
      "op": "CALLDATACOPY"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "op": "SWAP2"
    },
    "2170": {
      "op": "SWAP3"
    },
    "2171": {
      "op": "SWAP2"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "jump": "o",
      "op": "JUMP"
    },
    "2175": {
      "op": "JUMPDEST"
    },
    "2176": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2186": {
      "op": "MSTORE"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2191": {
      "op": "MSTORE"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2196": {
      "op": "REVERT"
    },
    "2197": {
      "op": "JUMPDEST"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2200": {
      "op": "DUP1"
    },
    "2201": {
      "op": "MLOAD"
    },
    "2202": {
      "op": "SWAP1"
    },
    "2203": {
      "op": "DUP2"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2214": {
      "op": "DUP2"
    },
    "2215": {
      "op": "GT"
    },
    "2216": {
      "op": "DUP3"
    },
    "2217": {
      "op": "DUP3"
    },
    "2218": {
      "op": "LT"
    },
    "2219": {
      "op": "OR"
    },
    "2220": {
      "op": "ISZERO"
    },
    "2221": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "2224": {
      "op": "JUMPI"
    },
    "2225": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "2228": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2231": {
      "jump": "i",
      "op": "JUMP"
    },
    "2232": {
      "op": "JUMPDEST"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2235": {
      "op": "MSTORE"
    },
    "2236": {
      "op": "SWAP1"
    },
    "2237": {
      "jump": "o",
      "op": "JUMP"
    },
    "2238": {
      "op": "JUMPDEST"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2241": {
      "op": "MLOAD"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2248": {
      "op": "NOT"
    },
    "2249": {
      "op": "AND"
    },
    "2250": {
      "op": "DUP2"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2261": {
      "op": "DUP2"
    },
    "2262": {
      "op": "GT"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "DUP3"
    },
    "2265": {
      "op": "LT"
    },
    "2266": {
      "op": "OR"
    },
    "2267": {
      "op": "ISZERO"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x8E7"
    },
    "2271": {
      "op": "JUMPI"
    },
    "2272": {
      "op": "PUSH2",
      "value": "0x8E7"
    },
    "2275": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2278": {
      "jump": "i",
      "op": "JUMP"
    },
    "2279": {
      "op": "JUMPDEST"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "op": "SWAP2"
    },
    "2284": {
      "op": "SWAP1"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "jump": "o",
      "op": "JUMP"
    },
    "2287": {
      "op": "JUMPDEST"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2290": {
      "op": "DUP3"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2293": {
      "op": "DUP4"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "SLT"
    },
    "2296": {
      "op": "PUSH2",
      "value": "0x900"
    },
    "2299": {
      "op": "JUMPI"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "REVERT"
    },
    "2304": {
      "op": "JUMPDEST"
    },
    "2305": {
      "op": "PUSH2",
      "value": "0x908"
    },
    "2308": {
      "op": "PUSH2",
      "value": "0x895"
    },
    "2311": {
      "jump": "i",
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "DUP1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2316": {
      "op": "DUP5"
    },
    "2317": {
      "op": "ADD"
    },
    "2318": {
      "op": "DUP6"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "GT"
    },
    "2321": {
      "op": "ISZERO"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x91A"
    },
    "2325": {
      "op": "JUMPI"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "REVERT"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "DUP5"
    },
    "2332": {
      "op": "JUMPDEST"
    },
    "2333": {
      "op": "DUP2"
    },
    "2334": {
      "op": "DUP2"
    },
    "2335": {
      "op": "LT"
    },
    "2336": {
      "op": "ISZERO"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x934"
    },
    "2340": {
      "op": "JUMPI"
    },
    "2341": {
      "op": "DUP1"
    },
    "2342": {
      "op": "CALLDATALOAD"
    },
    "2343": {
      "op": "DUP5"
    },
    "2344": {
      "op": "MSTORE"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2347": {
      "op": "SWAP4"
    },
    "2348": {
      "op": "DUP5"
    },
    "2349": {
      "op": "ADD"
    },
    "2350": {
      "op": "SWAP4"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x91C"
    },
    "2355": {
      "op": "JUMP"
    },
    "2356": {
      "op": "JUMPDEST"
    },
    "2357": {
      "op": "POP"
    },
    "2358": {
      "op": "SWAP1"
    },
    "2359": {
      "op": "SWAP6"
    },
    "2360": {
      "op": "SWAP5"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "op": "POP"
    },
    "2363": {
      "op": "POP"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "jump": "o",
      "op": "JUMP"
    },
    "2367": {
      "op": "JUMPDEST"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2370": {
      "op": "DUP1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2375": {
      "op": "DUP5"
    },
    "2376": {
      "op": "DUP7"
    },
    "2377": {
      "op": "SUB"
    },
    "2378": {
      "op": "SLT"
    },
    "2379": {
      "op": "ISZERO"
    },
    "2380": {
      "op": "PUSH2",
      "value": "0x954"
    },
    "2383": {
      "op": "JUMPI"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2386": {
      "op": "DUP1"
    },
    "2387": {
      "op": "REVERT"
    },
    "2388": {
      "op": "JUMPDEST"
    },
    "2389": {
      "op": "PUSH2",
      "value": "0x95E"
    },
    "2392": {
      "op": "DUP6"
    },
    "2393": {
      "op": "DUP6"
    },
    "2394": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2397": {
      "jump": "i",
      "op": "JUMP"
    },
    "2398": {
      "op": "JUMPDEST"
    },
    "2399": {
      "op": "SWAP6"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2402": {
      "op": "DUP6"
    },
    "2403": {
      "op": "ADD"
    },
    "2404": {
      "op": "CALLDATALOAD"
    },
    "2405": {
      "op": "SWAP6"
    },
    "2406": {
      "op": "POP"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2409": {
      "op": "SWAP1"
    },
    "2410": {
      "op": "SWAP5"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "CALLDATALOAD"
    },
    "2413": {
      "op": "SWAP4"
    },
    "2414": {
      "op": "SWAP3"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "jump": "o",
      "op": "JUMP"
    },
    "2419": {
      "op": "JUMPDEST"
    },
    "2420": {
      "op": "DUP1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2423": {
      "op": "JUMPDEST"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2426": {
      "op": "DUP2"
    },
    "2427": {
      "op": "LT"
    },
    "2428": {
      "op": "ISZERO"
    },
    "2429": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2432": {
      "op": "JUMPI"
    },
    "2433": {
      "op": "DUP2"
    },
    "2434": {
      "op": "MLOAD"
    },
    "2435": {
      "op": "DUP5"
    },
    "2436": {
      "op": "MSTORE"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2439": {
      "op": "SWAP4"
    },
    "2440": {
      "op": "DUP5"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "SWAP4"
    },
    "2443": {
      "op": "SWAP1"
    },
    "2444": {
      "op": "SWAP2"
    },
    "2445": {
      "op": "ADD"
    },
    "2446": {
      "op": "SWAP1"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "op": "PUSH2",
      "value": "0x977"
    },
    "2453": {
      "op": "JUMP"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "op": "POP"
    },
    "2459": {
      "jump": "o",
      "op": "JUMP"
    },
    "2460": {
      "op": "JUMPDEST"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2463": {
      "op": "DUP2"
    },
    "2464": {
      "op": "ADD"
    },
    "2465": {
      "op": "PUSH2",
      "value": "0x408"
    },
    "2468": {
      "op": "DUP3"
    },
    "2469": {
      "op": "DUP5"
    },
    "2470": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "2473": {
      "jump": "i",
      "op": "JUMP"
    },
    "2474": {
      "op": "JUMPDEST"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2477": {
      "op": "DUP1"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2480": {
      "op": "DUP1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2483": {
      "op": "DUP6"
    },
    "2484": {
      "op": "DUP8"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "op": "SLT"
    },
    "2487": {
      "op": "ISZERO"
    },
    "2488": {
      "op": "PUSH2",
      "value": "0x9C0"
    },
    "2491": {
      "op": "JUMPI"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2494": {
      "op": "DUP1"
    },
    "2495": {
      "op": "REVERT"
    },
    "2496": {
      "op": "JUMPDEST"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x9CA"
    },
    "2500": {
      "op": "DUP7"
    },
    "2501": {
      "op": "DUP7"
    },
    "2502": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2505": {
      "jump": "i",
      "op": "JUMP"
    },
    "2506": {
      "op": "JUMPDEST"
    },
    "2507": {
      "op": "SWAP4"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "PUSH2",
      "value": "0x9D9"
    },
    "2512": {
      "op": "DUP7"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2515": {
      "op": "DUP8"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2520": {
      "jump": "i",
      "op": "JUMP"
    },
    "2521": {
      "op": "JUMPDEST"
    },
    "2522": {
      "op": "SWAP4"
    },
    "2523": {
      "op": "SWAP7"
    },
    "2524": {
      "op": "SWAP4"
    },
    "2525": {
      "op": "SWAP6"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "CALLDATALOAD"
    },
    "2535": {
      "op": "SWAP2"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "CALLDATALOAD"
    },
    "2540": {
      "op": "SWAP1"
    },
    "2541": {
      "jump": "o",
      "op": "JUMP"
    },
    "2542": {
      "op": "JUMPDEST"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2548": {
      "op": "DUP4"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "SLT"
    },
    "2551": {
      "op": "PUSH2",
      "value": "0x9FF"
    },
    "2554": {
      "op": "JUMPI"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2557": {
      "op": "DUP1"
    },
    "2558": {
      "op": "REVERT"
    },
    "2559": {
      "op": "JUMPDEST"
    },
    "2560": {
      "op": "DUP2"
    },
    "2561": {
      "op": "CALLDATALOAD"
    },
    "2562": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2571": {
      "op": "DUP2"
    },
    "2572": {
      "op": "GT"
    },
    "2573": {
      "op": "ISZERO"
    },
    "2574": {
      "op": "PUSH2",
      "value": "0xA19"
    },
    "2577": {
      "op": "JUMPI"
    },
    "2578": {
      "op": "PUSH2",
      "value": "0xA19"
    },
    "2581": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2584": {
      "jump": "i",
      "op": "JUMP"
    },
    "2585": {
      "op": "JUMPDEST"
    },
    "2586": {
      "op": "PUSH2",
      "value": "0xA2C"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "ADD"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2595": {
      "op": "NOT"
    },
    "2596": {
      "op": "AND"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "PUSH2",
      "value": "0x8BE"
    },
    "2603": {
      "jump": "i",
      "op": "JUMP"
    },
    "2604": {
      "op": "JUMPDEST"
    },
    "2605": {
      "op": "DUP2"
    },
    "2606": {
      "op": "DUP2"
    },
    "2607": {
      "op": "MSTORE"
    },
    "2608": {
      "op": "DUP5"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2611": {
      "op": "DUP4"
    },
    "2612": {
      "op": "DUP7"
    },
    "2613": {
      "op": "ADD"
    },
    "2614": {
      "op": "ADD"
    },
    "2615": {
      "op": "GT"
    },
    "2616": {
      "op": "ISZERO"
    },
    "2617": {
      "op": "PUSH2",
      "value": "0xA41"
    },
    "2620": {
      "op": "JUMPI"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2623": {
      "op": "DUP1"
    },
    "2624": {
      "op": "REVERT"
    },
    "2625": {
      "op": "JUMPDEST"
    },
    "2626": {
      "op": "DUP2"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2629": {
      "op": "DUP6"
    },
    "2630": {
      "op": "ADD"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2633": {
      "op": "DUP4"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "op": "CALLDATACOPY"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "op": "SWAP2"
    },
    "2639": {
      "op": "DUP2"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2643": {
      "op": "ADD"
    },
    "2644": {
      "op": "SWAP2"
    },
    "2645": {
      "op": "SWAP1"
    },
    "2646": {
      "op": "SWAP2"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "SWAP4"
    },
    "2649": {
      "op": "SWAP3"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "POP"
    },
    "2653": {
      "jump": "o",
      "op": "JUMP"
    },
    "2654": {
      "op": "JUMPDEST"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2659": {
      "op": "DUP3"
    },
    "2660": {
      "op": "DUP5"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "op": "SLT"
    },
    "2663": {
      "op": "ISZERO"
    },
    "2664": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2667": {
      "op": "JUMPI"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2670": {
      "op": "DUP1"
    },
    "2671": {
      "op": "REVERT"
    },
    "2672": {
      "op": "JUMPDEST"
    },
    "2673": {
      "op": "DUP2"
    },
    "2674": {
      "op": "CALLDATALOAD"
    },
    "2675": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2684": {
      "op": "DUP2"
    },
    "2685": {
      "op": "GT"
    },
    "2686": {
      "op": "ISZERO"
    },
    "2687": {
      "op": "PUSH2",
      "value": "0xA87"
    },
    "2690": {
      "op": "JUMPI"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "DUP1"
    },
    "2694": {
      "op": "REVERT"
    },
    "2695": {
      "op": "JUMPDEST"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA93"
    },
    "2699": {
      "op": "DUP5"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "DUP6"
    },
    "2702": {
      "op": "ADD"
    },
    "2703": {
      "op": "PUSH2",
      "value": "0x9EE"
    },
    "2706": {
      "jump": "i",
      "op": "JUMP"
    },
    "2707": {
      "op": "JUMPDEST"
    },
    "2708": {
      "op": "SWAP5"
    },
    "2709": {
      "op": "SWAP4"
    },
    "2710": {
      "op": "POP"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "op": "POP"
    },
    "2713": {
      "op": "POP"
    },
    "2714": {
      "jump": "o",
      "op": "JUMP"
    },
    "2715": {
      "op": "JUMPDEST"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2720": {
      "op": "DUP3"
    },
    "2721": {
      "op": "DUP5"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "op": "SLT"
    },
    "2724": {
      "op": "ISZERO"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0xAAD"
    },
    "2728": {
      "op": "JUMPI"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2731": {
      "op": "DUP1"
    },
    "2732": {
      "op": "REVERT"
    },
    "2733": {
      "op": "JUMPDEST"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "CALLDATALOAD"
    },
    "2736": {
      "op": "SWAP2"
    },
    "2737": {
      "op": "SWAP1"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "jump": "o",
      "op": "JUMP"
    },
    "2740": {
      "op": "JUMPDEST"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2743": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2752": {
      "op": "DUP3"
    },
    "2753": {
      "op": "GT"
    },
    "2754": {
      "op": "ISZERO"
    },
    "2755": {
      "op": "PUSH2",
      "value": "0xACE"
    },
    "2758": {
      "op": "JUMPI"
    },
    "2759": {
      "op": "PUSH2",
      "value": "0xACE"
    },
    "2762": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2765": {
      "jump": "i",
      "op": "JUMP"
    },
    "2766": {
      "op": "JUMPDEST"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2770": {
      "op": "SHL"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "SWAP1"
    },
    "2775": {
      "jump": "o",
      "op": "JUMP"
    },
    "2776": {
      "op": "JUMPDEST"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2779": {
      "op": "DUP3"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2782": {
      "op": "DUP4"
    },
    "2783": {
      "op": "ADD"
    },
    "2784": {
      "op": "SLT"
    },
    "2785": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "2788": {
      "op": "JUMPI"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2791": {
      "op": "DUP1"
    },
    "2792": {
      "op": "REVERT"
    },
    "2793": {
      "op": "JUMPDEST"
    },
    "2794": {
      "op": "DUP2"
    },
    "2795": {
      "op": "CALLDATALOAD"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2798": {
      "op": "PUSH2",
      "value": "0xAFE"
    },
    "2801": {
      "op": "PUSH2",
      "value": "0xAF9"
    },
    "2804": {
      "op": "DUP4"
    },
    "2805": {
      "op": "PUSH2",
      "value": "0xAB4"
    },
    "2808": {
      "jump": "i",
      "op": "JUMP"
    },
    "2809": {
      "op": "JUMPDEST"
    },
    "2810": {
      "op": "PUSH2",
      "value": "0x8BE"
    },
    "2813": {
      "jump": "i",
      "op": "JUMP"
    },
    "2814": {
      "op": "JUMPDEST"
    },
    "2815": {
      "op": "DUP3"
    },
    "2816": {
      "op": "DUP2"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "2820": {
      "op": "SWAP3"
    },
    "2821": {
      "op": "SWAP1"
    },
    "2822": {
      "op": "SWAP3"
    },
    "2823": {
      "op": "SHL"
    },
    "2824": {
      "op": "DUP5"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "op": "DUP2"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "SWAP2"
    },
    "2829": {
      "op": "DUP2"
    },
    "2830": {
      "op": "DUP2"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "SWAP1"
    },
    "2833": {
      "op": "DUP7"
    },
    "2834": {
      "op": "DUP5"
    },
    "2835": {
      "op": "GT"
    },
    "2836": {
      "op": "ISZERO"
    },
    "2837": {
      "op": "PUSH2",
      "value": "0xB1D"
    },
    "2840": {
      "op": "JUMPI"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2843": {
      "op": "DUP1"
    },
    "2844": {
      "op": "REVERT"
    },
    "2845": {
      "op": "JUMPDEST"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "DUP7"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "JUMPDEST"
    },
    "2850": {
      "op": "DUP5"
    },
    "2851": {
      "op": "DUP2"
    },
    "2852": {
      "op": "LT"
    },
    "2853": {
      "op": "ISZERO"
    },
    "2854": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "2857": {
      "op": "JUMPI"
    },
    "2858": {
      "op": "PUSH2",
      "value": "0xB33"
    },
    "2861": {
      "op": "DUP9"
    },
    "2862": {
      "op": "DUP3"
    },
    "2863": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2866": {
      "jump": "i",
      "op": "JUMP"
    },
    "2867": {
      "op": "JUMPDEST"
    },
    "2868": {
      "op": "DUP4"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "SWAP2"
    },
    "2871": {
      "op": "DUP4"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "SWAP2"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2876": {
      "op": "ADD"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0xB21"
    },
    "2880": {
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "POP"
    },
    "2883": {
      "op": "SWAP7"
    },
    "2884": {
      "op": "SWAP6"
    },
    "2885": {
      "op": "POP"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "op": "POP"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "jump": "o",
      "op": "JUMP"
    },
    "2892": {
      "op": "JUMPDEST"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2895": {
      "op": "DUP1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2898": {
      "op": "DUP1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2903": {
      "op": "DUP7"
    },
    "2904": {
      "op": "DUP9"
    },
    "2905": {
      "op": "SUB"
    },
    "2906": {
      "op": "SLT"
    },
    "2907": {
      "op": "ISZERO"
    },
    "2908": {
      "op": "PUSH2",
      "value": "0xB64"
    },
    "2911": {
      "op": "JUMPI"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2914": {
      "op": "DUP1"
    },
    "2915": {
      "op": "REVERT"
    },
    "2916": {
      "op": "JUMPDEST"
    },
    "2917": {
      "op": "DUP6"
    },
    "2918": {
      "op": "CALLDATALOAD"
    },
    "2919": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2928": {
      "op": "DUP1"
    },
    "2929": {
      "op": "DUP3"
    },
    "2930": {
      "op": "GT"
    },
    "2931": {
      "op": "ISZERO"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0xB7C"
    },
    "2935": {
      "op": "JUMPI"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "DUP1"
    },
    "2939": {
      "op": "REVERT"
    },
    "2940": {
      "op": "JUMPDEST"
    },
    "2941": {
      "op": "PUSH2",
      "value": "0xB88"
    },
    "2944": {
      "op": "DUP10"
    },
    "2945": {
      "op": "DUP4"
    },
    "2946": {
      "op": "DUP11"
    },
    "2947": {
      "op": "ADD"
    },
    "2948": {
      "op": "PUSH2",
      "value": "0x9EE"
    },
    "2951": {
      "jump": "i",
      "op": "JUMP"
    },
    "2952": {
      "op": "JUMPDEST"
    },
    "2953": {
      "op": "SWAP7"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2957": {
      "op": "SWAP2"
    },
    "2958": {
      "op": "POP"
    },
    "2959": {
      "op": "DUP2"
    },
    "2960": {
      "op": "DUP9"
    },
    "2961": {
      "op": "ADD"
    },
    "2962": {
      "op": "CALLDATALOAD"
    },
    "2963": {
      "op": "SWAP6"
    },
    "2964": {
      "op": "POP"
    },
    "2965": {
      "op": "PUSH2",
      "value": "0xBA1"
    },
    "2968": {
      "op": "DUP10"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2971": {
      "op": "DUP11"
    },
    "2972": {
      "op": "ADD"
    },
    "2973": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2976": {
      "jump": "i",
      "op": "JUMP"
    },
    "2977": {
      "op": "JUMPDEST"
    },
    "2978": {
      "op": "SWAP5"
    },
    "2979": {
      "op": "POP"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2982": {
      "op": "DUP9"
    },
    "2983": {
      "op": "ADD"
    },
    "2984": {
      "op": "CALLDATALOAD"
    },
    "2985": {
      "op": "DUP2"
    },
    "2986": {
      "op": "DUP2"
    },
    "2987": {
      "op": "GT"
    },
    "2988": {
      "op": "ISZERO"
    },
    "2989": {
      "op": "PUSH2",
      "value": "0xBB5"
    },
    "2992": {
      "op": "JUMPI"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2995": {
      "op": "DUP1"
    },
    "2996": {
      "op": "REVERT"
    },
    "2997": {
      "op": "JUMPDEST"
    },
    "2998": {
      "op": "DUP9"
    },
    "2999": {
      "op": "ADD"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3002": {
      "op": "DUP2"
    },
    "3003": {
      "op": "ADD"
    },
    "3004": {
      "op": "DUP11"
    },
    "3005": {
      "op": "SGT"
    },
    "3006": {
      "op": "PUSH2",
      "value": "0xBC6"
    },
    "3009": {
      "op": "JUMPI"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3012": {
      "op": "DUP1"
    },
    "3013": {
      "op": "REVERT"
    },
    "3014": {
      "op": "JUMPDEST"
    },
    "3015": {
      "op": "DUP1"
    },
    "3016": {
      "op": "CALLDATALOAD"
    },
    "3017": {
      "op": "PUSH2",
      "value": "0xBD4"
    },
    "3020": {
      "op": "PUSH2",
      "value": "0xAF9"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "PUSH2",
      "value": "0xAB4"
    },
    "3027": {
      "jump": "i",
      "op": "JUMP"
    },
    "3028": {
      "op": "JUMPDEST"
    },
    "3029": {
      "op": "DUP2"
    },
    "3030": {
      "op": "DUP2"
    },
    "3031": {
      "op": "MSTORE"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3034": {
      "op": "SWAP2"
    },
    "3035": {
      "op": "SWAP1"
    },
    "3036": {
      "op": "SWAP2"
    },
    "3037": {
      "op": "SHL"
    },
    "3038": {
      "op": "DUP3"
    },
    "3039": {
      "op": "ADD"
    },
    "3040": {
      "op": "DUP5"
    },
    "3041": {
      "op": "ADD"
    },
    "3042": {
      "op": "SWAP1"
    },
    "3043": {
      "op": "DUP5"
    },
    "3044": {
      "op": "DUP2"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "SWAP1"
    },
    "3047": {
      "op": "DUP13"
    },
    "3048": {
      "op": "DUP4"
    },
    "3049": {
      "op": "GT"
    },
    "3050": {
      "op": "ISZERO"
    },
    "3051": {
      "op": "PUSH2",
      "value": "0xBF3"
    },
    "3054": {
      "op": "JUMPI"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3057": {
      "op": "DUP1"
    },
    "3058": {
      "op": "REVERT"
    },
    "3059": {
      "op": "JUMPDEST"
    },
    "3060": {
      "op": "SWAP3"
    },
    "3061": {
      "op": "DUP6"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "SWAP3"
    },
    "3064": {
      "op": "JUMPDEST"
    },
    "3065": {
      "op": "DUP3"
    },
    "3066": {
      "op": "DUP5"
    },
    "3067": {
      "op": "LT"
    },
    "3068": {
      "op": "ISZERO"
    },
    "3069": {
      "op": "PUSH2",
      "value": "0xC11"
    },
    "3072": {
      "op": "JUMPI"
    },
    "3073": {
      "op": "DUP4"
    },
    "3074": {
      "op": "CALLDATALOAD"
    },
    "3075": {
      "op": "DUP3"
    },
    "3076": {
      "op": "MSTORE"
    },
    "3077": {
      "op": "SWAP3"
    },
    "3078": {
      "op": "DUP6"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "SWAP3"
    },
    "3081": {
      "op": "SWAP1"
    },
    "3082": {
      "op": "DUP6"
    },
    "3083": {
      "op": "ADD"
    },
    "3084": {
      "op": "SWAP1"
    },
    "3085": {
      "op": "PUSH2",
      "value": "0xBF8"
    },
    "3088": {
      "op": "JUMP"
    },
    "3089": {
      "op": "JUMPDEST"
    },
    "3090": {
      "op": "SWAP7"
    },
    "3091": {
      "op": "POP"
    },
    "3092": {
      "op": "POP"
    },
    "3093": {
      "op": "POP"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3097": {
      "op": "DUP9"
    },
    "3098": {
      "op": "ADD"
    },
    "3099": {
      "op": "CALLDATALOAD"
    },
    "3100": {
      "op": "SWAP2"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "op": "DUP1"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "GT"
    },
    "3105": {
      "op": "ISZERO"
    },
    "3106": {
      "op": "PUSH2",
      "value": "0xC2A"
    },
    "3109": {
      "op": "JUMPI"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3112": {
      "op": "DUP1"
    },
    "3113": {
      "op": "REVERT"
    },
    "3114": {
      "op": "JUMPDEST"
    },
    "3115": {
      "op": "POP"
    },
    "3116": {
      "op": "PUSH2",
      "value": "0xC37"
    },
    "3119": {
      "op": "DUP9"
    },
    "3120": {
      "op": "DUP3"
    },
    "3121": {
      "op": "DUP10"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "op": "PUSH2",
      "value": "0xAD8"
    },
    "3126": {
      "jump": "i",
      "op": "JUMP"
    },
    "3127": {
      "op": "JUMPDEST"
    },
    "3128": {
      "op": "SWAP2"
    },
    "3129": {
      "op": "POP"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "op": "SWAP3"
    },
    "3132": {
      "op": "SWAP6"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "SWAP3"
    },
    "3135": {
      "op": "SWAP6"
    },
    "3136": {
      "op": "SWAP1"
    },
    "3137": {
      "op": "SWAP4"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "jump": "o",
      "op": "JUMP"
    },
    "3140": {
      "op": "JUMPDEST"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3145": {
      "op": "DUP3"
    },
    "3146": {
      "op": "DUP5"
    },
    "3147": {
      "op": "SUB"
    },
    "3148": {
      "op": "SLT"
    },
    "3149": {
      "op": "ISZERO"
    },
    "3150": {
      "op": "PUSH2",
      "value": "0xC56"
    },
    "3153": {
      "op": "JUMPI"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3156": {
      "op": "DUP1"
    },
    "3157": {
      "op": "REVERT"
    },
    "3158": {
      "op": "JUMPDEST"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3162": {
      "op": "DUP4"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "SLT"
    },
    "3165": {
      "op": "PUSH2",
      "value": "0xC65"
    },
    "3168": {
      "op": "JUMPI"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3171": {
      "op": "DUP1"
    },
    "3172": {
      "op": "REVERT"
    },
    "3173": {
      "op": "JUMPDEST"
    },
    "3174": {
      "op": "PUSH2",
      "value": "0xC6D"
    },
    "3177": {
      "op": "PUSH2",
      "value": "0x895"
    },
    "3180": {
      "jump": "i",
      "op": "JUMP"
    },
    "3181": {
      "op": "JUMPDEST"
    },
    "3182": {
      "op": "DUP1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3185": {
      "op": "DUP5"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "op": "DUP6"
    },
    "3188": {
      "op": "DUP2"
    },
    "3189": {
      "op": "GT"
    },
    "3190": {
      "op": "ISZERO"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3194": {
      "op": "JUMPI"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "DUP1"
    },
    "3198": {
      "op": "REVERT"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "DUP5"
    },
    "3201": {
      "op": "JUMPDEST"
    },
    "3202": {
      "op": "DUP2"
    },
    "3203": {
      "op": "DUP2"
    },
    "3204": {
      "op": "LT"
    },
    "3205": {
      "op": "ISZERO"
    },
    "3206": {
      "op": "PUSH2",
      "value": "0x934"
    },
    "3209": {
      "op": "JUMPI"
    },
    "3210": {
      "op": "DUP1"
    },
    "3211": {
      "op": "MLOAD"
    },
    "3212": {
      "op": "DUP5"
    },
    "3213": {
      "op": "MSTORE"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3216": {
      "op": "SWAP4"
    },
    "3217": {
      "op": "DUP5"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "SWAP4"
    },
    "3220": {
      "op": "ADD"
    },
    "3221": {
      "op": "PUSH2",
      "value": "0xC81"
    },
    "3224": {
      "op": "JUMP"
    },
    "3225": {
      "op": "JUMPDEST"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3228": {
      "op": "DUP2"
    },
    "3229": {
      "op": "ADD"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "DUP6"
    },
    "3235": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3238": {
      "jump": "i",
      "op": "JUMP"
    },
    "3239": {
      "op": "JUMPDEST"
    },
    "3240": {
      "op": "DUP3"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3243": {
      "op": "DUP4"
    },
    "3244": {
      "op": "ADD"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "SWAP4"
    },
    "3247": {
      "op": "SWAP3"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "op": "POP"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "jump": "o",
      "op": "JUMP"
    },
    "3252": {
      "op": "JUMPDEST"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3255": {
      "op": "DUP2"
    },
    "3256": {
      "op": "ADD"
    },
    "3257": {
      "op": "PUSH2",
      "value": "0xCC2"
    },
    "3260": {
      "op": "DUP3"
    },
    "3261": {
      "op": "DUP6"
    },
    "3262": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3265": {
      "jump": "i",
      "op": "JUMP"
    },
    "3266": {
      "op": "JUMPDEST"
    },
    "3267": {
      "op": "PUSH2",
      "value": "0x273"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3272": {
      "op": "DUP4"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "DUP5"
    },
    "3275": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3278": {
      "jump": "i",
      "op": "JUMP"
    },
    "3279": {
      "op": "JUMPDEST"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3284": {
      "op": "DUP3"
    },
    "3285": {
      "op": "DUP5"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "op": "SLT"
    },
    "3288": {
      "op": "ISZERO"
    },
    "3289": {
      "op": "PUSH2",
      "value": "0xCE1"
    },
    "3292": {
      "op": "JUMPI"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3295": {
      "op": "DUP1"
    },
    "3296": {
      "op": "REVERT"
    },
    "3297": {
      "op": "JUMPDEST"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "op": "MLOAD"
    },
    "3300": {
      "op": "SWAP2"
    },
    "3301": {
      "op": "SWAP1"
    },
    "3302": {
      "op": "POP"
    },
    "3303": {
      "jump": "o",
      "op": "JUMP"
    },
    "3304": {
      "op": "JUMPDEST"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3307": {
      "op": "DUP1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3310": {
      "op": "DUP4"
    },
    "3311": {
      "op": "DUP6"
    },
    "3312": {
      "op": "SUB"
    },
    "3313": {
      "op": "SLT"
    },
    "3314": {
      "op": "ISZERO"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0xCFB"
    },
    "3318": {
      "op": "JUMPI"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3321": {
      "op": "DUP1"
    },
    "3322": {
      "op": "REVERT"
    },
    "3323": {
      "op": "JUMPDEST"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "op": "DUP1"
    },
    "3327": {
      "op": "MLOAD"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3330": {
      "op": "SWAP1"
    },
    "3331": {
      "op": "SWAP2"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "op": "MLOAD"
    },
    "3334": {
      "op": "SWAP1"
    },
    "3335": {
      "op": "SWAP3"
    },
    "3336": {
      "op": "SWAP1"
    },
    "3337": {
      "op": "SWAP2"
    },
    "3338": {
      "op": "POP"
    },
    "3339": {
      "jump": "o",
      "op": "JUMP"
    },
    "3340": {
      "op": "JUMPDEST"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3345": {
      "op": "DUP3"
    },
    "3346": {
      "op": "DUP5"
    },
    "3347": {
      "op": "SUB"
    },
    "3348": {
      "op": "SLT"
    },
    "3349": {
      "op": "ISZERO"
    },
    "3350": {
      "op": "PUSH2",
      "value": "0xD1E"
    },
    "3353": {
      "op": "JUMPI"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3356": {
      "op": "DUP1"
    },
    "3357": {
      "op": "REVERT"
    },
    "3358": {
      "op": "JUMPDEST"
    },
    "3359": {
      "op": "DUP2"
    },
    "3360": {
      "op": "MLOAD"
    },
    "3361": {
      "op": "DUP1"
    },
    "3362": {
      "op": "ISZERO"
    },
    "3363": {
      "op": "ISZERO"
    },
    "3364": {
      "op": "DUP2"
    },
    "3365": {
      "op": "EQ"
    },
    "3366": {
      "op": "PUSH2",
      "value": "0x273"
    },
    "3369": {
      "op": "JUMPI"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3372": {
      "op": "DUP1"
    },
    "3373": {
      "op": "REVERT"
    },
    "3374": {
      "op": "JUMPDEST"
    },
    "3375": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3390": {
      "op": "MSTORE"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3395": {
      "op": "REVERT"
    },
    "3396": {
      "op": "JUMPDEST"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3399": {
      "op": "DUP2"
    },
    "3400": {
      "op": "MLOAD"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3403": {
      "op": "JUMPDEST"
    },
    "3404": {
      "op": "DUP2"
    },
    "3405": {
      "op": "DUP2"
    },
    "3406": {
      "op": "LT"
    },
    "3407": {
      "op": "ISZERO"
    },
    "3408": {
      "op": "PUSH2",
      "value": "0xD65"
    },
    "3411": {
      "op": "JUMPI"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3414": {
      "op": "DUP2"
    },
    "3415": {
      "op": "DUP6"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "DUP2"
    },
    "3418": {
      "op": "ADD"
    },
    "3419": {
      "op": "MLOAD"
    },
    "3420": {
      "op": "DUP7"
    },
    "3421": {
      "op": "DUP4"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "PUSH2",
      "value": "0xD4B"
    },
    "3428": {
      "op": "JUMP"
    },
    "3429": {
      "op": "JUMPDEST"
    },
    "3430": {
      "op": "DUP2"
    },
    "3431": {
      "op": "DUP2"
    },
    "3432": {
      "op": "GT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD74"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "DUP3"
    },
    "3441": {
      "op": "DUP7"
    },
    "3442": {
      "op": "ADD"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "JUMPDEST"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "op": "SWAP3"
    },
    "3447": {
      "op": "SWAP1"
    },
    "3448": {
      "op": "SWAP3"
    },
    "3449": {
      "op": "ADD"
    },
    "3450": {
      "op": "SWAP3"
    },
    "3451": {
      "op": "SWAP2"
    },
    "3452": {
      "op": "POP"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "jump": "o",
      "op": "JUMP"
    },
    "3455": {
      "op": "JUMPDEST"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD8B"
    },
    "3461": {
      "op": "DUP3"
    },
    "3462": {
      "op": "DUP6"
    },
    "3463": {
      "op": "PUSH2",
      "value": "0xD44"
    },
    "3466": {
      "jump": "i",
      "op": "JUMP"
    },
    "3467": {
      "op": "JUMPDEST"
    },
    "3468": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3471": {
      "op": "DUP2"
    },
    "3472": {
      "op": "DUP6"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3476": {
      "jump": "i",
      "op": "JUMP"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3480": {
      "op": "ADD"
    },
    "3481": {
      "op": "SWAP5"
    },
    "3482": {
      "op": "SWAP4"
    },
    "3483": {
      "op": "POP"
    },
    "3484": {
      "op": "POP"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "op": "POP"
    },
    "3487": {
      "jump": "o",
      "op": "JUMP"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3496": {
      "op": "SHL"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3499": {
      "op": "MSTORE"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3509": {
      "op": "REVERT"
    },
    "3510": {
      "op": "JUMPDEST"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3515": {
      "op": "DUP3"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "3520": {
      "op": "JUMPI"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "3524": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3527": {
      "jump": "i",
      "op": "JUMP"
    },
    "3528": {
      "op": "JUMPDEST"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "SWAP1"
    },
    "3534": {
      "jump": "o",
      "op": "JUMP"
    },
    "3535": {
      "op": "JUMPDEST"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3538": {
      "op": "DUP3"
    },
    "3539": {
      "op": "DUP3"
    },
    "3540": {
      "op": "LT"
    },
    "3541": {
      "op": "ISZERO"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xDE1"
    },
    "3545": {
      "op": "JUMPI"
    },
    "3546": {
      "op": "PUSH2",
      "value": "0xDE1"
    },
    "3549": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3552": {
      "jump": "i",
      "op": "JUMP"
    },
    "3553": {
      "op": "JUMPDEST"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "op": "SUB"
    },
    "3556": {
      "op": "SWAP1"
    },
    "3557": {
      "jump": "o",
      "op": "JUMP"
    },
    "3558": {
      "op": "JUMPDEST"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xDF2"
    },
    "3564": {
      "op": "DUP3"
    },
    "3565": {
      "op": "DUP9"
    },
    "3566": {
      "op": "PUSH2",
      "value": "0xD44"
    },
    "3569": {
      "jump": "i",
      "op": "JUMP"
    },
    "3570": {
      "op": "JUMPDEST"
    },
    "3571": {
      "op": "PUSH2",
      "value": "0xDFC"
    },
    "3574": {
      "op": "DUP2"
    },
    "3575": {
      "op": "DUP9"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3579": {
      "jump": "i",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "PUSH2",
      "value": "0xE09"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3586": {
      "op": "DUP3"
    },
    "3587": {
      "op": "ADD"
    },
    "3588": {
      "op": "DUP8"
    },
    "3589": {
      "op": "PUSH2",
      "value": "0xD44"
    },
    "3592": {
      "jump": "i",
      "op": "JUMP"
    },
    "3593": {
      "op": "JUMPDEST"
    },
    "3594": {
      "op": "SWAP1"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xE15"
    },
    "3599": {
      "op": "DUP2"
    },
    "3600": {
      "op": "DUP7"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3604": {
      "jump": "i",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0xE22"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3611": {
      "op": "DUP3"
    },
    "3612": {
      "op": "ADD"
    },
    "3613": {
      "op": "DUP6"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "3617": {
      "jump": "i",
      "op": "JUMP"
    },
    "3618": {
      "op": "JUMPDEST"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3621": {
      "op": "ADD"
    },
    "3622": {
      "op": "SWAP8"
    },
    "3623": {
      "op": "SWAP7"
    },
    "3624": {
      "op": "POP"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "POP"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "077a04084f9517af0ac8f8dc315da9e98d46c71e",
  "source": "pragma solidity ^0.8.5;\n\nimport \"./AltBn128.sol\";\n\n/*\nLinkable Spontaneous Anonymous Groups\nhttps://eprint.iacr.org/2004/027.pdf\n*/\n\nlibrary LSAG {\n    // abi.encodePacked is the \"concat\" or \"serialization\"\n    // of all supplied arguments into one long bytes value\n    // i.e. abi.encodePacked :: [a] -> bytes\n\n    /**\n    * Converts an integer to an elliptic curve point\n    */\n    function intToPoint(uint256 _x) public view\n        returns (uint256[2] memory)\n    {\n        uint256 x = _x;\n        uint256 y;\n        uint256 beta;\n\n        while (true) {\n            (beta, y) = AltBn128.evalCurve(x);\n\n            if (AltBn128.onCurveBeta(beta, y)) {\n                return [x, y];\n            }\n\n            x = AltBn128.addmodn(x, 1);\n        }\n    }\n\n    /**\n    * Returns an integer representation of the hash\n    * of the input\n    */\n    function H1(bytes memory b) public pure\n        returns (uint256)\n    {\n        return AltBn128.modn(uint256(keccak256(b)));\n    }\n\n    /**\n    * Returns elliptic curve point of the integer representation\n    * of the hash of the input\n    */\n    function H2(bytes memory b) public view\n        returns (uint256[2] memory)\n    {\n        return intToPoint(H1(b));\n    }\n\n    /**\n    * Helper function to calculate Z1\n    * Avoids stack too deep problem\n    */\n    function ringCalcZ1(\n        uint256[2] memory pubKey,\n        uint256 c,\n        uint256 s\n    ) public view\n        returns (uint256[2] memory)\n    {\n        return AltBn128.ecAdd(\n            AltBn128.ecMulG(s),\n            AltBn128.ecMul(pubKey, c)\n        );\n    }\n\n    /**\n    * Helper function to calculate Z2\n    * Avoids stack too deep problem\n    */\n    function ringCalcZ2(\n        uint256[2] memory keyImage,\n        uint256[2] memory h,\n        uint256 s,\n        uint256 c\n    ) public view\n        returns (uint256[2] memory)\n    {\n        return AltBn128.ecAdd(\n            AltBn128.ecMul(h, s),\n            AltBn128.ecMul(keyImage, c)\n        );\n    }\n\n\n    /**\n    * Verifies the ring signature\n    * Section 4.2 of the paper https://eprint.iacr.org/2004/027.pdf\n    */\n    function verify(\n        bytes memory message,\n        uint256 c0,\n        uint256[2] memory keyImage,\n        uint256[] memory s,\n        uint256[2][] memory publicKeys\n    ) public view\n        returns (bool)\n    {\n        require(publicKeys.length >= 2, \"Signature size too small\");\n        require(publicKeys.length == s.length, \"Signature sizes do not match!\");\n\n        uint256 c = c0;\n        uint256 i = 0;\n\n        // Step 1\n        // Extract out public key bytes\n        bytes memory hBytes = \"\";\n\n        for (i = 0; i < publicKeys.length; i++) {\n            hBytes = abi.encodePacked(\n                hBytes,\n                publicKeys[i]\n            );\n        }\n\n        uint256[2] memory h = H2(hBytes);\n\n        // Step 2\n        uint256[2] memory z_1;\n        uint256[2] memory z_2;\n\n\n        for (i = 0; i < publicKeys.length; i++) {\n            z_1 = ringCalcZ1(publicKeys[i], c, s[i]);\n            z_2 = ringCalcZ2(keyImage, h, s[i], c);\n\n            if (i != publicKeys.length - 1) {\n                c = H1(\n                    abi.encodePacked(\n                        hBytes,\n                        keyImage,\n                        message,\n                        z_1,\n                        z_2\n                    )\n                );\n            }\n        }\n\n        return c0 == H1(\n            abi.encodePacked(\n                hBytes,\n                keyImage,\n                message,\n                z_1,\n                z_2\n            )\n        );\n    }\n}",
  "sourceMap": "133:3464:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;133:3464:2;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/lib/LSAG.sol",
  "type": "library"
}